{"version":3,"sources":["Image/pencil.jpg","Image/move.jpg","Image/pencil-white.png","Image/ruber.png","Image/move-white.jpg","Image/ruber-white.png","Image/color-wheel.png","Functionality/Paint.jsx","Functionality/Mouse.jsx","Component/ToolBarComponent/Eraser.jsx","Component/ToolBarComponent/Pencil.jsx","Component/ToolBarComponent/Move.jsx","Component/ToolBarComponent/Filter.jsx","Component/ToolBarComponent/Resize.jsx","Component/ToolBarComponent/Shape.jsx","Component/ToolBarComponent/Text.jsx","Component/ToolBarComponent/Bucket.jsx","Component/ToolBarComponent/BezierCurve.jsx","Component/ToolBarComponent/ColorPallete.jsx","Component/ToolBar.jsx","Component/Settings.jsx","Component/Header.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Paint","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getPosition","pos","lastPointerPositionTemp","startPainting","child","img","mode","stage","isGroup","color","sizePencil","brush","sizeEraser","ctx","getImage","getContext","elBrushOptions","document","querySelectorAll","lineWidth","globalCompositeOperation","lineJoin","lineCap","shadowBlur","shadowColor","forEach","brushOptions","_index","value","querySelector","selectedIndex","strokeStyle","beginPath","groupX","groupY","transformerX","transformerY","transformerWidth","transformerHeight","group","find","layer","undefined","parent","x","scaleX","y","scaleY","clipWidth","width","clipHeight","height","localPos","moveTo","getPointerPosition","localPositionTMP","getRandomFloat","min","max","Math","random","i","angle","PI","radius","fillStyle","fillRect","cos","sin","alert","lineTo","closePath","stroke","draw","retutnLocalPos","React","Component","Mouse","appState","shape","scroll","e","scaleBy","stageWidth","round","target","style","toString","oldScale","mousePointTo","newScale","deltaY","scale","newPos","position","l","lenght","anchorSize","mouseUp","state","isDrawing","isMouseOnCanvas","mouseDown","event","evt","button","lastPointerPosition","mouseMove","layerManagement","stageLayer","children","_layersManagement","_stageLayers","activeLayer","key","_id","_children","id","dragGroup","layerFromManagement","layerFromStage","ch","preventMouseOverCanvas","className","mouseCircle","el","substr","size","parseInt","window","getComputedStyle","left","top","backgroundColor","display","dragLayerManagement","node","lm","pos1","pos2","pos3","pos4","addEventListener","dragMouseDown","oncontextmenu","navBar","footer","navBarHeight","footerHeight","innerWidth","onmouseup","onmousemove","tmpLeft","innerHeight","tmpTop","preventDefault","clientX","clientY","closeDragElement","elementDrag","offsetTop","offsetLeft","resizeElement","who","elResizer","onmousedown","Eraser","off","image","Image","src","ruber","stateClick","onload","setState","mouseClick","offAllButtons","elMove","removeAttribute","ruberWhite","changeMode","name","_this2","_this3","react_default","a","createElement","onMouseMove","onClick","Pencil","pencil","pencilWhite","ref","Move","move","moveWhite","Filter","filter","filterWhite","Resize","resize","resizeWhite","addResize","returnLayerManagement","returnStage","transformer","Konva","Transformer","rotateEnabled","preventMultipleFor2","currentIndex","index","_l","lastIndex","moveToTop","attachTo","add","click","preventMultipleFor3","removeChildren","moveDown","Shape","createRect","canvas","drawingPlace","shapeDrawingPlace","Rect","fill","Group","createStar","Star","numPoints","innerRadius","outerRadius","createArrow","Arrow","pointerLength","pointerWidth","strokeWidth","createCircle","Circle","createEllipse","Ellipse","retutnShapeDrawingPlace","shapeWhite","Text","text","createTextArea","textNode","fontSize","on","textPosition","getAbsolutePosition","stageBox","getContainer","getBoundingClientRect","areaPosition","textarea","body","appendChild","focus","keyCode","removeChild","changeText","textWhite","Bucket","bucket","bucketWhite","BezierCurve","bezier","modifyBezier","createBezier","bezierSize","console","log","visible","createAnchor","anchor","draggable","bezierWhite","ColorPallete","context","xx","nativeEvent","yy","pixel","getImageData","data","mosueClick","R","G","B","A","colorString","concat","r","getElementById","g","b","changeColor","colorWheel","drawImage","onMouseDown","ToolBar","stateMode","bezierMode","layers","returnStateBezier","buttonTab","preventMultipleFor4","preventMultipleFor5","dataFromColorPallete","dataFromText","returnColor","push","eraser","Eraser_Eraser","Pencil_Pencil","Move_Move","Filter_Filter","Resize_Resize","Shape_Shape","Text_Text","Bucket_Bucket","BezierCurve_BezierCurve","ColorPallete_ColorPallete","Settings","setSizePencil","changeSizePencil","setSizeBezier","changeSizeBezier","setSizeEraser","changeSizeEraser","setColor","setBrush","changeBrush","setFilter","_this$state","valueBlur","valueBrightness","valueContrast","valueGrayscale","valueHueRotate","valueInvert","valueOpacity","valueSaturate","valueSepia","changeFilter","setShape","whichShape","changeShape","setBezier","whichBezier","changeBezier","resetFilter","changeOptionsMode","_this$state2","valueSizePencil","valueSizeEraser","valueSizeBezier","modes","PENCIL","htmlFor","type","onMouseLeave","blur","select","onChange","ERASER","FILTER","SHAPE","BEZIER","MOVE","colorBox","regExp","RegExp","splitEl","split","Header","exitCanvasOptions","popCanvasOptions","addImage","saveImg","AppTest","selectLayerManagementElColor","elLayerManagement","elInvisibleBtn","attributes","dataFromToolBar","buttonFromToolBar","dataFromSettings","sizeBezier","dataFromFilter","canvasOptions","back","zIndex","newFile","canvasHeightOptions","canvasWidthOptions","newFileTMP","preventCenter","getStage","isNaN","_layer","defaultLayer","Layer","border","layers_TMP","splice","length","widthFrame","heightFrame","addLayer","addDrawingCanvas","isImg","tmpX","tmpY","tmpScaleX","tmpScaleY","breaker","imgPlace","files","FR","FileReader","result","readAsDataURL","filterTab","childrenCanvas","_layers","_shape","_groupChildren","abs","radiusX","radiusY","points","point","toCanvas","saveGroupURL","toDataURL","downloadImg","clip","layerTMP","nodeType","isVisible","clickLayer","_this$state3","setInvisible","removeLayer","getLayer","remove","displayLayer","moveLayerUpOrBottom","buttonUpClick","tmpLayerManagement","preventMoveToTheBottom","Array","prototype","from","to","moveUp","Function","saveAnchors","tmpPointerPosition","anchorLocation","start","center","end","saveFirstBezierPosition","saveCanvas","saveBezier","endPaintShape","anchors","clearRect","attrs","bezierCurveTo","clipFunc","tabX","tabY","MaxX","apply","MaxY","MinY","MinX","rect","localPos2","centerX","centerY","uri","link","download","href","_this4","Header_Header","clearDrawingPlace","clearAll","map","ToolBar_ToolBar","tob","Settings_Settings","lib","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","App_AppTest","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.67b25d30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pencil.c3992041.jpg\";","module.exports = __webpack_public_path__ + \"static/media/move.b10cd0bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pencil-white.09f9d692.png\";","module.exports = __webpack_public_path__ + \"static/media/ruber.1fdf0851.png\";","module.exports = __webpack_public_path__ + \"static/media/move-white.329c531d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ruber-white.8c702c16.png\";","module.exports = __webpack_public_path__ + \"static/media/color-wheel.0fc36b2a.png\";","import React from 'react';\n\nexport default class Paint extends React.Component {\n    constructor(props) {\n        super(props);\n        this.lastPointerPositionTemp = 0;\n        this.localPositionTMP = {};\n    }\n\n    getPosition = (pos) => {\n        this.lastPointerPositionTemp = pos;\n    }\n    \n    startPainting = (child, img, mode, stage, isGroup, color, sizePencil, brush, sizeEraser) => {\n        if (!child) {\n            return;\n        }\n        let can = child.getImage();\n        let ctx = can.getContext('2d');\n        const elBrushOptions = document.querySelectorAll('.brush-list option');\n        if (mode === 'pencil') {\n            ctx.lineWidth = sizePencil;\n            ctx.globalCompositeOperation = 'source-over';\n        }\n        else if (mode === 'eraser') {\n            ctx.lineWidth = sizeEraser;\n            ctx.lineJoin = \"round\";\n            ctx.lineCap = \"round\";\n            ctx.shadowBlur = null;\n            ctx.shadowColor = null;\n            ctx.globalCompositeOperation = 'destination-out';\n        } else \n            return;\n\n        elBrushOptions.forEach((brushOptions, _index) => {\n            if (brushOptions.value === brush) {\n                document.querySelector('.brush-list').selectedIndex = _index ;\n            }\n        });\n        \n        ctx.strokeStyle = color;\n        \n        ctx.beginPath();\n        const group = stage.find('Group');\n        const layer = stage.find('Layer');\n        let density = 50;\n        let groupX;\n        let groupY;\n        let transformerX;\n        let transformerY;\n        let transformerWidth;\n        let transformerHeight;\n        \n        if (group[0] === undefined || isGroup === false) {\n            groupX = 0;\n            groupY = 0;\n            transformerX = 1;\n            transformerY = 1;\n            transformerWidth = 1;\n            transformerHeight = 1;\n        } else {\n            // child.parent is a group \n            groupX = child.parent.x() * stage.scaleX();\n            groupY = child.parent.y() * stage.scaleY();\n            transformerX = child.parent.scaleX();\n            transformerY = child.parent.scaleY();\n            // This is because i set width and height in group in App.jsx\n            transformerWidth = child.parent.parent.clipWidth() / child.parent.width();\n            transformerHeight = child.parent.parent.clipHeight() / child.parent.height();\n        }\n\n        // img = shape, layer[0] = layer\n        let localPos = {\n            x: (((this.lastPointerPositionTemp.x\n                - img.x()\n                - layer[0].x()\n                - stage.x()\n                - groupX) * transformerWidth)\n                / stage.scaleX())\n                / transformerX,\n\n            y: (((this.lastPointerPositionTemp.y\n                - img.y()\n                - layer[0].y()\n                - stage.y()\n                - groupY) * transformerHeight)\n                / stage.scaleY())\n                / transformerY,\n        }\n        if (brush !== 'spray' || mode === 'eraser')\n            ctx.moveTo(localPos.x, localPos.y);\n\n        let pos = stage.getPointerPosition();\n\n        localPos = {\n            x: (((pos.x\n                - img.x()\n                - layer[0].x()\n                - stage.x()\n                - groupX) * transformerWidth)\n                / stage.scaleX())\n                / transformerX,\n\n            y: (((pos.y\n                - img.y()\n                - layer[0].y()\n                - stage.y()\n                - groupY) * transformerHeight)\n                / stage.scaleY())\n                / transformerY,\n        }\n        this.localPositionTMP = {\n            x: localPos.x,\n            y: localPos.y,\n        };\n        if (mode !== 'eraser') {\n            switch (brush) {\n                case 'default':\n                    ctx.lineJoin = \"round\";\n                    ctx.lineCap = \"round\";\n                    ctx.shadowBlur = null;\n                    ctx.shadowColor = null;\n                    break;\n\n                case 'shadow':\n                    ctx.lineJoin = \"round\";\n                    ctx.lineCap = \"round\";\n                    ctx.shadowBlur = sizePencil;\n                    ctx.shadowColor = color;\n                    break;\n\n                case 'thick-brush':\n                    ctx.shadowBlur = null;\n                    ctx.shadowColor = null;\n                    ctx.lineJoin = 'miter';\n                    ctx.lineCap = 'butt';\n                    break;\n\n                case 'spray':\n                    function getRandomFloat(min, max) {\n                        return Math.random() * (max - min) + min;\n                    }\n\n                    for (var i = density; i--;) {\n                        var angle = getRandomFloat(0, Math.PI * 2);\n                        var radius = getRandomFloat(0, sizePencil);\n                        ctx.fillStyle = color;\n                        ctx.fillRect(\n                            localPos.x + radius * Math.cos(angle),\n                            localPos.y + radius * Math.sin(angle),\n                            1, 1);\n                    }\n                    break;\n\n                default:\n                    alert('Brush is undefined');\n                    break;\n            }\n        }\n        // group[0].width(localPos.x);\n        // group[0].height(localPos.y);\n        // group[0].children[0].width(localPos.x);\n        // group[0].children[0].height(localPos.y);\n        // group[0].children[1].width(localPos.x);\n        // group[0].children[1].height(localPos.y);\n\n        if (brush !== 'spray' || mode === 'eraser') {\n            ctx.lineTo(localPos.x, localPos.y);\n            ctx.closePath();\n            ctx.stroke();\n        }\n\n        this.lastPointerPositionTemp = pos;\n        stage.draw();\n    }\n    retutnLocalPos = () => {\n    }\n}","import React from 'react';\nimport Konva from 'konva';\nimport Paint from './Paint.jsx';\n\nexport default class Mouse extends React.Component {\n    constructor(props, stage, appState, mode, color, sizePencil, brush, sizeEraser, shape) {\n        super(props);\n\n        this.stage = stage;\n        this.appState = appState;\n        this.mode = mode;\n        this.color = color;\n        this.sizePencil = sizePencil;\n        this.brush = brush;\n        this.sizeEraser = sizeEraser;\n        this.shape = shape;\n        \n        this.state = {\n            isDrawing: false,\n            isMouseOnCanvas: false,\n            lastPointerPosition: 0,\n        }\n\n        this.Paint = new Paint(props);\n    }\n\n    scroll = (e, scaleBy) => {\n        let stageWidth = Math.round(this.stage.width() * 100) / 100;\n        if (e.target.style.width === stageWidth.toString() + 'px') {\n            var oldScale = this.stage.scaleX();\n\n            var mousePointTo = {\n                x: this.stage.getPointerPosition().x / oldScale - this.stage.x() / oldScale,\n                y: this.stage.getPointerPosition().y / oldScale - this.stage.y() / oldScale,\n            };\n\n            var newScale = e.deltaY < 0 ? oldScale * scaleBy : oldScale / scaleBy;\n            this.stage.scale({ x: newScale, y: newScale });\n\n            var newPos = {\n                x: -(mousePointTo.x - this.stage.getPointerPosition().x / newScale) * newScale,\n                y: -(mousePointTo.y - this.stage.getPointerPosition().y / newScale) * newScale\n            };\n            this.stage.position(newPos);\n            let l = this.stage.find('Transformer');\n            if (l.lenght > 0) {\n                l[0].anchorSize(10 + this.stage.scaleX());\n            }\n            this.stage.draw();\n        }\n    }\n\n    mouseUp = () => {\n        this.state.isDrawing = false;\n        this.state.isMouseOnCanvas = false;\n    }\n\n    mouseDown = (event) => {\n        // let e = window.event; FOR MAC OS\n        // if (e.button === 0) {\n            //     this.state.isDrawing = true;\n            //     this.state.isMouseOnCanvas = true;\n            //     this.state.lastPointerPosition = this.stage.getPointerPosition();\n            //     this.Paint.getPosition(this.state.lastPointerPosition);\n            // }\n        if (event.evt.button === 0) {\n            this.state.isDrawing = true;\n            this.state.isMouseOnCanvas = true;\n            this.state.lastPointerPosition = this.stage.getPointerPosition();\n            this.Paint.getPosition(this.state.lastPointerPosition);\n        }\n    }\n\n    mouseMove = (img) => {\n        const { layerManagement } = this.appState;\n        const stageLayer = this.stage.children;\n        let isGroup;\n\n        layerManagement.forEach(_layersManagement => {\n            stageLayer.forEach(_stageLayers => {\n                if (_layersManagement.activeLayer === 'true') {\n                    const { isDrawing } = this.state;\n                    const stage = this.stage;\n                    if (!isDrawing) {\n                        return;\n                    }\n                    if (_layersManagement.key === _stageLayers._id) {\n                        _stageLayers.children.forEach(_children => {\n                            // It's allow you to draw on previous layerManagement\n                            // It's divided like this because when I add image, img and draw  place are grouped\n                            if (_children.id() === 'drawingPlace') {\n                                isGroup = false;\n                                this.Paint.startPainting(_children, img, this.mode, stage, \n                                    isGroup, this.color, this.sizePencil, this.brush, this.sizeEraser);\n                            }\n\n                            if (_children.id() === 'group') {\n                                isGroup = true;\n                                this.Paint.startPainting(_children.children[1], img, this.mode, stage, \n                                    isGroup, this.color, this.sizePencil, this.brush, this.sizeEraser);\n                            }\n                        });\n                    }\n                }\n            });\n        });\n    }\n\n    /* NEW PROTOTYPE VERSION OF MOVE IMAGE */\n    dragGroup = () => {\n        const { layerManagement } = this.appState;\n        const stageLayer = this.stage.children;\n\n        layerManagement.forEach((layerFromManagement) => {\n            stageLayer.forEach(layerFromStage => {\n                if (layerFromManagement.activeLayer === 'true') {\n                    if (layerFromManagement.key === layerFromStage._id) {\n                        layerFromStage.children.forEach(ch => {\n                            if (ch.id() === 'group') {\n                                if (this.mode === 'move') {\n                                    let x = this.stage.getPointerPosition().x - this.stage.x();\n                                    let y = this.stage.getPointerPosition().y - this.stage.y();\n                                    ch.x(x / this.stage.scaleX());\n                                    ch.y(y / this.stage.scaleY());\n\n                                    this.stage.draw();\n                                }\n                            }\n                        });\n                    }\n                }\n            });\n        });\n    }\n\n    preventMouseOverCanvas = (e) => {\n        if (e.target.className === undefined) {\n            this.state.isDrawing = false;\n        }\n    }\n\n    mouseCircle = (e) => {\n        this.preventMouseOverCanvas(e);\n        const el = document.querySelector('.mouseCircle');\n        let tmpState = this.mode.substr(0, 3);\n        if (tmpState === 'no-' || this.mode === 'default') {\n            el.style.display = 'none';\n            return;\n        }\n\n        let size;\n        if (this.mode === 'pencil')\n            size = this.sizePencil;\n        else if (this.mode === 'eraser')\n            size = this.sizeEraser;\n\n        let width = parseInt(window.getComputedStyle(el).width, 10);\n        let height = parseInt(window.getComputedStyle(el).height, 10);\n        let x = this.stage.getPointerPosition().x;\n        let y = this.stage.getPointerPosition().y;\n        el.style.left = (x - (width / 2)) + 'px';\n        el.style.top = (y + 80 - (height / 2)) + 'px'; // 80 is header hight\n        el.style.width = (size * this.stage.scaleX()) + 'px';\n        el.style.height = (size * this.stage.scaleY()) + 'px';\n        if (this.mode === 'pencil')\n            el.style.backgroundColor = this.color;\n        else if (this.mode === 'eraser')\n            el.style.backgroundColor = '#fff';\n    }\n\n    dragLayerManagement = (node) => {\n        const lm = document.querySelector(node);\n        var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n        if (document.querySelector(node)) {\n            // document.querySelector(node).oncontextmenu = dragMouseDown;\n            document.querySelector(node).addEventListener('mousedown', (event) => {\n                if (event.button === 2)\n                    dragMouseDown(event);\n            });\n        } else\n            lm.oncontextmenu = dragMouseDown;\n            \n        let navBar = document.querySelector('.nav-bar');\n        let footer = document.querySelector('footer');\n\n        let x = parseInt(window.getComputedStyle(lm).left, 10);\n        let y = parseInt(window.getComputedStyle(lm).top, 10);\n\n        let width = parseInt(window.getComputedStyle(lm).width, 10);\n        let height = parseInt(window.getComputedStyle(lm).height, 10);\n\n        let navBarHeight = parseInt(window.getComputedStyle(navBar).height, 10);\n        let footerHeight = parseInt(window.getComputedStyle(footer).height, 10);\n\n        if (x + width > window.innerWidth - 5) {\n            document.onmouseup = null;\n            document.onmousemove = null;\n            let tmpLeft = (x + width) - (window.innerWidth - 5);\n            lm.style.left = (x - tmpLeft) + \"px\";\n        }\n        else if (y + height > window.innerHeight - footerHeight - 5) {\n            document.onmouseup = null;\n            document.onmousemove = null;\n            let tmpTop = (y - height) + (window.innerHeight - footerHeight - 5);\n            lm.style.top = ((tmpTop - (y - height) - height) + \"px\");\n            \n        }\n        else if (x < 5) {\n            document.onmouseup = null;\n            document.onmousemove = null;\n            let tmpLeft = x - window.innerWidth - 5;\n            lm.style.left = x - (tmpLeft + window.innerWidth) + \"px\";\n        }\n        else if (y < navBarHeight + 5) {\n            document.onmouseup = null;\n            document.onmousemove = null;\n            let tmpTop = y - navBarHeight - 5;\n            lm.style.top = (y - navBarHeight - 5) - \n                           (tmpTop - navBarHeight - 5) + \"px\";\n        }\n        function dragMouseDown(e) {\n            e = e || window.event;\n            e.preventDefault();\n            pos3 = e.clientX;\n            pos4 = e.clientY;\n            document.onmouseup = closeDragElement;\n            document.onmousemove = elementDrag;\n        }\n\n        function elementDrag(e) {\n            e = e || window.event;\n            e.preventDefault();\n            pos1 = pos3 - e.clientX;\n            pos2 = pos4 - e.clientY;\n            pos3 = e.clientX;\n            pos4 = e.clientY;\n            lm.style.top = (lm.offsetTop - pos2) + \"px\";\n            lm.style.left = (lm.offsetLeft - pos1) + \"px\";\n        }\n        \n        function closeDragElement() {\n            document.onmouseup = null;\n            document.onmousemove = null;\n        }\n    }\n\n    resizeElement = (node, who) => {\n        const elResizer = document.querySelector(node);\n        const el = document.querySelector(who);\n        if (document.querySelector(node)) {\n            document.querySelector(node).onmousedown = dragMouseDown;\n        } else {\n            elResizer.onmousedown = dragMouseDown;\n        }\n\n        function dragMouseDown(e) {\n            e = e || window.event;\n            e.preventDefault();\n            document.onmouseup = closeDragElement;\n            document.onmousemove = elementDrag;\n        }\n\n        function elementDrag(e) {\n            e = e || window.event;\n            e.preventDefault();\n            el.style.width = (e.clientX - el.offsetLeft) + 'px';\n            el.style.height = (e.clientY - el.offsetTop) + 'px';\n        }\n\n        function closeDragElement() {\n            document.onmouseup = null;\n            document.onmousemove = null;\n        }\n    }\n}","import React from 'react';\r\nimport ruber from '../../Image/ruber.png';\r\nimport ruberWhite from '../../Image/ruber-white.png';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class Eraser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            stateClick: false,\r\n            mode: 'eraser',\r\n            name: 'eraser',\r\n        };\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const image = new window.Image();\r\n        image.src = ruber;\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n            });\r\n        };\r\n    }\r\n\r\n    off = () => {\r\n        const image = new window.Image();\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.src = ruber;\r\n        this.state.mode = 'no-eraser';\r\n        this.state.stateClick = false;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n                stateClick: false,\r\n                mode: 'no-eraser',\r\n            });\r\n        };\r\n    }\r\n\r\n    mouseClick = () => {\r\n        const { stateClick } = this.state;\r\n        this.props.offAllButtons();\r\n        const elMove = document.querySelector('.eraser-img');\r\n        if (!stateClick) {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = ruberWhite;\r\n            this.state.mode = 'eraser';\r\n            elMove.id = 'eraser-id';\r\n            this.state.stateClick = true;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: true,\r\n                    mode: 'eraser',\r\n                });\r\n            };\r\n        } else {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = ruber;\r\n            this.state.mode = 'no-eraser';\r\n            elMove.removeAttribute('id');\r\n            this.state.stateClick = false;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: false,\r\n                    mode: 'no-eraser',\r\n                });\r\n            };\r\n        }\r\n        \r\n        this.props.changeMode(this.state.mode);\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state;\r\n        let img;\r\n\r\n        if (image === null)\r\n            img = <img />;\r\n        else {\r\n            img = <div className={'eraser'}\r\n                    onMouseMove={() => { this.Mouse.dragLayerManagement('.eraser') }}\r\n                    onClick={this.mouseClick}>\r\n                        <img src={image.src}\r\n                            width={image.width}\r\n                            height={image.height}\r\n                            className={'eraser-img'}\r\n                        />\r\n                        <div className='eraser-resize'\r\n                            onMouseMove={() => { \r\n                                this.Mouse.resizeElement('.eraser-resize', '.eraser')\r\n                            }}>\r\n                        </div>\r\n                </div>\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n} ","import React from 'react';\nimport pencil from '../../Image/pencil.jpg';\nimport pencilWhite from '../../Image/pencil-white.png';\nimport Mouse from '../../Functionality/Mouse';\n\nexport default class Pencil extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: null,\n            stateClick: false,\n            mode: 'pencil',\n            name: 'pencil',\n        };\n\n        this.Mouse = new Mouse();\n    }\n\n    componentDidMount() {\n        const image = new window.Image();\n        image.src = pencil;\n        image.width = 32;\n        image.height = 32;\n        image.onload = () => {\n            this.setState({\n                image: image,\n            });\n        };\n    }\n\n    off = () => {\n        const image = new window.Image();\n        image.width = 32;\n        image.height = 32;\n        image.src = pencil;\n        this.state.mode = 'no-pencil';\n        this.state.stateClick = false;\n        image.onload = () => {\n            this.setState({\n                image: image,\n                stateClick: false,\n                mode: 'no-pencil',\n            });\n        };\n    }\n\n    mouseClick = () => {\n        const { stateClick } = this.state;\n        this.props.offAllButtons();\n        const elMove = document.querySelector('.pencil-img');\n        if (!stateClick) {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = pencilWhite;\n            this.state.mode = 'pencil';\n            elMove.id = 'pencil-id';\n            this.state.stateClick = true;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: true,\n                    mode: 'pencil',\n                });\n            };\n        } else {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = pencil;\n            this.state.mode = 'no-pencil';\n            elMove.removeAttribute('id');\n            this.state.stateClick = false;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: false,\n                    mode: 'no-pencil',\n                });\n            };\n        }\n\n        this.props.changeMode(this.state.mode);\n    }\n\n    render() {\n        const { image } = this.state;\n        let img;\n\n        if (image === null)\n            img = <img \n                    ref={node => { this.pencil = node }}\n                    className={'pencil'}\n                />;\n        else\n            img = <div className={'pencil'}\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.pencil') }}\n                onClick={this.mouseClick}>\n                <img src={image.src}\n                    width={image.width}\n                    height={image.height}\n                    className={'pencil-img'}\n                />\n                <div className='pencil-resize'\n                    onMouseMove={() => {\n                        this.Mouse.resizeElement('.pencil-resize', '.pencil')\n                    }}>\n                </div>\n            </div>\n\n        return (\n            <div>\n                {img}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport move from '../../Image/move.jpg';\nimport moveWhite from '../../Image/move-white.jpg';\nimport Mouse from '../../Functionality/Mouse';\n\nexport default class Move extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: null,\n            stateClick: false,\n            mode: 'move',\n            name: 'move',\n        };\n\n        this.Mouse = new Mouse();\n    }\n    \n    componentDidMount() {\n        const image = new window.Image();\n        image.src = move;\n        image.width = 32;\n        image.height = 32;\n        image.onload = () => {\n            this.setState({\n                image: image,\n            });\n        };\n    }\n\n    off = () => {\n        const image = new window.Image();\n        image.width = 32;\n        image.height = 32;\n        image.src = move;\n        this.state.mode = 'no-move';\n        this.state.stateClick = false;\n        image.onload = () => {\n            this.setState({\n                image: image,\n                stateClick: false,\n                mode: 'no-move',\n            });\n        };\n    }\n\n    mouseClick = () => {\n        const {stateClick} = this.state;\n        this.props.offAllButtons();\n        const elMove = document.querySelector('.move-img');\n\n        if (!stateClick) {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = moveWhite;\n            this.state.mode = 'move';\n            elMove.id = 'move-id';\n            this.state.stateClick = true;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: true,\n                    mode: 'move',\n                });\n            };\n        } else {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = move;\n            this.state.mode = 'no-move';\n            elMove.removeAttribute('id');\n            this.state.stateClick = false;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: false,\n                    mode: 'no-move',\n                });\n            };\n        }\n\n        this.props.changeMode(this.state.mode);\n    }\n\n    render() {\n        const { image } = this.state;\n        let img;\n\n        if (image === null)\n            img = <img\n                ref={node => { this.pencil = node }}\n            />;\n        else\n            img = <div className={'move'}\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.move') }}\n                onClick={this.mouseClick}>\n                <img src={image.src}\n                    width={image.width}\n                    height={image.height}\n                    className={'move-img'}\n\n                />\n                <div className='move-resize'\n                    onMouseMove={() => {\n                        this.Mouse.resizeElement('.move-resize', '.move')\n                    }}>\n                </div>\n            </div>\n\n        return (\n            <div>\n                {img}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport filter from '../../Image/move.jpg';\nimport filterWhite from '../../Image/move-white.jpg';\nimport Mouse from '../../Functionality/Mouse';\n\nexport default class Filter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            image: null,\n            stateClick: false,\n            mode: 'filter',\n            name: 'filter',\n        };\n\n        this.Mouse = new Mouse();\n    }\n\n    componentDidMount() {\n        const image = new window.Image();\n        image.src = filter;\n        image.width = 32;\n        image.height = 32;\n        image.onload = () => {\n            this.setState({\n                image: image,\n            });\n        };\n    }\n\n    off = () => {\n        const image = new window.Image();\n        image.width = 32;\n        image.height = 32;\n        image.src = filter;\n        this.state.mode = 'no-filter';\n        this.state.stateClick = false;\n        image.onload = () => {\n            this.setState({\n                image: image,\n                stateClick: false,\n                mode: 'no-filter',\n            });\n        };\n    }\n\n    mouseClick = () => {\n        const { stateClick } = this.state;\n        this.props.offAllButtons();\n        const elMove = document.querySelector('.filter-img');\n        if (!stateClick) {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = filterWhite;\n            this.state.mode = 'filter';\n            elMove.id = 'filter-id';\n            this.state.stateClick = true;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: true,\n                    mode: 'filter',\n                });\n            };\n        } else {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = filter;\n            this.state.mode = 'no-filter';\n            elMove.removeAttribute('id');\n            this.state.stateClick = false;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: false,\n                    mode: 'no-filter',\n                });\n            };\n        }\n\n        this.props.changeMode(this.state.mode);\n    }\n\n    render() {\n        const { image } = this.state;\n        let img;\n\n        if (image === null)\n            img = <img />;\n        else\n            img = <div className={'filter'}\n                    onMouseMove={() => { this.Mouse.dragLayerManagement('.filter') }}\n                    onClick={this.mouseClick}>\n                        <img src={image.src}\n                            width={image.width}\n                            height={image.height}\n                            className={'filter-img'}\n                        />\n                <div className='filter-resize'\n                    onMouseMove={() => { \n                        this.Mouse.resizeElement('.filter-resize', '.filter') \n                    }}>\n                </div>\n            </div>\n\n        return (\n            <div>\n                {img}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Konva from 'konva';\nimport resize from '../../Image/pencil.jpg';\nimport resizeWhite from '../../Image/pencil-white.png';\nimport Mouse from '../../Functionality/Mouse';\n\nexport default class Resize extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: null,\n            stateClick: false,\n            mode: 'resize',\n            name: 'resize',\n        };\n\n        this.Mouse = new Mouse();\n    }\n\n    componentDidUpdate() {\n        this.preventMultipleFor2 = true;\n        this.preventMultipleFor3 = true;\n    }\n\n    componentDidMount() {\n        this.lastIndex = 0;\n        this.currentIndex = 0;\n\n        const image = new window.Image();\n        image.src = resize;\n        image.width = 32;\n        image.height = 32;\n        image.onload = () => {\n            this.setState({\n                image: image,\n            });\n        };\n    }\n\n    off = () => {\n        const image = new window.Image();\n        image.width = 32;\n        image.height = 32;\n        image.src = resize;\n        this.state.mode = 'no-resize';\n        this.state.stateClick = false;\n        image.onload = () => {\n            this.setState({\n                image: image,\n                stateClick: false,\n                mode: 'no-resize',\n            });\n        };\n    }\n\n    mouseClick = () => {\n        const { stateClick } = this.state;\n        this.props.offAllButtons();\n        const elMove = document.querySelector('.resize-img');\n        if (!stateClick) {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = resizeWhite;\n            this.state.mode = 'resize';\n            elMove.id = 'resize-id';\n            this.state.stateClick = true;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: true,\n                    mode: 'resize',\n                });\n            };\n        } else {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = resize;\n            this.state.mode = 'no-resize';\n            elMove.removeAttribute('id');\n            this.state.stateClick = false;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: false,\n                    mode: 'no-resize',\n                });\n            };\n        }\n        this.props.changeMode(this.state.mode);\n        this.addResize();\n    }\n    \n    addResize = () => {\n        const layerManagement = this.props.returnLayerManagement();\n        const stageLayer = this.props.returnStage().children;\n        const elMove = document.querySelector('.resize-img');\n\n        // let this.preventMultipleFor3 = true;\n\n        layerManagement.forEach((layerFromManagement) => {\n            stageLayer.forEach(layerFromStage => {\n                if (layerFromManagement.activeLayer === 'true') {\n                    if (layerFromManagement.key === layerFromStage._id) {\n                        const transformer = new Konva.Transformer({\n                            id: 'transformer',\n                            // anchorSize: 2,\n                            rotateEnabled: false, // For now rotate are disabled\n                        });\n                        layerFromStage.children.forEach(ch => {\n                            if (ch.id() === 'group') {\n                                if (this.state.mode === 'resize') {\n                                    // ch.draggable(true);\n                                    if (ch.children[0].className === 'Rect' \n                                        || ch.children[0].className === 'Star'\n                                        || ch.children[0].className === 'Arrow'\n                                        || ch.children[0].className === 'Circle' \n                                        || ch.children[0].className === 'Ellipse') {\n                                            transformer.rotateEnabled(true);\n                                        }\n\n                                    if (this.preventMultipleFor2) {\n                                        this.currentIndex = layerFromStage.index;\n                                        stageLayer.forEach(_l => {\n                                            this.lastIndex = _l.index;\n                                        });\n                                        layerFromStage.moveToTop();\n    \n    \n                                        let parent = ch.parent;\n                                        transformer.attachTo(ch);\n                                        parent.add(transformer);\n                                        let l = this.props.returnStage().find('Transformer');\n                                        l[0].anchorSize(10 + this.props.returnStage().scaleX());\n                                        \n                                        elMove.click();\n                                        elMove.click();\n                                        // transformer.getLayer().batchDraw();\n                                        this.props.returnStage().draw();\n                                        this.preventMultipleFor2 = false;\n\n                                    }\n                                }\n                                else if (this.state.mode === 'no-resize') {\n                                    if (this.preventMultipleFor3) {\n                                        let layer = ch.parent;\n                                        let children = ch.parent.children[0];\n                                        layer.removeChildren();\n                                        layer.add(children);\n                                        this.props.returnStage().draw();\n\n                                        // ch.draggable(false);\n                                        for (let i = 0; i < this.lastIndex - this.currentIndex; i++) {\n                                            layerFromStage.moveDown();\n                                        }\n                                        this.preventMultipleFor3 = false;\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n            });\n        });\n    }\n\n    render() {\n        const { image } = this.state;\n        let img;\n\n        if (image === null)\n            img = <img\n                ref={node => { this.resize = node }}\n                className={'resize'}\n            />;\n        else\n            img = <div className={'resize'}\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.resize') }}\n                onClick={this.mouseClick}>\n                <img src={image.src}\n                    width={image.width}\n                    height={image.height}\n                    className={'resize-img'}\n                />\n                <div className='resize-resize'\n                    onMouseMove={() => {\n                        this.Mouse.resizeElement('.resize-resize', '.resize')\n                    }}>\n                </div>\n            </div>\n\n        return (\n            <div>\n                {img}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Konva from 'konva';\nimport shape from '../../Image/pencil.jpg';\nimport shapeWhite from '../../Image/pencil-white.png';\nimport Mouse from '../../Functionality/Mouse';\n\nexport default class Shape extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: null,\n            stateClick: false,\n            mode: 'shape',\n            name: 'shape',\n        };\n\n        this.Mouse = new Mouse();\n    }\n\n    componentDidMount() {\n        this.shapeDrawingPlace = 0;\n        const image = new window.Image();\n        image.src = shape;\n        image.width = 32;\n        image.height = 32;\n        image.onload = () => {\n            this.setState({\n                image: image,\n            });\n        };\n    }\n\n    off = () => {\n        const image = new window.Image();\n        image.width = 32;\n        image.height = 32;\n        image.src = shape;\n        this.state.mode = 'no-shape';\n        this.state.stateClick = false;\n        image.onload = () => {\n            this.setState({\n                image: image,\n                stateClick: false,\n                mode: 'no-shape',\n            });\n        };\n    }\n\n    createRect = (canvas, _stageLayers, drawingPlace, color) => {\n        this.shapeDrawingPlace = drawingPlace;\n        const shape = new Konva.Rect({\n            id: 'rect',\n            fill: color,\n            name: 'shape',\n        });\n\n        const group = new Konva.Group({\n            id: 'group',\n        });\n\n        group.add(shape);\n        _stageLayers.add(group);\n    }\n\n    createStar = (canvas, _stageLayers, drawingPlace, color) => {\n        const shape = new Konva.Star({\n            x: -9999,\n            y: -9999,\n            numPoints: 5,\n            innerRadius: canvas.width / 4,\n            outerRadius: canvas.width / 4,\n            id: 'star',\n            fill: color,\n            name: 'shape',\n        });\n        const group = new Konva.Group({\n            id: 'group',\n        });\n\n        group.add(shape);\n        _stageLayers.add(group);\n    }\n\n    createArrow = (canvas, _stageLayers, drawingPlace, color) => {\n        const shape = new Konva.Arrow({\n            pointerLength: 20,\n            pointerWidth: 20,\n            id: 'arrow',\n            fill: color,\n            stroke: color,\n            strokeWidth: 4,\n            name: 'shape',\n        });\n\n        const group = new Konva.Group({\n            id: 'group',\n        });\n\n        group.add(shape);\n        _stageLayers.add(group);\n    }\n\n    createCircle = (canvas, _stageLayers, drawingPlace, color) => {\n        const shape = new Konva.Circle({\n            x: -9999,\n            y: -9999,\n            radius: 70,\n            id: 'circle',\n            fill: color,\n            stroke: color,\n            strokeWidth: 4,\n            name: 'shape',\n        });\n\n        const group = new Konva.Group({\n            id: 'group',\n        });\n\n        group.add(shape);\n        _stageLayers.add(group);\n    }\n\n    createEllipse = (canvas, _stageLayers, drawingPlace, color) => {\n        const shape = new Konva.Ellipse({\n            x: -9999,\n            y: -9999,\n            radius: {\n                x: 100,\n                y: 50,\n            },\n            id: 'ellipse',\n            fill: color,\n            stroke: color,\n            strokeWidth: 4,\n            name: 'shape',\n        });\n\n        const group = new Konva.Group({\n            id: 'group',\n        });\n\n        group.add(shape);\n        _stageLayers.add(group);\n    }\n\n    retutnShapeDrawingPlace = () => {\n        return this.shapeDrawingPlace;\n    }\n\n    mouseClick = () => {\n        const { stateClick } = this.state;\n        this.props.offAllButtons();\n        const elMove = document.querySelector('.shape-img');\n        if (!stateClick) {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = shapeWhite;\n            this.state.mode = 'shape';\n            elMove.id = 'shape-id';\n            this.state.stateClick = true;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: true,\n                    mode: 'shape',\n                });\n            };\n        } else {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = shape;\n            this.state.mode = 'no-shape';\n            elMove.removeAttribute('id');\n            this.state.stateClick = false;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: false,\n                    mode: 'no-shape',\n                });\n            };\n        }\n\n        this.props.changeMode(this.state.mode);\n    }\n\n    render() {\n        const { image } = this.state;\n        let img;\n\n        if (image === null)\n            img = <img\n                ref={node => { this.shape = node }}\n                className={'shape'}\n            />;\n        else\n            img = <div className={'shape'}\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.shape') }}\n                onClick={this.mouseClick}>\n                <img src={image.src}\n                    width={image.width}\n                    height={image.height}\n                    className={'shape-img'}\n                />\n                <div className='shape-resize'\n                    onMouseMove={() => {\n                        this.Mouse.resizeElement('.shape-resize', '.shape')\n                    }}>\n                </div>\n            </div>\n\n        return (\n            <div>\n                {img}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport text from '../../Image/pencil.jpg';\nimport Konva from 'konva';\nimport textWhite from '../../Image/pencil-white.png';\nimport Mouse from '../../Functionality/Mouse';\n\nexport default class Text extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: null,\n            stateClick: false,\n            mode: 'text',\n            name: 'text',\n        };\n\n        this.Mouse = new Mouse();\n    }\n\n    componentDidMount() {\n        const image = new window.Image();\n        image.src = text;\n        image.width = 32;\n        image.height = 32;\n        image.onload = () => {\n            this.setState({\n                image: image,\n            });\n        };\n    }\n\n    off = () => {\n        const image = new window.Image();\n        image.width = 32;\n        image.height = 32;\n        image.src = text;\n        this.state.mode = 'no-text';\n        this.state.stateClick = false;\n        image.onload = () => {\n            this.setState({\n                image: image,\n                stateClick: false,\n                mode: 'no-text',\n            });\n        };\n    }\n\n    createTextArea = (canvas, _stageLayers, drawingPlace, stage) => {\n        const textNode = new Konva.Text({\n            id: 'text',\n            fontSize: 20,\n        });\n\n        const group = new Konva.Group({\n            id: 'group',\n        });\n\n        group.add(textNode);\n        _stageLayers.add(group);\n        // console.log(_stageLayers);\n\n        textNode.on('dblclick', () => {\n            // create textarea over canvas with absolute position\n\n            // first we need to find its positon\n            var textPosition = textNode.getAbsolutePosition();\n            var stageBox = stage.getContainer().getBoundingClientRect();\n\n            var areaPosition = {\n                x: textPosition.x + stageBox.left,\n                y: textPosition.y + stageBox.top\n            };\n\n\n            // create textarea and style it\n            var textarea = document.createElement('textarea');\n            document.body.appendChild(textarea);\n\n            textarea.value = textNode.text();\n            textarea.style.position = 'absolute';\n            textarea.style.top = areaPosition.y + 'px';\n            textarea.style.left = areaPosition.x + 'px';\n            textarea.style.width = textNode.width();\n\n            textarea.focus();\n\n\n            textarea.addEventListener('keydown', function (e) {\n                // hide on enter\n                if (e.keyCode === 13) {\n                    textNode.text(textarea.value);\n                    stage.draw();\n                    document.body.removeChild(textarea);\n                }\n            });\n        });\n    }\n\n    mouseClick = () => {\n        const { stateClick } = this.state;\n        this.props.offAllButtons();\n        const elMove = document.querySelector('.text-img');\n        if (!stateClick) {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = textWhite;\n            this.state.mode = 'text';\n            elMove.id = 'text-id';\n            this.state.stateClick = true;\n            this.props.changeText('on');\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: true,\n                    mode: 'text',\n                });\n            };\n        } else {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = text;\n            this.state.mode = 'no-text';\n            elMove.removeAttribute('id');\n            this.state.stateClick = false;\n            this.props.changeText('off');\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: false,\n                    mode: 'no-text',\n                });\n            };\n        }\n\n        this.props.changeMode(this.state.mode);\n    }\n\n    render() {\n        const { image } = this.state;\n        let img;\n\n        if (image === null)\n            img = <img\n                ref={node => { this.text = node }}\n                className={'text'}\n            />;\n        else\n            img = <div className={'text'}\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.text') }}\n                onClick={this.mouseClick}>\n                <img src={image.src}\n                    width={image.width}\n                    height={image.height}\n                    className={'text-img'}\n                />\n                <div className='text-resize'\n                    onMouseMove={() => {\n                        this.Mouse.resizeElement('.text-resize', '.text')\n                    }}>\n                </div>\n            </div>\n\n        return (\n            <div>\n                {img}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport bucket from '../../Image/ruber.png';\nimport bucketWhite from '../../Image/ruber-white.png';\nimport Mouse from '../../Functionality/Mouse';\n\nexport default class Bucket extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: null,\n            stateClick: false,\n            mode: 'bucket',\n            name: 'bucket',\n        };\n\n        this.Mouse = new Mouse();\n    }\n\n    componentDidMount() {\n        const image = new window.Image();\n        image.src = bucket;\n        image.width = 32;\n        image.height = 32;\n        image.onload = () => {\n            this.setState({\n                image: image,\n            });\n        };\n    }\n\n    off = () => {\n        const image = new window.Image();\n        image.width = 32;\n        image.height = 32;\n        image.src = bucket;\n        this.state.mode = 'no-bucket';\n        this.state.stateClick = false;\n        image.onload = () => {\n            this.setState({\n                image: image,\n                stateClick: false,\n                mode: 'no-bucket',\n            });\n        };\n    }\n\n    mouseClick = () => {\n        const { stateClick } = this.state;\n        this.props.offAllButtons();\n        const elMove = document.querySelector('.bucket-img');\n        if (!stateClick) {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = bucketWhite;\n            this.state.mode = 'bucket';\n            elMove.id = 'bucket-id';\n            this.state.stateClick = true;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: true,\n                    mode: 'bucket',\n                });\n            };\n        } else {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = bucket;\n            this.state.mode = 'no-bucket';\n            elMove.removeAttribute('id');\n            this.state.stateClick = false;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: false,\n                    mode: 'no-bucket',\n                });\n            };\n        }\n\n        this.props.changeMode(this.state.mode);\n    }\n\n    render() {\n        const { image } = this.state;\n        let img;\n\n        if (image === null)\n            img = <img />;\n        else {\n            img = <div className={'bucket'}\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.bucket') }}\n                onClick={this.mouseClick}>\n                <img src={image.src}\n                    width={image.width}\n                    height={image.height}\n                    className={'bucket-img'}\n                />\n                <div className='bucket-resize'\n                    onMouseMove={() => {\n                        this.Mouse.resizeElement('.bucket-resize', '.bucket')\n                    }}>\n                </div>\n            </div>\n        }\n\n        return (\n            <div>\n                {img}\n            </div>\n        )\n    }\n} ","import React from 'react';\nimport Konva from 'konva';\nimport bezier from '../../Image/move.jpg';\nimport bezierWhite from '../../Image/move-white.jpg';\nimport Mouse from '../../Functionality/Mouse';\n\nexport default class BezierCurve extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: null,\n            stateClick: false,\n            mode: 'bezier',\n            name: 'bezier',\n        };\n\n        this.Mouse = new Mouse();\n    }\n\n    componentDidMount() {\n        const image = new window.Image();\n        image.src = bezier;\n        image.width = 32;\n        image.height = 32;\n        image.onload = () => {\n            this.setState({\n                image: image,\n            });\n        };\n    }\n\n    off = () => {\n        const image = new window.Image();\n        image.width = 32;\n        image.height = 32;\n        image.src = bezier;\n        this.state.mode = 'no-bezier';\n        this.state.stateClick = false;\n        image.onload = () => {\n            this.setState({\n                image: image,\n                stateClick: false,\n                mode: 'no-bezier',\n            });\n        };\n    }\n\n    modifyBezier = () => {\n        \n    }\n\n    createBezier = (canvas, _stageLayers, drawingPlace, stage, bezierSize, color) => {\n        let ctx = canvas.getContext('2d');\n\n        ctx.lineWidth = bezierSize;\n        console.log(bezierSize);\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.strokeStyle = color;\n\n        let img = new Konva.Image({\n            image: canvas,\n            id: 'bezierImage',\n            width: canvas.width,\n            height: canvas.height,\n            x: 0,\n            y: 0,\n            visible: true,\n        });\n\n        let group = new Konva.Group({\n            // width: canvas.width,\n            // height: canvas.height,\n            id: 'bezierGroup',\n        });\n\n        group.add(img);\n        _stageLayers.add(group);\n        stage.draw();\n    }\n\n    createAnchor = (x, y, stage) => {\n        let anchor = new Konva.Circle({\n            x: x,\n            y: y,\n            radius: 20,\n            stroke: '#666',\n            fill: '#ddd',\n            strokeWidth: 2,\n            draggable: true,\n            id: 'anchor'\n        });\n        let bezierGroup = stage.find('#bezierGroup');\n        bezierGroup[0].add(anchor);\n        stage.draw();\n\n        // anchor.on('dragend', () => {\n\n        // })\n    }\n\n    mouseClick = () => {\n        const { stateClick } = this.state;\n        this.props.offAllButtons();\n        const elMove = document.querySelector('.bezier-img');\n\n        if (!stateClick) {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = bezierWhite;\n            this.state.mode = 'bezier';\n            elMove.id = 'bezier-id';\n            this.state.stateClick = true;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: true,\n                    mode: 'bezier',\n                });\n            };\n        } else {\n            const image = new window.Image();\n            image.width = 32;\n            image.height = 32;\n            image.src = bezier;\n            this.state.mode = 'no-bezier';\n            elMove.removeAttribute('id');\n            this.state.stateClick = false;\n            image.onload = () => {\n                this.setState({\n                    image: image,\n                    stateClick: false,\n                    mode: 'no-bezier',\n                });\n            };\n        }\n\n        this.props.changeMode(this.state.mode);\n    }\n\n    render() {\n        const { image } = this.state;\n        let img;\n\n        if (image === null)\n            img = <img\n                ref={node => { this.pencil = node }}\n            />;\n        else\n            img = <div className={'bezier'}\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.bezier') }}\n                onClick={this.mouseClick}>\n                <img src={image.src}\n                    width={image.width}\n                    height={image.height}\n                    className={'bezier-img'}\n\n                />\n                <div className='bezier-resize'\n                    onMouseMove={() => {\n                        this.Mouse.resizeElement('.bezier-resize', '.bezier')\n                    }}>\n                </div>\n            </div>\n\n        return (\n            <div>\n                {img}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport colorWheel from '../../Image/color-wheel.png';\nimport Mouse from '../../Functionality/Mouse';\n\nexport default class ColorPallete extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            context: null,\n            pixel: null,\n        }\n        this.Mouse = new Mouse();\n    }\n\n    componentDidMount() {\n        this.canvas = document.querySelector('.colorPallete');\n        const context = this.canvas.getContext('2d');\n        const image = new window.Image();\n        this.canvas.width = 150;\n        this.canvas.height = 150;\n        image.src = colorWheel;\n        context.fillStyle = 'black';\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        image.onload = () => {\n            context.drawImage(image, 0, 0, this.canvas.width, this.canvas.height);\n            this.setState({\n                context: context,\n            });\n        };\n    }\n    \n    mouseMove = (e) => {\n        const { context } = this.state;\n        let xx = e.nativeEvent.clientX;\n        let yy = e.nativeEvent.clientY;\n        let image = {\n            x : parseInt(window.getComputedStyle(this.canvas).left, 10),\n            y : parseInt(window.getComputedStyle(this.canvas).top, 10),\n        }\n        \n        let pos = {\n            x: xx - image.x,\n            y: yy - image.y,\n        };\n        \n        let imageData = context.getImageData(pos.x, pos.y, 1, 1);\n        let pixel = imageData.data; \n        this.setState({\n            pixel: pixel,\n        });\n        this.Mouse.dragLayerManagement('.colorPallete');\n    }\n    \n    mosueClick = () => {\n        const {pixel} = this.state;\n        let color = {\n            R: pixel[0],\n            G: pixel[1],\n            B: pixel[2],\n            A: pixel[3],\n        }\n\n        let colorString = `rgba(${color.R},${color.G},${color.B},${color.A})`;\n        //Set value of rgba in settings options\n        const r = document.getElementById('color-R');\n        const g = document.getElementById('color-G');\n        const b = document.getElementById('color-B');\n        if (r !== null && g !== null && b !== null) {\n            r.value = color.R;\n            g.value = color.G;\n            b.value = color.B;\n        }\n\n        this.props.changeColor(colorString);\n    } \n\n    render() {\n        return (\n            <div>\n                <canvas className={'colorPallete'} \n                    onMouseDown={this.mosueClick} \n                    onMouseMove={(e) => { this.mouseMove(e) }}\n                >\n                </canvas>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Eraser from './ToolBarComponent/Eraser';\nimport Pencil from './ToolBarComponent/Pencil';\nimport Move from './ToolBarComponent/Move';\nimport Filter from './ToolBarComponent/Filter';\nimport Resize from './ToolBarComponent/Resize';\nimport Shape from './ToolBarComponent/Shape';\nimport Text from './ToolBarComponent/Text';\nimport Bucket from './ToolBarComponent/Bucket';\nimport BezierCurve from './ToolBarComponent/BezierCurve';\nimport ColorPallete from './ToolBarComponent/ColorPallete';\n\n\nexport default class ToolBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'default',\n            color: '#df4b26',\n            draggable: true,\n            buttonTab: [],\n        }\n    }\n\n    componentDidMount() {\n        this.lastIndex = 0;\n        this.currentIndex = 0;\n\n        // this.lastIndex2 = 0;\n        // this.currentIndex2 = 0;\n\n        this.state.buttonTab.push(this.eraser);\n        this.state.buttonTab.push(this.move);\n        this.state.buttonTab.push(this.pencil);\n        this.state.buttonTab.push(this.filter);\n        this.state.buttonTab.push(this.resize);\n        this.state.buttonTab.push(this.shape);\n        this.state.buttonTab.push(this.text);\n        this.state.buttonTab.push(this.bucket);\n        this.state.buttonTab.push(this.bezier);\n    }\n\n    componentDidUpdate() {\n        this.preventMultipleFor2 = true;\n        this.preventMultipleFor3 = true;\n        this.preventMultipleFor4 = true;\n        this.preventMultipleFor5 = true;\n    }\n\n    changeMode = (stateMode, bezierMode) => {\n        const stageLayer = this.props.returnStage().children;\n        const layers = this.props.returnLayerManagement();\n        let stateBezier = this.props.returnStateBezier();\n\n        this.state.buttonTab.forEach(button => {\n            if (button.state.mode === stateMode)\n                return;\n        });\n\n        layers.forEach((layerFromManagement) => {\n            stageLayer.forEach(layerFromStage => {\n                if (layerFromManagement.activeLayer === 'true') {\n                    if (layerFromManagement.key === layerFromStage._id) {\n                        layerFromStage.children.forEach(ch => {\n                            console.log(ch);\n                            if (ch.id() === 'group' || ch.id() === 'bezierGroup') {\n                                if (stateMode === 'move') {\n                                    if (this.preventMultipleFor2) {\n                                        ch.draggable(true);\n                                        this.currentIndex = layerFromStage.index;\n                                        stageLayer.forEach(_l => {\n                                            this.lastIndex = _l.index;\n                                        });\n                                        layerFromStage.moveToTop();\n                                        this.preventMultipleFor2 = false;\n                                    }\n                                }\n                                if (stateMode === 'bezier') {\n                                    if (this.preventMultipleFor4) {\n                                        if (ch.id() === 'bezierGroup') {\n                                            this.currentIndex = layerFromStage.index;\n                                            stageLayer.forEach(_l => {\n                                                this.lastIndex = _l.index;\n                                            });\n                                            layerFromStage.moveToTop();\n                                            this.preventMultipleFor4 = false;\n                                        }\n                                    }\n                                }\n                                if (stateMode === 'no-move') {\n                                    ch.draggable(false);\n                                    if (this.preventMultipleFor3) {\n                                        for (let i = 0; i < this.lastIndex - this.currentIndex; i++) {\n                                            layerFromStage.moveDown();\n                                        }\n                                        this.preventMultipleFor3 = false;\n                                        this.lastIndex = 0;\n                                        this.currentIndex = 0;\n                                    }\n                                }\n                                if (stateMode === 'no-bezier') {\n                                    if (ch.id() === 'bezierGroup') {\n                                        if (this.preventMultipleFor5) {\n                                            for (let i = 0; i < this.lastIndex - this.currentIndex; i++) {\n                                                layerFromStage.moveDown();\n                                            }\n                                            this.preventMultipleFor5 = false;\n                                            this.lastIndex = 0;\n                                            this.currentIndex = 0;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n            });\n        });\n\n        this.setState({\n            mode: stateMode,\n        });\n\n        this.props.mode(stateMode, this.state.buttonTab);\n    }\n\n    changeColor = (dataFromColorPallete) => {\n        this.setState({color: dataFromColorPallete});\n        this.props.color(dataFromColorPallete);\n    }\n\n    changeText = (dataFromText) => {\n        this.props.text(dataFromText);\n    }\n\n    returnColor = () => {\n        return this.state.color;\n    }\n\n    render() {\n        return (\n            <div>\n                <Eraser changeMode={this.changeMode} ref={node => {this.eraser = node}}\n                    offAllButtons={() => {this.props.offAllButtons()}}/>\n                <Pencil changeMode={this.changeMode} ref={node => { this.pencil = node }}\n                    offAllButtons={() => { this.props.offAllButtons() }}/>\n                <Move changeMode={this.changeMode} ref={node => { this.move = node }}\n                    offAllButtons={() => { this.props.offAllButtons() }}/>\n                <Filter changeMode={this.changeMode} ref={node => { this.filter = node }}\n                    offAllButtons={() => { this.props.offAllButtons() }}/>\n                <Resize changeMode={this.changeMode} ref={node => { this.resize = node }}\n                    returnStage={this.props.returnStage}\n                    returnLayerManagement={this.props.returnLayerManagement}\n                    offAllButtons={() => { this.props.offAllButtons() }}/>\n                <Shape changeMode={this.changeMode} ref={node => {this.shape = node}}\n                    offAllButtons={() => { this.props.offAllButtons() }}/>\n                <Text changeMode={this.changeMode} ref={node => {this.text = node}}\n                    offAllButtons={() => { this.props.offAllButtons() }}\n                    changeText={this.changeText}/>\n                <Bucket changeMode={this.changeMode} ref={node => {this.bucket = node}}\n                    offAllButtons={() => { this.props.offAllButtons() }}\n                    changeText={this.changeText}/>\n                <BezierCurve changeMode={this.changeMode} ref={node => {this.bezier = node}}\n                    offAllButtons={() => { this.props.offAllButtons() }}\n                    changeText={this.changeText}/>\n                <ColorPallete changeColor={this.changeColor}/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Mouse from '../Functionality/Mouse';\n\nexport default class Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.modes = {\n            PENCIL: 'pencil',\n            ERASER: 'eraser',\n            MOVE: 'move',\n            FILTER: 'filter',\n            SHAPE: 'shape',\n            BEZIER: 'bezier',\n        }\n\n        this.state = {\n            valueBlur: '0',\n            valueBrightness: '100',\n            valueContrast: '100',\n            valueGrayscale: '0',\n            valueHueRotate: '0',\n            valueInvert: '0',\n            valueOpacity: '100',\n            valueSaturate: '100',\n            valueSepia: '0',\n            valueSizePencil: 5,\n            valueSizeEraser: 5,\n            valueSizeBezier: 5,\n            whichShape: '',\n            bezier: '',\n        }\n\n        this.Mouse = new Mouse();\n    }\n    \n    componentDidUpdate() {\n        if (this.props.mode === this.modes.PENCIL || this.props.mode === this.modes.SHAPE || this.props.mode === this.modes.BEZIER) {\n            this.colorBox = document.querySelector('#color-box');\n            this.colorBox.style.backgroundColor = this.props.color;\n        }\n\n        const el = document.querySelector('#color-box');\n        const r = document.getElementById('color-R');\n        const g = document.getElementById('color-G');\n        const b = document.getElementById('color-B');\n\n        if (el !== null && r !== null && g !== null && b !== null) {\n            let regExp = new RegExp('\\\\D');\n            let splitEl = el.style.backgroundColor.split(regExp);\n            r.value = splitEl[4];\n            g.value = splitEl[6];\n            b.value = splitEl[8];\n        }\n    }\n\n    setSizePencil = (e) => {\n        this.props.changeSizePencil(e.target.value);\n    }\n\n    setSizeBezier = (e) => {\n        this.props.changeSizeBezier(e.target.value);\n    }\n\n    setSizeEraser = (e) => {\n        this.props.changeSizeEraser(e.target.value);\n    }\n\n    setColor = () => {\n        const r = document.getElementById('color-R');\n        const g = document.getElementById('color-G');\n        const b = document.getElementById('color-B');\n        let color = 'rgba(' + r.value + ','\n                            + g.value + ','\n                            + b.value + ','\n                            + '255)';\n\n        this.props.changeColor(color);\n    }\n\n    setBrush = (e) => {\n        this.props.changeBrush(e.target.value);\n    }\n\n    setFilter = () => {\n        const { valueBlur, valueBrightness, valueContrast,\n            valueGrayscale, valueHueRotate, valueInvert,\n            valueOpacity, valueSaturate, valueSepia, } = this.state;\n            \n        let filter = 'blur(' + valueBlur + \n                    'px) brightness(' + valueBrightness + \n                    '%) contrast(' + valueContrast + \n                    '%) grayscale(' + valueGrayscale + \n                    '%) hue-rotate(' + valueHueRotate + \n                    'deg) invert(' + valueInvert + \n                    '%) opacity(' + valueOpacity + \n                    '%) saturate(' + valueSaturate + \n                    '%) sepia(' + valueSepia + '%)';\n        const elKonva = document.querySelector('.konvajs-content');\n        elKonva.style.filter = filter;\n\n        this.props.changeFilter(filter);\n    }\n\n    setShape = (shape) => {\n        this.state.whichShape = shape;\n        this.props.changeShape(shape);\n        this.setState({\n            whichShape: shape,\n        });\n    }\n\n    setBezier = (bezier) => {\n        this.state.whichBezier = bezier;\n        this.props.changeBezier(bezier);\n        this.setState({\n            whichBezier: bezier,\n        });\n    }\n\n    resetFilter = () => {\n        this.state.valueBlur = '0';\n        this.state.valueBrightness = '100';\n        this.state.valueContrast = '100';\n        this.state.valueGrayscale = '0';\n        this.state.valueHueRotate ='0';\n        this.state.valueInvert ='0';\n        this.state.valueOpacity ='100';\n        this.state.valueSaturate ='100';\n        this.state.valueSepia ='0';\n\n        this.setFilter();\n\n        this.setState({\n            valueBlur: '0',\n            valueBrightness: '100',\n            valueContrast: '100',\n            valueGrayscale: '0',\n            valueHueRotate: '0',\n            valueInvert: '0',\n            valueOpacity: '100',\n            valueSaturate: '100',\n            valueSepia: '0',\n        })\n    }\n\n    changeOptionsMode = () => {\n        const el = document.querySelector('.settings');\n        const { valueBlur, valueBrightness, valueContrast,\n            valueGrayscale, valueHueRotate, valueInvert, \n            valueOpacity, valueSaturate, valueSepia,\n            valueSizePencil, valueSizeEraser, valueSizeBezier} = this.state;\n\n        switch (this.props.mode) {\n            case this.modes.PENCIL:\n                el.style.display = 'block';\n                return (\n                    <ul>\n                        <li className={'pencil-size-options'}>\n                            <label htmlFor='size'>pencil size</label>\n                            <input id='size' type='text' value={valueSizePencil}\n                                onMouseLeave={(e) => {e.target.blur()}}\n                                onClick={(e) => { e.target.select() }}\n                                onChange={(e) => { \n                                    this.state.valueSizePencil = e.target.value;\n                                    this.setSizePencil(e)\n                                    if (!e.target.value || e.target.value === '0') {\n                                        this.state.valueSizePencil = 5;\n                                        alert('Pencil size can not be a 0 or null');\n                                    }\n                                 }}\n                            >\n                            </input>\n                        </li>\n                        <li>\n                            <select className={'brush-list'}\n                                onChange={(e) => { this.setBrush(e) }}\n                                >\n                                <option value=\"default\">Default</option>\n                                <option value=\"shadow\">Shadow</option>\n                                <option value=\"thick-brush\">Thick brush</option>\n                                <option value=\"spray\">Spray</option>\n                            </select>\n                        </li>\n                        <li className={'rgb-options'}>\n                            <label htmlFor='color-R'>R</label>\n                            <input id='color-R' type='text'\n                                onMouseLeave={(e) => { e.target.blur() }}\n                                onClick={(e) => {e.target.select()}}\n                                onChange={(e) => { \n                                    this.setColor() \n                                }}\n                            >\n                            </input>\n                            <label htmlFor='color-G'>G</label>\n                            <input id='color-G' type='text'\n                                onMouseLeave={(e) => { e.target.blur() }}\n                                onClick={(e) => { e.target.select() }}\n                                onChange={(e) => { \n                                    this.setColor()\n                                }}\n                            >\n                            </input>\n                            <label htmlFor='color-B'>B</label>\n                            <input id='color-B' type='text'\n                                onMouseLeave={(e) => { e.target.blur() }}\n                                onClick={(e) => { e.target.select() }}\n                                onChange={(e) => { \n                                    this.setColor()\n                                }}\n                            >\n                            </input>\n                        </li>\n                        <div className={'color-box-wrapper'}>\n                            <div id='color-box'></div>\n                        </div>\n                    </ul>\n                )\n                break;\n            case this.modes.ERASER:\n                el.style.display = 'block';\n                return (\n                    <ul>\n                        <li>\n                            <label htmlFor='size'>eraser size</label>\n                            <input id='size' type='text' value={valueSizeEraser}\n                                onMouseLeave={(e) => { e.target.blur() }}\n                                onClick={(e) => { e.target.select() }}\n                                onChange={(e) => { \n                                    this.state.valueSizeEraser = e.target.value;\n                                    this.setSizeEraser(e);\n                                    if (!e.target.value || e.target.value === '0') {\n                                        this.state.valueSizeEraser = 5;\n                                        alert('Eraser size can not be a 0 or null');\n                                    }\n                                }}>\n                            </input>\n                        </li>\n                    </ul>\n                )\n                break;\n            case this.modes.FILTER:\n                el.style.display = 'block';\n                return (\n                    <ul>\n                        <li>\n                            <label htmlFor='blur'>blur {valueBlur}px</label>\n                            <input id='blur' type='range'\n                                min='0' max='20' value={valueBlur}\n                                onChange={(e) => { \n                                    this.state.valueBlur = e.target.value;\n                                    this.setFilter(e, e.target.id, 'px');\n                                    this.setState({valueBlur: e.target.value});\n                                }}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor='brightness'>brightness {valueBrightness}%</label>\n                            <input id='brightness' type='range'\n                                min='0' max='500' value={valueBrightness}\n                                onChange={(e) => {\n                                    this.state.valueBrightness = e.target.value;\n                                    this.setFilter(e, e.target.id, '%');\n                                    this.setState({ valueBrightness: e.target.value });\n                                }}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor='contrast'>contrast {valueContrast}%</label>\n                            <input id='contrast' type='range'\n                                onChange={(e) => {\n                                    this.state.valueContrast = e.target.value;\n\n                                    this.setFilter(e, e.target.id, '%');\n                                    this.setState({ valueContrast: e.target.value });\n                                }}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor='grayscale'>grayscale {valueGrayscale}%</label>\n                            <input id='grayscale' type='range'\n                                min='0' max='100' value={valueGrayscale}\n                                onChange={(e) => {\n                                    this.state.valueGrayscale = e.target.value;\n\n                                    this.setFilter(e, e.target.id, '%');\n                                    this.setState({ valueGrayscale: e.target.value });\n                                }}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor='hue-rotate'>hue rotate {valueHueRotate}deg</label>\n                            <input id='hue-rotate' type='range'\n                                min='0' max='360' value={valueHueRotate}\n                                onChange={(e) => {\n                                    this.state.valueHueRotate = e.target.value;\n\n                                    this.setFilter(e, e.target.id, '%');\n                                    this.setState({ valueHueRotate: e.target.value });\n                                }}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor='invert'>invert {valueInvert}%</label>\n                            <input id='invert' type='range'\n                                min='0' max='100' value={valueInvert}\n                                onChange={(e) => {\n                                    this.state.valueInvert = e.target.value;\n\n                                    this.setFilter(e, e.target.id, '%');\n                                    this.setState({ valueInvert: e.target.value });\n                                }}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor='opacity'>opacity {valueOpacity}%</label>\n                            <input id='opacity' type='range'\n                                min='0' max='100' value={valueOpacity}\n                                onChange={(e) => {\n                                    this.state.valueOpacity = e.target.value;\n\n                                    this.setFilter(e, e.target.id, '%');\n                                    this.setState({ valueOpacity: e.target.value });\n                                }}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor='saturate'>saturate {valueSaturate}%</label>\n                            <input id='saturate' type='range'\n                                min='0' max='500' value={valueSaturate}\n                                onChange={(e) => {\n                                    this.state.valueSaturate = e.target.value;\n\n                                    this.setFilter(e, e.target.id, '%');\n                                    this.setState({ valueSaturate: e.target.value });\n                                }}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor='sepia'>sepia {valueSepia}%</label>\n                            <input id='sepia' type='range'\n                                min='0' max='100' value={valueSepia}\n                                onChange={(e) => {\n                                    this.state.valueSepia = e.target.value;\n\n                                    this.setFilter(e, e.target.id, '%');\n                                    this.setState({ valueSepia: e.target.value });\n                                }}>\n                            </input>\n                        </li>\n                        <li>\n                            <button id='reset'\n                                onMouseDown={() => { this.resetFilter() }}>\n                                reset\n                            </button>\n                        </li>\n                    </ul>\n                )\n                break;\n\n            case this.modes.SHAPE:\n                el.style.display = 'block';\n                return (\n                    <ul>\n                        <li>\n                            <button\n                                onMouseDown={() => {\n                                    this.setShape('rect');\n                                }}>\n                                    rect\n                            </button>\n                        </li>\n                        <li>\n                            <button\n                                onMouseDown={() => {\n                                    this.setShape('star');\n                                }}>\n                                    star\n                            </button>\n                        </li>\n                        <li>\n                            <button\n                                onMouseDown={() => {\n                                    this.setShape('arrow');\n                                }}>\n                                    arrow\n                            </button>\n                        </li>\n                        <li>\n                            <button\n                                onMouseDown={() => {\n                                    this.setShape('circle');\n                                }}>\n                                    circle\n                            </button>\n                        </li>\n                        <li>\n                            <button\n                                onMouseDown={() => {\n                                    this.setShape('ellipse');\n                                }}>\n                                    ellipse\n                            </button>\n                        </li>\n                        <div className={'color-box-wrapper'}>\n                            <div id='color-box'></div>\n                        </div>\n                    </ul>\n                )\n                break;\n\n            case this.modes.BEZIER:\n                el.style.display = 'block';\n                return (\n                    <ul>\n                        <li>\n                            <button\n                                onMouseDown={() => {\n                                    // this.setShape('rect');\n                                    this.setBezier('create-bezier');\n                                }}>\n                                    Create Bezier\n                            </button>\n                        </li>\n                        <li>\n                            <button\n                                onMouseDown={() => {\n                                    this.setBezier('modify-bezier');\n                                }}>\n                                    Modify Bezier\n                            </button>\n                        </li>\n                        <li className={'pencil-size-options'}>\n                            <label htmlFor='size'>pencil size</label>\n                            <input id='size' type='text' value={valueSizeBezier}\n                                onMouseLeave={(e) => {e.target.blur()}}\n                                onClick={(e) => { e.target.select() }}\n                                onChange={(e) => { \n                                    this.state.valueSizeBezier = e.target.value;\n                                    this.setSizeBezier(e)\n                                    if (!e.target.value || e.target.value === '0') {\n                                        this.state.valueSizeBezier = 5;\n                                        alert('Pencil size can not be a 0 or null');\n                                    }\n                                 }}\n                            >\n                            </input>\n                        </li>\n                        <li className={'rgb-options'}>\n                            <label htmlFor='color-R'>R</label>\n                            <input id='color-R' type='text'\n                                onMouseLeave={(e) => { e.target.blur() }}\n                                onClick={(e) => {e.target.select()}}\n                                onChange={(e) => { \n                                    this.setColor() \n                                }}\n                            >\n                            </input>\n                            <label htmlFor='color-G'>G</label>\n                            <input id='color-G' type='text'\n                                onMouseLeave={(e) => { e.target.blur() }}\n                                onClick={(e) => { e.target.select() }}\n                                onChange={(e) => { \n                                    this.setColor()\n                                }}\n                            >\n                            </input>\n                            <label htmlFor='color-B'>B</label>\n                            <input id='color-B' type='text'\n                                onMouseLeave={(e) => { e.target.blur() }}\n                                onClick={(e) => { e.target.select() }}\n                                onChange={(e) => { \n                                    this.setColor()\n                                }}\n                            >\n                            </input>\n                        </li>\n                        <div className={'color-box-wrapper'}>\n                            <div id='color-box'></div>\n                        </div>\n                    </ul>\n                )\n                break;\n        \n            default:\n                if (el !== null)\n                    el.style.display = 'none';\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div className='settings'\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.settings')}}\n            >\n                {this.changeOptionsMode()}\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class Header extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n    }\n\n    exitCanvasOptions = () => {\n        this.props.popCanvasOptions();\n    }\n\n    render() {\n        return (\n              <ul className='nav-bar'>\n                <li className='nav-bar-iteam logo'>\n                    <a>LOGO</a>\n                </li>\n                <li className='nav-bar-iteam'>\n                    <a onClick={this.props.popCanvasOptions}>\n                        NEW\n                    </a>\n                    <ul className='canvas-options'>\n                        <li>\n                            <span className='canvas-options-exit'\n                                onMouseDown={this.props.popCanvasOptions}>\n                                X\n                            </span>\n                        </li>\n                        <li>\n                            <label htmlFor='canvas-width'>\n                                WIDTH (in pxl)\n                            </label>\n\n                            <input id='canvas-width'\n                                className='canvas-options-input' >\n                            </input>\n                        </li>\n\n                        <li>\n                            <label htmlFor='canvas-height'>\n                                HEIGHT (in pxl)\n                            </label>\n\n                            <input id='canvas-height'\n                                className='canvas-options-input'>\n                            </input>\n                        </li>\n\n                        <li>\n                            <button className='canvas-otpions-btn'\n                                onClick={this.props.add}>\n                                CREATE CANVAS\n                            </button>\n                        </li>\n                    </ul>\n                </li>\n\n                <li className='nav-bar-iteam'>\n                    <a>\n                        <input type='file' name='add-image' id='add-image' onChange={this.props.addImage}/>\n                        <label htmlFor='add-image' >Add image</label>\n                    </a>\n                </li>\n\n                <li className='nav-bar-iteam'>\n                    <a onClick={this.props.saveImg}>\n                        SAVE\n                    </a>\n                </li>\n              </ul>\n        )\n    }\n}","import './App.css';\nimport React from 'react';\nimport { Stage, Layer, Rect } from 'react-konva';\nimport Konva from 'konva';\nimport ToolBar from './Component/ToolBar';\nimport Shape from './Component/ToolBarComponent/Shape';\nimport Text from './Component/ToolBarComponent/Text';\nimport BezierCurve from './Component/ToolBarComponent/BezierCurve';\nimport Settings from './Component/Settings';\nimport Header from './Component/Header';\nimport Mouse from './Functionality/Mouse';\n\nexport default class AppTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'default',\n      color: '#000',\n      sizePencil : 5,\n      sizeEraser : 5,\n      sizeBezier: 5,\n      shape: 'none',\n      bezier: 'none',\n      text: 'off',\n      brush: 'default',\n      filter : '',\n      image: null,\n      widthFrame: window.innerWidth / 2,\n      heightFrame: window.innerHeight / 2,\n      layerManagement: [],\n      newFile: false,\n      buttonTab: [],\n    };\n\n    this.defaultLayer = 0;\n    this.border = 0;\n  }\n  \n  componentDidMount() {\n    document.oncontextmenu = new Function(\"return false;\");\n    this.getStage = this.stage.getStage();\n    this.scaleBy = 1.1;\n    this.preventCenter = false;\n    this.saveAnchors = 0;\n    this.tmpPointerPosition = {\n      x: 0,\n      y: 0,\n    };\n    this.anchorLocation = {\n      start: 0,\n      center: 0,\n      end: 0,\n    };\n    this.saveFirstBezierPosition = undefined;\n    this.saveCanvas = 0;\n    this.saveBezier = 0;\n    this.endPaintShape = false;\n\n    this.getStage.on('mousedown', (e) => {\n      if (e.evt.button === 2) {\n        this.getStage.draggable(true);\n      }\n    });\n\n    this.getStage.on('mouseup', (e) => {\n      this.getStage.draggable(false);\n    });\n    \n    window.addEventListener('wheel', (e) => {\n      this.Mouse.scroll(e, this.scaleBy);\n    });\n    \n    this.getStage.on('mouseenter', () => {\n      const el = document.querySelector('.mouseCircle');\n      if (this.state.mode === 'pencil' || this.state.mode === 'eraser') {\n        el.style.display = 'block';\n      }\n    });\n\n    this.getStage.on('mouseleave', () => {\n      const el = document.querySelector('.mouseCircle');\n      el.style.display = 'none';\n    });\n\n    this.displayLayer();\n    this.Shape = new Shape();\n    this.Text = new Text();\n    this.BezierCurve = new BezierCurve();\n    this.Settings = new Settings();\n\n  }\n\n  componentDidUpdate() {\n    this.Mouse = new Mouse(this.props, this.getStage, this.state, \n                          this.state.mode, this.state.color, \n                          this.state.sizePencil, this.state.brush,\n                          this.state.sizeEraser, this.state.shape);\n    console.log(this.getStage);\n    console.log(this.state.mode);\n    console.log('TEST');\n    if (this.state.shape === 'rect' \n        || this.state.shape === 'star' \n        || this.state.shape === 'arrow'\n        || this.state.shape === 'circle'\n        || this.state.shape === 'ellipse'\n        || this.state.text === 'on'\n        || this.state.bezier === 'create-bezier') {\n      this.addLayer(null);\n      this.state.shape = 'none';\n      this.state.bezier = 'none';\n      this.state.text = 'off';\n    }\n    if (this.state.bezier === 'modify-bezier') {\n      const { layerManagement } = this.state;\n      const stageLayer = this.getStage.children;\n\n      layerManagement.forEach(_layersManagement => {\n        stageLayer.forEach((_stageLayers, i) => {\n          if (_layersManagement.activeLayer === 'true') {\n            if (_stageLayers._id === _layersManagement.key) {\n              this.saveAnchors = _stageLayers.find('Circle');\n              this.saveAnchors.forEach(anchor => {\n                anchor.visible(true);\n              });\n            }\n          }\n        });\n      });\n    }\n    this.selectLayerManagementElColor();\n    this.getStage.on('mousedown', (e) => {\n      if (this.state.mode === 'bucket') {\n        const { layerManagement } = this.state;\n        const stageLayer = this.getStage.children;\n        \n        layerManagement.forEach(_layersManagement => {\n          stageLayer.forEach((_stageLayers, i) => {\n            if (_layersManagement.activeLayer === 'true') {\n              if (_stageLayers._id === _layersManagement.key) {\n                if (_stageLayers.children[0].id() === 'drawingPlace') {\n                  if(e.target === _stageLayers.children[0]) {\n                    let canvas = _stageLayers.children[0].getImage();\n                    let ctx = canvas.getContext('2d');\n                    ctx.fillStyle = this.state.color;\n                    ctx.fillRect(_stageLayers.children[0].x(), _stageLayers.children[0].y(), _stageLayers.children[0].width(), _stageLayers.children[0].height());\n                  }\n                }\n                if (_stageLayers.children[0].id() === 'group') { // TODO: When you add Image you cant use bucket on Image because e.target !== _stageLayers.children[0].children[0] you must set to children[1]\n                  if (_stageLayers.children[0].children[0].name() === 'shape') {\n                    if (e.target === _stageLayers.children[0].children[0]) {\n                      _stageLayers.children[0].children[0].fill(this.state.color);\n                      _stageLayers.children[0].children[0].stroke(this.state.color);\n                    }\n                  }\n                  if (_stageLayers.children[0].children[0].id() === 'text') {\n                    if (e.target === _stageLayers.children[0].children[0]) {\n                      _stageLayers.children[0].children[0].fill(this.state.color);\n                    }\n                  }\n                }\n              }\n            }\n          });\n        });\n        // console.log(e.target);\n        // if (e.target.id() === 'drawingPlace') {\n        //   let canvas = e.target.getImage();\n        //   let ctx = canvas.getContext('2d');\n        //   ctx.fillStyle = this.state.color;\n        //   ctx.fillRect(e.target.x(), e.target.y(), e.target.width(), e.target.height());\n        // }\n        // if (e.target.name() === 'shape') {\n        //   e.target.fill(this.state.color);\n        //   e.target.stroke(this.state.color);\n        // }\n        this.getStage.draw();\n      }\n      if (this.state.mode === 'text') {   \n        const { layerManagement } = this.state;\n        const stageLayer = this.getStage.children;\n\n        layerManagement.forEach(_layersManagement => {\n          stageLayer.forEach((_stageLayers, i) => {\n            if (_layersManagement.activeLayer === 'true') {\n              if (_stageLayers._id === _layersManagement.key) {\n                let groupX = _stageLayers.children[0].x() * this.getStage.scaleX();\n                let groupY = _stageLayers.children[0].y() * this.getStage.scaleY();\n\n                let localPos = {\n                  x: (((this.getStage.getPointerPosition().x\n                    - this.getStage.x()\n                    - groupX))\n                    / this.getStage.scaleX()),\n\n                  y: (((this.getStage.getPointerPosition().y\n                    - this.getStage.y()\n                    - groupY))\n                    / this.getStage.scaleY())\n                }\n                //This for create Text\n                _stageLayers.children[0].children[0].x(localPos.x);\n                _stageLayers.children[0].children[0].y(localPos.y);\n                _stageLayers.children[0].children[0].text('Some Text');\n                // this.getStage.draw();\n              }\n            }\n          });\n        });\n        this.offAllButtons();\n      }\n      else if (this.state.mode === 'shape' || this.state.mode === 'bezier') {\n        this.endPaintShape = true;\n        this.tmpPointerPosition = {\n          x: this.getStage.getPointerPosition().x,\n          y: this.getStage.getPointerPosition().y,\n        }\n        // this.tmpPointerPosition2 = {\n        //   x: this.getStage.getPointerPosition().x,\n        //   y: this.getStage.getPointerPosition().y,\n        // }\n      }\n      // this.getStage.draw();     \n    });\n\n    this.getStage.on('mouseup', () => {\n      if (this.state.mode === 'shape' || this.state.mode === 'bezier') {\n        this.endPaintShape = false;\n        let anchors;\n        if (this.state.mode === 'bezier') {\n          let ctx = this.saveCanvas.getContext('2d');\n          if (this.state.bezier !== 'modify-bezier') {\n              let anchorss = this.getStage.find(node => {\n                return node.className === 'Circle' && node.id() === 'anchor'; \n              });\n            anchorss.forEach(node => {\n              node.visible(false);\n              this.getStage.draw();\n            });\n  \n            ctx.clearRect(0, 0, this.saveCanvas.width, this.saveCanvas.height);\n            ctx.beginPath();\n            ctx.moveTo(this.anchorLocation.start.x, this.anchorLocation.start.y);\n            ctx.lineTo(this.anchorLocation.end.x, this.anchorLocation.end.y);\n            ctx.closePath();\n            ctx.stroke();\n  \n            // this.getStage.draw();\n            if (this.anchorLocation.center.x < 0)\n              this.anchorLocation.center.x = this.anchorLocation.center.x * (-1);\n  \n            if (this.anchorLocation.center.y < 0)\n              this.anchorLocation.center.y = this.anchorLocation.center.y * (-1);\n  \n            this.BezierCurve.createAnchor(this.anchorLocation.start.x, this.anchorLocation.start.y, this.getStage);\n            this.BezierCurve.createAnchor(this.anchorLocation.center.x, this.anchorLocation.center.y, this.getStage);\n            this.BezierCurve.createAnchor(this.anchorLocation.center.x - 50, this.anchorLocation.center.y - 50, this.getStage);\n            this.BezierCurve.createAnchor(this.anchorLocation.end.x, this.anchorLocation.end.y, this.getStage);\n            anchors = this.getStage.find(node => {\n              return node.className === 'Circle' && node.visible();\n            });\n          } else {\n            anchors = this.saveAnchors;\n            // this.state.bezier = 'none';\n          }\n\n          // let anchors = this.getStage.find('Circle');\n          anchors.forEach(anchor => {\n            anchor.on('dragmove', () => {\n              ctx.clearRect(0, 0, this.saveCanvas.width, this.saveCanvas.height);\n\n              ctx.beginPath();\n              ctx.moveTo(anchors[0].attrs.x, anchors[0].attrs.y);\n              ctx.bezierCurveTo(anchors[1].attrs.x, anchors[1].attrs.y,\n                                anchors[2].attrs.x - 50, anchors[2].attrs.y - 50,\n                                anchors[3].attrs.x, anchors[3].attrs.y);\n              ctx.stroke();\n\n              this.getStage.draw();\n            });\n          });\n          // let a = this.getStage.find(node => {\n          //   return node.className === 'Circle' && node.visible(true);\n          // });\n          // this.saveBezier.setClip({\n          //   x:  this.anchorLocation.start.x,\n          //   y:  this.anchorLocation.start.y,\n          //   width: Math.abs(this.anchorLocation.start.x - this.anchorLocation.end.x),\n          //   height: Math.abs(this.anchorLocation.start.y - this.anchorLocation.end.y),\n          // });\n          // let tabX = [];\n          // let tabY = [];\n          // this.saveBezier.children.forEach(anchors => {\n          //   if (anchors.id() === 'anchor') {\n          //     tabX.push(anchors.x());\n          //     tabY.push(anchors.y());\n          //   }\n          // });\n          // console.table(tabX);\n          // console.table(tabY);\n          // let MaxX = Math.max.apply(Math, tabX);\n          // let MaxY = Math.max.apply(Math, tabY);\n          // console.log(MaxX);\n          // console.log(MaxY);\n\n          // let MinX = Math.min.apply(Math, tabX);\n          // let MinY = Math.min.apply(Math, tabY);\n          // console.log(MinX);\n          // console.log(MinY);\n\n          this.saveBezier.clipFunc(function(ctx, e) {\n            let tabX = [];\n            let tabY = [];\n            e.children.forEach(anchors => {\n              if (anchors.id() === 'anchor') {\n                tabX.push(anchors.x());\n                tabY.push(anchors.y());\n              }\n            });\n            let MaxX = Math.max.apply(Math, tabX);\n            let MaxY = Math.max.apply(Math, tabY);\n\n            let MinY = Math.min.apply(Math, tabY);\n            let MinX = Math.min.apply(Math, tabX);\n            // ctx.clearRect(0, 0, 800, 800);\n            // console.log(e);\n            // ctx.beginPath();\n            // ctx.moveTo(e.children[1].attrs.x, e.children[1].attrs.y);\n            // ctx.lineTo(e.children[4].attrs.x, e.children[4].attrs.y);\n            // ctx.closePath();\n            // ctx.stroke();\n\n            // // ctx.clearRect(0, 0, 800, 800);\n            // ctx.beginPath();\n            // ctx.moveTo(e.children[1].attrs.x, e.children[1].attrs.y);\n            // ctx.bezierCurveTo(e.children[2].attrs.x, e.children[2].attrs.y,\n            //                   e.children[3].attrs.x - 50, e.children[3].attrs.y - 50,\n            //                   e.children[4].attrs.x, e.children[4].attrs.y);\n            // ctx.stroke();\n\n            // ctx.clearRect(0, 0, 800, 800);\n            // ctx.beginPath();\n            // ctx.arc(e.children[1].attrs.x, e.children[1].attrs.y, e.children[1].attrs.radius, 0, Math.PI * 2, false);\n            // ctx.arc(e.children[2].attrs.x, e.children[2].attrs.y, e.children[2].attrs.radius, 0, Math.PI * 2, false);\n            // ctx.arc(e.children[3].attrs.x, e.children[3].attrs.y, e.children[3].attrs.radius, 0, Math.PI * 2, false);\n            // ctx.arc(e.children[4].attrs.x, e.children[4].attrs.y, e.children[4].attrs.radius, 0, Math.PI * 2, false);\n            // ctx.stroke();\n            // ctx.closePath();\n            // // ctx.fill('nonzero');\n            \n            ctx.clearRect(0, 0, 800, 800);\n            ctx.rect(MinX - 20, MinY - 20, (Math.abs(MaxX - MinX) + 40), (Math.abs(MinY - MaxY) + 40));\n          });\n          this.getStage.draw();\n        }\n        console.log(this.state.bezier);\n        if (this.state.bezier !== 'modify-bezier') {\n          this.offAllButtons();\n        }\n        this.saveFirstBezierPosition = undefined;\n      }\n    });\n\n    this.getStage.on('mousemove', (e) => {\n      if (this.state.mode === 'shape' || this.state.mode === 'bezier') {\n        if (this.state.bezier !== 'modify-bezier') {\n            const { layerManagement } = this.state;\n            const stageLayer = this.getStage.children;\n            if (!this.endPaintShape)\n              return;\n\n            layerManagement.forEach(_layersManagement => {\n              stageLayer.forEach((_stageLayers, i) => {\n                if (_layersManagement.activeLayer === 'true') {\n                  if (_stageLayers._id === _layersManagement.key) {\n                    let groupX = _stageLayers.children[0].x() * this.getStage.scaleX();\n                    let groupY = _stageLayers.children[0].y() * this.getStage.scaleY();\n\n                    let localPos = {\n                      x: (((this.getStage.getPointerPosition().x\n                        - this.getStage.x()\n                        - groupX))\n                        / this.getStage.scaleX()),\n\n                      y: (((this.getStage.getPointerPosition().y\n                        - this.getStage.y()\n                        - groupY))\n                        / this.getStage.scaleY())\n                    }\n\n                    let localPos2 = {\n                      x: (((this.tmpPointerPosition.x\n                        - this.getStage.x()\n                        - groupX))\n                        / this.getStage.scaleX()),\n\n                      y: (((this.tmpPointerPosition.y\n                        - this.getStage.y()\n                        - groupY))\n                        / this.getStage.scaleY())\n                    }\n                    //This is for crate shape from mouse move\n                    if (this.state.mode === 'bezier') {\n                      let img = _stageLayers.children[0].children[0].getImage();\n                      this.saveCanvas = img;\n                      this.saveBezier = _stageLayers.children[0];\n                      let ctx = img.getContext('2d');\n                      ctx.beginPath();\n                      localPos = {\n                        x: (((this.tmpPointerPosition.x\n                          - this.getStage.x()\n                          - groupX))\n                          / this.getStage.scaleX()),\n\n                        y: (((this.tmpPointerPosition.y\n                          - this.getStage.y()\n                          - groupY))\n                          / this.getStage.scaleY())\n                      }\n                      if (this.saveFirstBezierPosition === undefined)\n                      this.saveFirstBezierPosition = localPos;\n                      \n                      ctx.moveTo(localPos.x, localPos.y);\n                      // ctx.moveTo(this.saveFirstBezierPosition.x, this.saveFirstBezierPosition.y);\n                      // ctx.bezierCurveTo(localPos.x, localPos.y + 30, localPos.x + 50, localPos.y + 50, localPos.x + 100, localPos.y + 100);\n\n\n                      let pos = this.getStage.getPointerPosition();\n\n                      localPos = {\n                        x: (((pos.x\n                          - this.getStage.x()\n                          - groupX))\n                          / this.getStage.scaleX()),\n\n                        y: (((pos.y\n                          - this.getStage.y()\n                          - groupY))\n                          / this.getStage.scaleY())\n                      }\n                      let centerX = (localPos.x - this.saveFirstBezierPosition.x) / 2;\n                      let centerY = (localPos.y - this.saveFirstBezierPosition.y) / 2;\n\n                      this.anchorLocation = {\n                        start: this.saveFirstBezierPosition,\n                        center: {\n                          x: localPos.x - centerX,\n                          y: localPos.y - centerY,\n                        },\n                        end: localPos,\n                      }\n\n                      ctx.lineTo(localPos.x, localPos.y);\n                      ctx.closePath();\n                      ctx.stroke();\n                      this.tmpPointerPosition = pos;\n                      this.getStage.draw();\n                    }\n                    if (this.state.mode === 'shape') {\n                      if (_stageLayers.children[0].nodeType === 'Group') {\n                        _stageLayers.children[0].children[0].x(localPos2.x);\n                        _stageLayers.children[0].children[0].y(localPos2.y);\n                        _stageLayers.children[0].children[0].width(localPos.x - localPos2.x);\n                        _stageLayers.children[0].children[0].height(localPos.y - localPos2.y);\n                        _stageLayers.children[0].children[0].fill(this.state.color);\n                        _stageLayers.children[0].children[0].stroke(this.state.color);\n                        if (_stageLayers.children[0].children[0].className === 'Arrow')\n                          _stageLayers.children[0].children[0].points([0, 0,\n                            localPos.x - localPos2.x,\n                            localPos.y - localPos2.y]);\n                        if (_stageLayers.children[0].children[0].className === 'Circle')\n                          if (_stageLayers.children[0].children[0].attrs.radius < 0)\n                            _stageLayers.children[0].children[0].attrs.radius = 0;\n\n                        if (_stageLayers.children[0].children[0].className === 'Ellipse') {\n                          if (_stageLayers.children[0].children[0].attrs.radiusX < 0)\n                            _stageLayers.children[0].children[0].attrs.radiusX = 0;\n                          if (_stageLayers.children[0].children[0].attrs.radiusY < 0)\n                            _stageLayers.children[0].children[0].attrs.radiusX = 0;\n                        }\n                        this.getStage.draw();\n                      }\n                    }\n                  }\n                }\n              });\n            });\n          }\n        }\n    });\n  }\n\n  selectLayerManagementElColor = () => {\n    const elLayerManagement = document.querySelectorAll(\n                          '.layer-management ul li');\n\n    const elInvisibleBtn = document.querySelectorAll('.invisible-btn');\n\n    elLayerManagement.forEach(el => {\n      if (el.attributes['name'].value === 'true')\n        el.style.backgroundColor = '#888';\n      else\n        el.style.backgroundColor = '#666';\n    });\n\n    elInvisibleBtn.forEach(el => {\n      if (el.attributes['name'].value === 'true')\n        el.style.backgroundColor = '#333';\n      else\n        el.style.backgroundColor = '#fff';\n    });\n\n  }\n\n  changeMode = (dataFromToolBar, buttonFromToolBar) => {\n    this.setState({ mode: dataFromToolBar, buttonTab: buttonFromToolBar });\n  }\n\n  changeColor = (dataFromToolBar) => {\n    this.setState({ color: dataFromToolBar });\n  }\n\n  changeText = (dataFromToolBar) => {\n    this.setState({ text: dataFromToolBar });\n  }\n\n  changeSizePencil = (dataFromSettings) => {\n    this.setState({ sizePencil: dataFromSettings });\n  }\n\n  changeSizeEraser = (dataFromSettings) => {\n    this.setState({ sizeEraser: dataFromSettings });\n  }\n\n  changeSizeBezier = (dataFromSettings) => {\n    this.setState({ sizeBezier: dataFromSettings });\n  }\n\n  changeBrush = (dataFromSettings) => {\n    this.setState({ brush: dataFromSettings });\n  }\n\n  changeFilter = (dataFromFilter) => {\n    this.setState({ filter: dataFromFilter });\n  }\n\n  changeShape = (dataFromSettings) => {\n    this.setState({ shape: dataFromSettings });\n  }\n\n  changeBezier = (dataFromSettings) => {\n    this.setState({ bezier: dataFromSettings });\n  }\n\n  popCanvasOptions = () => {\n    const canvasOptions = document.querySelector('.canvas-options');\n    const back = document.querySelector('.back');\n    const navBar = document.querySelector('.nav-bar');\n\n    if (canvasOptions.style.display === 'flex') {\n      canvasOptions.style.display = 'none';\n      back.style.display = 'none';\n      navBar.style.zIndex = '1';\n    }\n    else {\n      canvasOptions.style.display = 'flex';\n      back.style.display = 'block';\n      navBar.style.zIndex = 'initial';\n    }\n  }\n\n  newFile = () => {\n    // HERE WILL BE CODE FROM INPUT TAG TO CREATE WIDTH AND HEIGHT CANVAS\n    const canvasHeightOptions = document.querySelector('#canvas-height');\n    const canvasWidthOptions = document.querySelector('#canvas-width');\n    let newFileTMP = false;\n\n    // This 3 are here because when I create new file these values must be reset\n    this.preventCenter = false;\n    this.getStage.x(0);\n    this.getStage.y(0);\n\n    if (canvasHeightOptions.value >= 32 && canvasWidthOptions.value >= 32\n      && !isNaN(canvasHeightOptions.value) && !isNaN(canvasWidthOptions.value)) {\n      const { layerManagement } = this.state;\n      const stageLayer = this.getStage.children;\n      newFileTMP = true;\n\n      stageLayer.forEach((_layer) => {\n        this.getStage.removeChildren();\n      });\n\n      this.defaultLayer = new Konva.Layer({\n        id : 'defaultLayer'\n      });\n\n      this.border = new Konva.Rect({\n        id: 'border',\n        x: 0,\n        y: 0,\n        stroke: 'black',\n        strokeWidth: 1,\n      });\n      this.defaultLayer.add(this.border);\n      this.getStage.add(this.defaultLayer);\n\n      const layers_TMP = layerManagement;\n\n      layers_TMP.forEach(_index => {\n        layers_TMP.splice(_index, layers_TMP.length);\n      });\n\n      this.setState({\n        layerManagement: layers_TMP,\n        widthFrame: canvasWidthOptions.value,\n        heightFrame: canvasHeightOptions.value,\n        newFile: true,\n      });\n\n      this.addLayer(null, canvasWidthOptions.value, canvasHeightOptions.value, newFileTMP);\n      this.popCanvasOptions();\n      this.getStage.draw();\n    } else {\n      newFileTMP = false;\n      alert('WIDTH AND HEIGHT MUST BE A NUMBER AND BIGER THEN 32PX');\n    }\n  }\n\n  addDrawingCanvas = (width, height, isImg) => {\n    const { layerManagement} = this.state;\n    const stageLayer = this.getStage.children;\n    let tmpX = 0;\n    let tmpY = 0;\n    let tmpScaleX = 0;\n    let tmpScaleY = 0;\n    // It does not allow you to center drawing \n    // place when you add a new layer\n    // let preventCenter = false;\n    if (this.getStage.x() !== 0) {\n      this.preventCenter = true;\n      tmpX = this.getStage.x();\n      tmpY = this.getStage.y();\n      tmpScaleX = this.getStage.scaleX();\n      tmpScaleY = this.getStage.scaleY();\n    }\n\n    layerManagement.forEach(_layersManagement => {\n      stageLayer.forEach((_stageLayers, i) => {\n        if (_stageLayers._id === _layersManagement.key) {\n          // This prevent multiple shape in one layer\n          // one layer have one drawing place, img place etc.\n          if (i === stageLayer.length - 1) {\n            const canvas = document.createElement('canvas');\n            canvas.width = width;\n            canvas.height = height;\n            // Center drawing place with height and width lower then stage width and hight\n            this.getStage.x((this.getStage.width() - canvas.width) / 2);\n            this.getStage.y((this.getStage.height() - canvas.height) / 2);\n            // Center drawing place with any sizePencil\n            // here i resize and scale stage u can resize layer but replace stage with l\n            if (canvas.width >= this.getStage.width() ||\n            canvas.height >= this.getStage.height()) {\n              let breaker = 0;\n              let i = 1;\n              const padding = 100;\n\n              while (this.getStage.x() <= padding ||\n              this.getStage.y() <= padding) {\n                this.getStage.scale({ x: i, y: i });\n                this.getStage.x((this.getStage.width() - (canvas.width * i)) / 2);\n                this.getStage.y((this.getStage.height() - (canvas.height * i)) / 2);\n                i = i - 0.01;\n                breaker++;\n\n                if (breaker === 100) {\n                  return;\n                }\n              }\n            }\n            this.border.width(canvas.width);\n            this.border.height(canvas.height);\n\n            // Add img to drawing place\n            // drawingPlace = img\n            let drawingPlace;\n            if (this.state.mode !== 'shape' || this.state.shape === 'none') {\n              if (isImg !== null) {\n                const imgPlace = new Konva.Image({\n                  image: isImg,\n                  x: 0,\n                  y: 0,\n                  id: 'imgPlace',\n                  width: isImg.width,\n                  height: isImg.height,\n                });\n  \n                drawingPlace = new Konva.Image({\n                  image: canvas,\n                  x: 0,\n                  y: 0,\n                  id: 'drawingPlace',\n                  width: isImg.width,\n                  height: isImg.height,\n                });\n  \n                const group = new Konva.Group({\n                  id: 'group',\n                  width: isImg.width,\n                  height: isImg.height,\n                });\n  \n                group.add(imgPlace);\n                group.add(drawingPlace);\n                _stageLayers.add(group);\n                \n              } else {\n                if (this.state.text === 'on') {\n                  this.Text.createTextArea(canvas, _stageLayers, drawingPlace, this.getStage);\n                  return;\n                }\n                if (this.state.bezier === 'create-bezier') {\n                  // this.Text.createTextArea(canvas, _stageLayers, drawingPlace, this.getStage);\n\n                  this.BezierCurve.createBezier(canvas, _stageLayers, drawingPlace, this.getStage, this.state.sizeBezier, this.state.color);\n                  return;\n                }\n                \n                drawingPlace = new Konva.Image({\n                  image: canvas,\n                  x: 0,\n                  y: 0,\n                  id: 'drawingPlace'\n                });\n  \n                _stageLayers.add(drawingPlace);\n              }\n\n              drawingPlace.on('mousedown', (event) => {\n                this.Mouse.mouseDown(event);\n              });\n\n              drawingPlace.on('mouseup', () => {\n                this.Mouse.mouseUp();\n              });\n\n              drawingPlace.on('mousemove', () => {\n                this.Mouse.mouseMove(drawingPlace);\n              });\n            } else {\n              if (this.state.shape === 'rect') \n                this.Shape.createRect(canvas, _stageLayers, drawingPlace, this.state.color);\n              else if (this.state.shape === 'star')\n                this.Shape.createStar(canvas, _stageLayers, drawingPlace, this.state.color);\n              else if (this.state.shape === 'arrow')\n                this.Shape.createArrow(canvas, _stageLayers, drawingPlace, this.state.color);\n              else if (this.state.shape === 'circle')\n                this.Shape.createCircle(canvas, _stageLayers, drawingPlace, this.state.color);\n              else if (this.state.shape === 'ellipse')\n                this.Shape.createEllipse(canvas, _stageLayers, drawingPlace, this.state.color);\n            }        \n          }\n        }\n      })\n    });\n    if (this.preventCenter === true) {\n      this.getStage.x(tmpX);\n      this.getStage.y(tmpY);\n      this.getStage.scaleX(tmpScaleX);\n      this.getStage.scaleY(tmpScaleY);\n    }\n    this.getStage.draw();\n  }\n\n  offAllButtons = () => {\n    if (this.state.mode !== 'bezier') {\n      let anchors = this.getStage.find(node => {\n        return node.className === 'Circle' && node.id() === 'anchor';\n      });\n      // if (this.saveAnchors !== undefined) {\n        //   this.saveAnchors.forEach(anchors => {\n          //     anchors.visible(false);\n          //   });\n          // }\n      anchors.forEach(node => {\n        node.visible(false);\n      });\n    }\n    this.state.bezier = 'none';\n    const el = document.querySelectorAll('img');\n    el.forEach(img => {\n      if(img.id) {\n        img.click();\n      }\n    });\n  }\n\n  addImage = () => {\n    const el = document.getElementById('add-image');\n\n    if (el.files && el.files[0]) {\n      var FR = new FileReader();\n      FR.onload = () => {\n        var img = new window.Image();\n        img.src = FR.result;\n        img.onload = () => {\n          this.addLayer(img);\n        };\n      };\n\n      FR.readAsDataURL(el.files[0]);\n      el.value = '';\n    };\n    this.offAllButtons();\n  }\n\n  downloadImg(uri, name) {\n    let link = document.createElement('a');\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  saveImg = () => {\n    this.offAllButtons();\n    const { widthFrame, heightFrame, filterTab } = this.state;\n    const stageLayer = this.getStage.children;\n    \n    let canvas = document.createElement('canvas');\n    canvas.width = widthFrame;\n    canvas.height = heightFrame;\n    let ctx = canvas.getContext('2d');\n    ctx.filter = this.state.filter; // add filters to canvas;\n    let childrenCanvas = 0;\n    stageLayer.forEach(_layers => {\n      if (_layers.visible() === false || _layers.id() === 'defaultLayer') {\n        return;\n      }\n\n      _layers.children.forEach(_shape => {\n        if (_shape.id() === 'group' || _shape.id() === 'bezierGroup') {\n          _shape.children.forEach(_groupChildren => {\n            if (_groupChildren.id() === 'imgPlace') {\n              ctx.drawImage(_groupChildren.getImage(), _shape.x(), _shape.y());\n            } else if (_groupChildren.id() === 'drawingPlace'){\n              childrenCanvas = _groupChildren.getImage();\n              ctx.drawImage(childrenCanvas, _shape.x(), _shape.y(), _shape.width(), _shape.height());\n            } else if (_groupChildren.name() === 'shape'){\n              let x = Math.abs((_groupChildren.x() * _shape.scaleX()) + _shape.x());\n              let y = Math.abs((_groupChildren.y() * _shape.scaleY()) + _shape.y());\n              let width = _groupChildren.width() * _shape.scaleX();\n              let height = _groupChildren.height() * _shape.scaleY();\n\n              if (_groupChildren.id() === 'circle') {\n                x = x - (_groupChildren.radius() * _shape.scaleX());\n                y = y - (_groupChildren.radius() * _shape.scaleY());\n              } \n              if (_groupChildren.id() === 'ellipse') {\n                x = x - (_groupChildren.radiusX() * _shape.scaleX());\n                y = y - (_groupChildren.radiusY() * _shape.scaleY());\n              }\n              if (_groupChildren.id() === 'arrow') {\n                _groupChildren.points().forEach((point, index) => {\n                  if (index === 2) {\n                    if (point < 0) {\n                      width = width * (-1);\n                    }\n                  }\n                  if (index === 3) {\n                    if (point < 0) {\n                      height = height * (-1);\n                    }\n                  }\n                });\n              }\n              childrenCanvas = _groupChildren.toCanvas();\n              ctx.drawImage(childrenCanvas, x, y, width, height);\n            } else if (_groupChildren.id() === 'text') {\n              let x = Math.abs((_groupChildren.x() * _shape.scaleX()) + _shape.x());\n              let y = Math.abs((_groupChildren.y() * _shape.scaleY()) + _shape.y());\n              let width = _groupChildren.width() * _shape.scaleX();\n              let height = _groupChildren.height() * _shape.scaleY();\n\n              childrenCanvas = _groupChildren.toCanvas();\n              ctx.drawImage(childrenCanvas, x, y, width, height);\n            } else if (_groupChildren.id() === 'bezierImage') {\n              // let x = Math.abs(_groupChildren.x() + _shape.x());\n              // let y = Math.abs(_groupChildren.y() + _shape.y());\n              childrenCanvas = _groupChildren.getImage();\n              ctx.drawImage(childrenCanvas, _shape.x(), _shape.y(), _groupChildren.width(), _groupChildren.height());\n            }\n          });\n        } else {\n          childrenCanvas = _shape.getImage();\n          ctx.drawImage(childrenCanvas, 0, 0);\n        }\n      });\n    });\n\n    const saveGroupURL = canvas.toDataURL('image/png');\n    this.downloadImg(saveGroupURL, 'img');\n    this.setState({\n      filterTab: filterTab,\n    });\n    this.offAllButtons();\n  }\n\n  addLayer = (isImg, width, height, newFileTMP) => {\n    const { layerManagement, widthFrame, heightFrame, newFile } = this.state;\n    const stageLayer = this.stage.getStage().children;\n\n    if (newFileTMP === true || newFile === true) {\n      // Here I change all layer on false\n      stageLayer.forEach(_layers => {\n        _layers.name('yes');\n      });\n\n      layerManagement.forEach(_layers => {\n        _layers.activeLayer = 'false';\n      });\n\n      //This works when I add layer from layerManagement in application\n      if (height === undefined) {\n        width = widthFrame;\n        height = heightFrame;\n      }\n\n      let layer = new Konva.Layer({\n        id: 'newLayer',\n        name: 'no',\n        //Clip is for img to able move\n        clip: {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height,\n        }\n      });\n\n      this.defaultLayer.width(width);\n      this.defaultLayer.height(height);\n\n      this.getStage.add(layer);\n      let layerTMP = layerManagement;\n\n      layerTMP.push({\n        name: layer.nodeType,\n        key: layer._id,\n        activeLayer: 'true',\n        isVisible: 'true',\n      });\n\n      this.addDrawingCanvas(width, height, isImg);\n      this.setState({\n        layerManagement: layerTMP,\n      });\n      // this.offAllButtons();\n    } else {\n      this.offAllButtons();\n      alert('YOU MUST CREATE NEW FILE FIRST');\n    }\n  }\n\n  clickLayer = (e) => {\n    const { layerManagement, buttonTab } = this.state;\n    const stageLayer = this.getStage.children;\n    let layerTMP = layerManagement;\n\n    stageLayer.forEach(_stageLayers => {\n      _stageLayers.name('yes');\n    });\n\n    layerManagement.forEach(_layers => {\n      _layers.activeLayer = 'false';\n    });\n\n    layerTMP.forEach(_layers => {\n      if (e.target.id === _layers.key.toString()) {\n        if (_layers.activeLayer === 'false') {\n          _layers.activeLayer = 'true';\n        }\n        else \n          _layers.activeLayer = 'false';\n      }\n    });\n    // WHEN I DELETE LAYER, CLICKED LAYER IS CORRECT\n    stageLayer.forEach(_layers => {\n      if (e.target.id === _layers._id.toString()) {\n        if (_layers.name() === 'no') {\n          _layers.name('yes');\n          _layers.moveToTop();\n        }\n      }\n    });\n\n    this.setState({\n      layerManagement: layerTMP,\n    });\n  }\n\n  setInvisible = (e) => {\n    const { layerManagement } = this.state;\n    const stageLayer = this.getStage.children;\n\n    layerManagement.forEach(_layersManagement => {\n      stageLayer.forEach((_layers, _index) => {\n        if (e.target.id === _layers._id.toString() && e.target.id === _layersManagement.key.toString()) {\n          if (_index >= 1) {\n            if (_layers.visible() === false)\n              _layers.visible(true);\n            else\n              _layers.visible(false);\n          } else {\n            alert('You can not turn off last layer');\n          }\n        }\n      });\n    });\n\n\n      layerManagement.forEach((_layers, _index) => {\n        if (e.target.id === _layers.key.toString()) {\n          if (_index >= 1) {\n            if (_layers.isVisible === 'true')\n              _layers.isVisible = 'false';\n            else\n              _layers.isVisible = 'true';\n          }\n        }\n      });\n\n    this.getStage.draw();\n  }\n\n  removeLayer = () => {\n    const { layerManagement } = this.state;\n    const stageLayer = this.getStage.children;\n    let layerTMP = layerManagement;\n    \n    layerTMP.forEach((_layersManagement, _index) => {\n      if (layerManagement.length === 1) {\n        alert('You can not delete last layer');\n        return;\n      }\n      if (_layersManagement.activeLayer === 'true') {\n        stageLayer.forEach(_stageLayers => {\n          if (_stageLayers._id === _layersManagement.key) {\n            _stageLayers.getLayer().remove();\n          }\n        });\n\n        layerTMP.splice(_index, 1);\n      }\n    });\n\n    // Set true on last element \n    layerTMP.forEach((_layersManagement, _index) => {\n      if (layerManagement.length - 1 === _index) {\n        _layersManagement.activeLayer = 'true';\n      }\n    });\n    \n    this.setState({\n      layerManagement: layerTMP,\n    });\n  }\n\n  displayLayer = () => {\n    const { layerManagement } = this.state;\n    let layerTMP = layerManagement;\n    const stageLayer = this.getStage.children;\n\n    stageLayer.forEach(_layers => {\n      if (_layers.id() === 'defaultLayer') {\n        return;\n      }\n\n      layerTMP.push({\n        name: _layers.nodeType,\n        key: _layers._id,\n        activeLayer: 'false',\n      });\n    });\n\n    this.setState({\n      layerManagement: layerTMP,\n    });\n  }\n\n  moveLayerUpOrBottom = (buttonUpClick) => {\n    const stageLayer = this.getStage.children;\n    const { layerManagement } = this.state;\n    let tmpLayerManagement = layerManagement;\n    let preventMoveToTheBottom = false;\n    Array.prototype.move = function (from, to) {\n      this.splice(to, 0, this.splice(from, 1)[0]);\n    }\n\n    layerManagement.forEach((_layersManagement, _index) => {\n      stageLayer.forEach(_stageLayers => {\n        if (_stageLayers._id === _layersManagement.key) {\n          if (_layersManagement.activeLayer === 'true') {\n            if (buttonUpClick === true && _index >= 1) {\n              tmpLayerManagement.move(_index, _index - 1);\n              _stageLayers.moveDown();\n            } else {\n              if (preventMoveToTheBottom === false) {\n                if (_index === 1) {\n                  _stageLayers.visible(true);\n                  _layersManagement.isVisible = 'true';\n                }\n                tmpLayerManagement.move(_index, _index + 1);\n                _stageLayers.moveUp();\n                preventMoveToTheBottom = true;\n              }\n            }\n          }\n        }\n      });\n    });\n    \n    // First layer must be always visible \n    layerManagement.forEach((_layersManagement, _index) => {\n      stageLayer.forEach(_stageLayers => {\n        if (_stageLayers.index === 0) {\n          if (_stageLayers._id === _layersManagement.key) {\n            _stageLayers.visible(true);\n            _layersManagement.isVisible = 'true';\n          }\n        }\n      });\n    });\n\n    this.setState({\n      layerManagement: tmpLayerManagement,\n    });\n  }\n  \n  returnStage = () => {\n    return this.getStage;\n  }\n\n  returnLayerManagement = () => {\n    return this.state.layerManagement;\n  }\n\n  returnStateBezier = () => {\n    return this.state.bezier;\n  }\n\n  render() {\n    this.buttonUpClick = false;\n    return (\n      <div className='react-app'>\n        <div className='mouseCircle'></div>\n        <div className='back'></div>\n          <Header clearDrawingPlace={this.clearDrawingPlace}\n            addImage={this.addImage}\n            clearAll={this.clearAll}\n            saveImg={this.saveImg}\n            add={this.newFile}\n            popCanvasOptions={this.popCanvasOptions}\n          />\n\n          <main>\n            <div className='layer-management' \n              onMouseMove={(event) => { this.Mouse.dragLayerManagement('.layer-management', event) }}>\n              <ul>\n                {\n                  this.state.layerManagement.map((_layers, index) => {\n                    return (\n                      <div>\n                        <li id={_layers.key}\n                          key={_layers.key}\n                          name={_layers.activeLayer}\n                          onMouseDown={(e) => { this.offAllButtons(); this.clickLayer(e); }}\n                        >\n                          <div className={'invisible-btn'}\n                            id={_layers.key} \n                            name={_layers.isVisible}\n                            onMouseDown={(e) => { this.offAllButtons(); this.setInvisible(e); }}>\n                              o\n                          </div>\n                          {index} {_layers.name} {_layers.key}\n                        </li>\n                      </div>\n                    )\n                  })\n                }\n              </ul>\n              <div className={'options'}>\n                <div className='move-options'>\n                  <button className='layer-management-options-btn up-btn'\n                    onMouseDown={() => { \n                      this.buttonUpClick = true;\n                      this.moveLayerUpOrBottom(this.buttonUpClick);\n                      this.offAllButtons();\n                     }}>/\\</button>\n                  <button className='layer-management-options-btn down-btn'\n                    onMouseDown={() => {\n                      this.buttonUpClick = false;\n                      this.moveLayerUpOrBottom(this.buttonUpClick);\n                      this.offAllButtons();\n                     }}>\\/</button>\n                </div>\n                <button className='layer-management-options-btn add-btn'\n                onClick={() => { this.offAllButtons(); this.addLayer(null); }}>add</button>\n                <button className='layer-management-options-btn remove-btn'\n                onClick={() => { this.offAllButtons(); this.removeLayer() }}>remove</button>\n              </div>\n            </div>\n            <ToolBar mode={this.changeMode}\n              color={this.changeColor}\n              ref={node => { this.tob = node }}\n              returnStage={this.returnStage}\n              returnStateBezier={this.returnStateBezier}\n              returnLayerManagement={this.returnLayerManagement}\n              offAllButtons={this.offAllButtons}\n              text={this.changeText}\n            />\n            <Settings changeSizePencil={this.changeSizePencil}\n              changeSizeEraser={this.changeSizeEraser}\n              changeSizeBezier={this.changeSizeBezier}\n              mode={this.state.mode}\n              color={this.state.color}\n              changeColor={this.changeColor}\n              changeFilter={this.changeFilter}\n              changeBrush={this.changeBrush}\n              changeShape={this.changeShape}\n              changeBezier={this.changeBezier}\n              returnStage={this.returnStage}\n            />\n            <Stage className={'drawing-place stage'}\n              width={window.innerWidth}\n              height={window.innerHeight - 100 - 13}\n              onMouseMove={(e) => { this.Mouse.mouseCircle(e) }}\n              ref={node => { this.stage = node }}\n              fill={'red'}\n            >\n            </Stage>\n          </main>\n\n          <footer>\n            <div className='footer-wrapper wrapper'>\n              Soon there will be a footer here !\n            </div>\n          </footer>\n      </div>\n    );\n  }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}