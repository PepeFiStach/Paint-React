{"version":3,"sources":["Image/pencil.jpg","Image/move.jpg","Image/pencil-white.png","Image/ruber.png","Image/move-white.jpg","Image/ruber-white.png","Image/color-wheel.png","Functionality/Paint.jsx","Functionality/Mouse.jsx","Component/ToolBarComponent/Eraser.jsx","Component/ToolBarComponent/Pencil.jsx","Component/ToolBarComponent/Move.jsx","Component/ToolBarComponent/Filter.jsx","Component/ToolBarComponent/Resize.jsx","Component/ToolBarComponent/Shape.jsx","Component/ToolBarComponent/Text.jsx","Component/ToolBarComponent/Bucket.jsx","Component/ToolBarComponent/BezierCurve.jsx","Component/ToolBarComponent/ColorPallete.jsx","Component/ToolBar.jsx","Component/Settings.jsx","Component/Header.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Paint","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getPosition","pos","lastPointerPositionTemp","startPainting","child","img","mode","stage","isGroup","color","sizePencil","brush","sizeEraser","ctx","getImage","getContext","elBrushOptions","document","querySelectorAll","lineWidth","globalCompositeOperation","lineJoin","lineCap","shadowBlur","shadowColor","forEach","brushOptions","_index","value","querySelector","selectedIndex","strokeStyle","beginPath","groupX","groupY","transformerX","transformerY","transformerWidth","transformerHeight","group","find","layer","undefined","parent","x","scaleX","y","scaleY","clipWidth","width","clipHeight","height","localPos","moveTo","getPointerPosition","localPositionTMP","getRandomFloat","min","max","Math","random","i","angle","PI","radius","fillStyle","fillRect","cos","sin","alert","lineTo","closePath","stroke","id","draw","React","Component","Mouse","appState","shape","scroll","e","scaleBy","stageWidth","round","target","style","toString","oldScale","mousePointTo","newScale","deltaY","scale","newPos","position","l","lenght","anchorSize","mouseUp","state","isDrawing","isMouseOnCanvas","mouseDown","event","evt","button","lastPointerPosition","mouseMove","layerManagement","stageLayer","children","_layersManagement","_stageLayers","activeLayer","key","_id","_children","dragGroup","layerFromManagement","layerFromStage","ch","console","log","preventMouseOverCanvas","className","mouseCircle","el","substr","size","parseInt","window","getComputedStyle","left","top","backgroundColor","display","dragLayerManagement","node","lm","pos1","pos2","pos3","pos4","addEventListener","dragMouseDown","oncontextmenu","navBar","footer","navBarHeight","footerHeight","innerWidth","onmouseup","onmousemove","tmpLeft","innerHeight","tmpTop","preventDefault","clientX","clientY","closeDragElement","elementDrag","offsetTop","offsetLeft","resizeElement","who","elResizer","onmousedown","Eraser","off","image","Image","src","ruber","stateClick","onload","setState","mouseClick","offAllButtons","elMove","removeAttribute","ruberWhite","changeMode","name","_this2","_this3","react_default","a","createElement","onMouseMove","onClick","Pencil","pencil","pencilWhite","ref","Move","move","moveWhite","Filter","filter","filterWhite","Resize","resize","resizeWhite","addResize","returnLayerManagement","returnStage","transformer","Konva","Transformer","rotateEnabled","preventMultipleFor2","currentIndex","index","_l","lastIndex","moveToTop","attachTo","add","click","preventMultipleFor3","removeChildren","moveDown","Shape","createRect","canvas","drawingPlace","shapeDrawingPlace","Rect","fill","Group","createStar","Star","numPoints","innerRadius","outerRadius","createArrow","Arrow","pointerLength","pointerWidth","strokeWidth","createCircle","Circle","createEllipse","Ellipse","retutnShapeDrawingPlace","shapeWhite","Text","text","createTextArea","textNode","fontSize","on","textPosition","getAbsolutePosition","stageBox","getContainer","getBoundingClientRect","areaPosition","textarea","body","appendChild","focus","keyCode","removeChild","buttons","changeText","textWhite","Bucket","bucket","bucketWhite","BezierCurve","bezier","modifyBezier","createBezier","bezierSize","visible","createAnchor","anchor","draggable","bezierGroup","length","bezierWhite","ColorPallete","context","xx","nativeEvent","yy","pixel","getImageData","data","mosueClick","R","G","B","A","colorString","concat","r","getElementById","g","b","changeColor","colorWheel","drawImage","onMouseDown","ToolBar","stateMode","bezierMode","layers","returnStateBezier","buttonTab","preventMultipleFor4","preventMultipleFor5","dataFromColorPallete","dataFromText","returnColor","push","eraser","Eraser_Eraser","Pencil_Pencil","Move_Move","Filter_Filter","Resize_Resize","Shape_Shape","Text_Text","Bucket_Bucket","BezierCurve_BezierCurve","ColorPallete_ColorPallete","Settings","setSizePencil","changeSizePencil","setSizeBezier","changeSizeBezier","setSizeEraser","changeSizeEraser","setColor","setBrush","changeBrush","setFilter","_this$state","valueBlur","valueBrightness","valueContrast","valueGrayscale","valueHueRotate","valueInvert","valueOpacity","valueSaturate","valueSepia","changeFilter","setShape","whichShape","changeShape","setBezier","isClicked","whichBezier","changeBezier","resetFilter","changeOptionsMode","_this$state2","valueSizePencil","valueSizeEraser","valueSizeBezier","modes","PENCIL","htmlFor","type","onMouseLeave","blur","select","onChange","ERASER","FILTER","SHAPE","BEZIER","BUCKET","MOVE","colorBox","regExp","RegExp","splitEl","split","Header","exitCanvasOptions","popCanvasOptions","addImage","saveImg","AppTest","selectLayerManagementElColor","elLayerManagement","elInvisibleBtn","attributes","dataFromToolBar","buttonFromToolBar","dataFromSettings","sizeBezier","dataFromFilter","createBezierBtnClicked","canvasOptions","back","zIndex","newFile","canvasHeightOptions","canvasWidthOptions","newFileTMP","preventCenter","getStage","isNaN","_layer","defaultLayer","Layer","border","layers_TMP","splice","widthFrame","heightFrame","addLayer","addDrawingCanvas","isImg","tmpX","tmpY","tmpScaleX","tmpScaleY","saveScale","breaker","imgPlace","files","FR","FileReader","result","readAsDataURL","filterTab","childrenCanvas","_layers","_shape","_groupChildren","abs","radiusX","radiusY","points","point","toCanvas","saveGroupURL","toDataURL","downloadImg","clip","layerTMP","nodeType","isVisible","clickLayer","_this$state3","setInvisible","removeLayer","getLayer","remove","displayLayer","moveLayerUpOrBottom","buttonUpClick","tmpLayerManagement","preventMoveToTheBottom","Array","prototype","from","to","moveUp","Function","saveAnchors","tmpPointerPosition","anchorLocation","start","center","end","saveFirstBezierPosition","saveCanvas","saveBezier","endPaintShape","anchors","clearRect","attrs","bezierCurveTo","clipFunc","tabX","tabY","MaxX","apply","MaxY","MinY","MinX","rect","localPos2","centerX","centerY","uri","link","download","href","_this4","Header_Header","clearDrawingPlace","clearAll","map","ToolBar_ToolBar","tob","Settings_Settings","lib","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","App_AppTest","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f64ad544.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pencil.c3992041.jpg\";","module.exports = __webpack_public_path__ + \"static/media/move.b10cd0bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pencil-white.09f9d692.png\";","module.exports = __webpack_public_path__ + \"static/media/ruber.1fdf0851.png\";","module.exports = __webpack_public_path__ + \"static/media/move-white.329c531d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ruber-white.8c702c16.png\";","module.exports = __webpack_public_path__ + \"static/media/color-wheel.0fc36b2a.png\";","import React from 'react';\r\n\r\nexport default class Paint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.lastPointerPositionTemp = 0;\r\n        this.localPositionTMP = {};\r\n    }\r\n\r\n    getPosition = (pos) => {\r\n        this.lastPointerPositionTemp = pos;\r\n    }\r\n    \r\n    startPainting = (child, img, mode, stage, isGroup, color, sizePencil, brush, sizeEraser) => {\r\n        if (!child) {\r\n            return;\r\n        }\r\n        let can = child.getImage();\r\n        let ctx = can.getContext('2d');\r\n        const elBrushOptions = document.querySelectorAll('.brush-list option');\r\n        if (mode === 'pencil') {\r\n            ctx.lineWidth = sizePencil;\r\n            ctx.globalCompositeOperation = 'source-over';\r\n        }\r\n        else if (mode === 'eraser') {\r\n            ctx.lineWidth = sizeEraser;\r\n            ctx.lineJoin = \"round\";\r\n            ctx.lineCap = \"round\";\r\n            ctx.shadowBlur = null;\r\n            ctx.shadowColor = null;\r\n            ctx.globalCompositeOperation = 'destination-out';\r\n        } else \r\n            return;\r\n\r\n        elBrushOptions.forEach((brushOptions, _index) => {\r\n            if (brushOptions.value === brush) {\r\n                document.querySelector('.brush-list').selectedIndex = _index ;\r\n            }\r\n        });\r\n        \r\n        ctx.strokeStyle = color;\r\n        \r\n        ctx.beginPath();\r\n        const group = stage.find('Group');\r\n        const layer = stage.find('Layer');\r\n        let density = 50;\r\n        let groupX;\r\n        let groupY;\r\n        let transformerX;\r\n        let transformerY;\r\n        let transformerWidth;\r\n        let transformerHeight;\r\n        \r\n        if (group[0] === undefined || isGroup === false) {\r\n            groupX = 0;\r\n            groupY = 0;\r\n            transformerX = 1;\r\n            transformerY = 1;\r\n            transformerWidth = 1;\r\n            transformerHeight = 1;\r\n        } else {\r\n            // child.parent is a group \r\n            groupX = child.parent.x() * stage.scaleX();\r\n            groupY = child.parent.y() * stage.scaleY();\r\n            transformerX = child.parent.scaleX();\r\n            transformerY = child.parent.scaleY();\r\n            // This is because i set width and height in group in App.jsx\r\n            transformerWidth = child.parent.parent.clipWidth() / child.parent.width();\r\n            transformerHeight = child.parent.parent.clipHeight() / child.parent.height();\r\n        }\r\n\r\n        // img = shape, layer[0] = layer\r\n        let localPos = {\r\n            x: (((this.lastPointerPositionTemp.x\r\n                - img.x()\r\n                - layer[0].x()\r\n                - stage.x()\r\n                - groupX) * transformerWidth)\r\n                / stage.scaleX())\r\n                / transformerX,\r\n\r\n            y: (((this.lastPointerPositionTemp.y\r\n                - img.y()\r\n                - layer[0].y()\r\n                - stage.y()\r\n                - groupY) * transformerHeight)\r\n                / stage.scaleY())\r\n                / transformerY,\r\n        }\r\n        if (brush !== 'spray' || mode === 'eraser')\r\n            ctx.moveTo(localPos.x, localPos.y);\r\n\r\n        let pos = stage.getPointerPosition();\r\n\r\n        localPos = {\r\n            x: (((pos.x\r\n                - img.x()\r\n                - layer[0].x()\r\n                - stage.x()\r\n                - groupX) * transformerWidth)\r\n                / stage.scaleX())\r\n                / transformerX,\r\n\r\n            y: (((pos.y\r\n                - img.y()\r\n                - layer[0].y()\r\n                - stage.y()\r\n                - groupY) * transformerHeight)\r\n                / stage.scaleY())\r\n                / transformerY,\r\n        }\r\n        this.localPositionTMP = {\r\n            x: localPos.x,\r\n            y: localPos.y,\r\n        };\r\n        if (mode !== 'eraser') {\r\n            switch (brush) {\r\n                case 'default':\r\n                    ctx.lineJoin = \"round\";\r\n                    ctx.lineCap = \"round\";\r\n                    ctx.shadowBlur = null;\r\n                    ctx.shadowColor = null;\r\n                    break;\r\n\r\n                case 'shadow':\r\n                    ctx.lineJoin = \"round\";\r\n                    ctx.lineCap = \"round\";\r\n                    ctx.shadowBlur = sizePencil;\r\n                    ctx.shadowColor = color;\r\n                    break;\r\n\r\n                case 'thick-brush':\r\n                    ctx.shadowBlur = null;\r\n                    ctx.shadowColor = null;\r\n                    ctx.lineJoin = 'miter';\r\n                    ctx.lineCap = 'butt';\r\n                    break;\r\n\r\n                case 'spray':\r\n                    function getRandomFloat(min, max) {\r\n                        return Math.random() * (max - min) + min;\r\n                    }\r\n\r\n                    for (var i = density; i--;) {\r\n                        var angle = getRandomFloat(0, Math.PI * 2);\r\n                        var radius = getRandomFloat(0, sizePencil);\r\n                        ctx.fillStyle = color;\r\n                        ctx.fillRect(\r\n                            localPos.x + radius * Math.cos(angle),\r\n                            localPos.y + radius * Math.sin(angle),\r\n                            1, 1);\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    alert('Brush is undefined');\r\n                    break;\r\n            }\r\n        }\r\n        // group[0].width(localPos.x);\r\n        // group[0].height(localPos.y);\r\n        // group[0].children[0].width(localPos.x);\r\n        // group[0].children[0].height(localPos.y);\r\n        // group[0].children[1].width(localPos.x);\r\n        // group[0].children[1].height(localPos.y);\r\n\r\n        if (brush !== 'spray' || mode === 'eraser') {\r\n            ctx.lineTo(localPos.x, localPos.y);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n\r\n        this.lastPointerPositionTemp = pos;\r\n        // stage.draw();\r\n        if (img.parent.id === 'group') {\r\n            img.parent.parent.draw();\r\n        } else {\r\n            img.parent.draw();\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Konva from 'konva';\r\nimport Paint from './Paint.jsx';\r\n\r\nexport default class Mouse extends React.Component {\r\n    constructor(props, stage, appState, mode, color, sizePencil, brush, sizeEraser, shape) {\r\n        super(props);\r\n\r\n        this.stage = stage;\r\n        this.appState = appState;\r\n        this.mode = mode;\r\n        this.color = color;\r\n        this.sizePencil = sizePencil;\r\n        this.brush = brush;\r\n        this.sizeEraser = sizeEraser;\r\n        this.shape = shape;\r\n        \r\n        this.state = {\r\n            isDrawing: false,\r\n            isMouseOnCanvas: false,\r\n            lastPointerPosition: 0,\r\n        }\r\n\r\n        this.Paint = new Paint(props);\r\n    }\r\n\r\n    scroll = (e, scaleBy) => {\r\n        let stageWidth = Math.round(this.stage.width() * 100) / 100;\r\n        if (e.target.style.width === stageWidth.toString() + 'px') {\r\n            var oldScale = this.stage.scaleX();\r\n\r\n            var mousePointTo = {\r\n                x: this.stage.getPointerPosition().x / oldScale - this.stage.x() / oldScale,\r\n                y: this.stage.getPointerPosition().y / oldScale - this.stage.y() / oldScale,\r\n            };\r\n\r\n            var newScale = e.deltaY < 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n            this.stage.scale({ x: newScale, y: newScale });\r\n\r\n            var newPos = {\r\n                x: -(mousePointTo.x - this.stage.getPointerPosition().x / newScale) * newScale,\r\n                y: -(mousePointTo.y - this.stage.getPointerPosition().y / newScale) * newScale\r\n            };\r\n            this.stage.position(newPos);\r\n            let l = this.stage.find('Transformer');\r\n            if (l.lenght > 0) {\r\n                l[0].anchorSize(10 + this.stage.scaleX());\r\n            }\r\n            this.stage.draw();\r\n        }\r\n    }\r\n\r\n    mouseUp = () => {\r\n        this.state.isDrawing = false;\r\n        this.state.isMouseOnCanvas = false;\r\n    }\r\n\r\n    mouseDown = (event) => {\r\n        // let e = window.event; FOR MAC OS\r\n        // if (e.button === 0) {\r\n            //     this.state.isDrawing = true;\r\n            //     this.state.isMouseOnCanvas = true;\r\n            //     this.state.lastPointerPosition = this.stage.getPointerPosition();\r\n            //     this.Paint.getPosition(this.state.lastPointerPosition);\r\n            // }\r\n        if (event.evt.button === 0) {\r\n            this.state.isDrawing = true;\r\n            this.state.isMouseOnCanvas = true;\r\n            this.state.lastPointerPosition = this.stage.getPointerPosition();\r\n            this.Paint.getPosition(this.state.lastPointerPosition);\r\n        }\r\n    }\r\n\r\n    mouseMove = (img) => {\r\n        const { layerManagement } = this.appState;\r\n        const stageLayer = this.stage.children;\r\n        let isGroup;\r\n\r\n        layerManagement.forEach(_layersManagement => {\r\n            stageLayer.forEach(_stageLayers => {\r\n                if (_layersManagement.activeLayer === 'true') {\r\n                    const { isDrawing } = this.state;\r\n                    const stage = this.stage;\r\n                    if (!isDrawing) {\r\n                        return;\r\n                    }\r\n                    if (_layersManagement.key === _stageLayers._id) {\r\n                        _stageLayers.children.forEach(_children => {\r\n                            // It's allow you to draw on previous layerManagement\r\n                            // It's divided like this because when I add image, img and draw  place are grouped\r\n                            if (_children.id() === 'drawingPlace') {\r\n                                isGroup = false;\r\n                                this.Paint.startPainting(_children, img, this.mode, stage, \r\n                                    isGroup, this.color, this.sizePencil, this.brush, this.sizeEraser);\r\n                            }\r\n\r\n                            if (_children.id() === 'group') {\r\n                                isGroup = true;\r\n                                this.Paint.startPainting(_children.children[1], img, this.mode, stage, \r\n                                    isGroup, this.color, this.sizePencil, this.brush, this.sizeEraser);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /* NEW PROTOTYPE VERSION OF MOVE IMAGE */\r\n    dragGroup = () => {\r\n        const { layerManagement } = this.appState;\r\n        const stageLayer = this.stage.children;\r\n\r\n        layerManagement.forEach((layerFromManagement) => {\r\n            stageLayer.forEach(layerFromStage => {\r\n                if (layerFromManagement.activeLayer === 'true') {\r\n                    if (layerFromManagement.key === layerFromStage._id) {\r\n                        layerFromStage.children.forEach(ch => {\r\n                            if (ch.id() === 'group') {\r\n                                if (this.mode === 'move') {\r\n                                    let x = this.stage.getPointerPosition().x - this.stage.x();\r\n                                    let y = this.stage.getPointerPosition().y - this.stage.y();\r\n                                    ch.x(x / this.stage.scaleX());\r\n                                    ch.y(y / this.stage.scaleY());\r\n\r\n                                    this.stage.draw();\r\n                                    console.log(ch);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    preventMouseOverCanvas = (e) => {\r\n        if (e.target.className === undefined) {\r\n            this.state.isDrawing = false;\r\n        }\r\n    }\r\n\r\n    mouseCircle = (e) => {\r\n        this.preventMouseOverCanvas(e);\r\n        const el = document.querySelector('.mouseCircle');\r\n        let tmpState = this.mode.substr(0, 3);\r\n        if (tmpState === 'no-' || this.mode === 'default') {\r\n            el.style.display = 'none';\r\n            return;\r\n        }\r\n\r\n        let size;\r\n        if (this.mode === 'pencil')\r\n            size = this.sizePencil;\r\n        else if (this.mode === 'eraser')\r\n            size = this.sizeEraser;\r\n\r\n        let width = parseInt(window.getComputedStyle(el).width, 10);\r\n        let height = parseInt(window.getComputedStyle(el).height, 10);\r\n        let x = this.stage.getPointerPosition().x;\r\n        let y = this.stage.getPointerPosition().y;\r\n        el.style.left = (x - (width / 2)) + 'px';\r\n        el.style.top = (y + 80 - (height / 2)) + 'px'; // 80 is header hight\r\n        el.style.width = (size * this.stage.scaleX()) + 'px';\r\n        el.style.height = (size * this.stage.scaleY()) + 'px';\r\n        if (this.mode === 'pencil')\r\n            el.style.backgroundColor = this.color;\r\n        else if (this.mode === 'eraser')\r\n            el.style.backgroundColor = '#fff';\r\n    }\r\n\r\n    dragLayerManagement = (node) => {\r\n        const lm = document.querySelector(node);\r\n        var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n        if (document.querySelector(node)) {\r\n            // document.querySelector(node).oncontextmenu = dragMouseDown;\r\n            document.querySelector(node).addEventListener('mousedown', (event) => {\r\n                if (event.button === 2)\r\n                    dragMouseDown(event);\r\n            });\r\n        } else\r\n            lm.oncontextmenu = dragMouseDown;\r\n            \r\n        let navBar = document.querySelector('.nav-bar');\r\n        let footer = document.querySelector('footer');\r\n\r\n        let x = parseInt(window.getComputedStyle(lm).left, 10);\r\n        let y = parseInt(window.getComputedStyle(lm).top, 10);\r\n\r\n        let width = parseInt(window.getComputedStyle(lm).width, 10);\r\n        let height = parseInt(window.getComputedStyle(lm).height, 10);\r\n\r\n        let navBarHeight = parseInt(window.getComputedStyle(navBar).height, 10);\r\n        let footerHeight = parseInt(window.getComputedStyle(footer).height, 10);\r\n\r\n        if (x + width > window.innerWidth - 5) {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n            let tmpLeft = (x + width) - (window.innerWidth - 5);\r\n            lm.style.left = (x - tmpLeft) + \"px\";\r\n        }\r\n        else if (y + height > window.innerHeight - footerHeight - 5) {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n            let tmpTop = (y - height) + (window.innerHeight - footerHeight - 5);\r\n            lm.style.top = ((tmpTop - (y - height) - height) + \"px\");\r\n            \r\n        }\r\n        else if (x < 5) {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n            let tmpLeft = x - window.innerWidth - 5;\r\n            lm.style.left = x - (tmpLeft + window.innerWidth) + \"px\";\r\n        }\r\n        else if (y < navBarHeight + 5) {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n            let tmpTop = y - navBarHeight - 5;\r\n            lm.style.top = (y - navBarHeight - 5) - \r\n                           (tmpTop - navBarHeight - 5) + \"px\";\r\n        }\r\n        function dragMouseDown(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            document.onmouseup = closeDragElement;\r\n            document.onmousemove = elementDrag;\r\n        }\r\n\r\n        function elementDrag(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            pos1 = pos3 - e.clientX;\r\n            pos2 = pos4 - e.clientY;\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            lm.style.top = (lm.offsetTop - pos2) + \"px\";\r\n            lm.style.left = (lm.offsetLeft - pos1) + \"px\";\r\n        }\r\n        \r\n        function closeDragElement() {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n        }\r\n    }\r\n\r\n    resizeElement = (node, who) => {\r\n        const elResizer = document.querySelector(node);\r\n        const el = document.querySelector(who);\r\n        if (document.querySelector(node)) {\r\n            document.querySelector(node).onmousedown = dragMouseDown;\r\n        } else {\r\n            elResizer.onmousedown = dragMouseDown;\r\n        }\r\n\r\n        function dragMouseDown(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            document.onmouseup = closeDragElement;\r\n            document.onmousemove = elementDrag;\r\n        }\r\n\r\n        function elementDrag(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            el.style.width = (e.clientX - el.offsetLeft) + 'px';\r\n            el.style.height = (e.clientY - el.offsetTop) + 'px';\r\n        }\r\n\r\n        function closeDragElement() {\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ruber from '../../Image/ruber.png';\r\nimport ruberWhite from '../../Image/ruber-white.png';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class Eraser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            stateClick: false,\r\n            mode: 'eraser',\r\n            name: 'eraser',\r\n        };\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const image = new window.Image();\r\n        image.src = ruber;\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n            });\r\n        };\r\n    }\r\n\r\n    off = () => {\r\n        const image = new window.Image();\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.src = ruber;\r\n        this.state.mode = 'no-eraser';\r\n        this.state.stateClick = false;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n                stateClick: false,\r\n                mode: 'no-eraser',\r\n            });\r\n        };\r\n    }\r\n\r\n    mouseClick = () => {\r\n        const { stateClick } = this.state;\r\n        this.props.offAllButtons();\r\n        const elMove = document.querySelector('.eraser-img');\r\n        if (!stateClick) {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = ruberWhite;\r\n            this.state.mode = 'eraser';\r\n            elMove.id = 'eraser-id';\r\n            this.state.stateClick = true;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: true,\r\n                    mode: 'eraser',\r\n                });\r\n            };\r\n        } else {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = ruber;\r\n            this.state.mode = 'no-eraser';\r\n            elMove.removeAttribute('id');\r\n            this.state.stateClick = false;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: false,\r\n                    mode: 'no-eraser',\r\n                });\r\n            };\r\n        }\r\n        \r\n        this.props.changeMode(this.state.mode);\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state;\r\n        let img;\r\n\r\n        if (image === null)\r\n            img = <img />;\r\n        else {\r\n            img = <div className={'eraser'}\r\n                    onMouseMove={() => { this.Mouse.dragLayerManagement('.eraser') }}\r\n                    onClick={this.mouseClick}>\r\n                        <img src={image.src}\r\n                            width={image.width}\r\n                            height={image.height}\r\n                            className={'eraser-img'}\r\n                        />\r\n                        <div className='eraser-resize'\r\n                            onMouseMove={() => { \r\n                                this.Mouse.resizeElement('.eraser-resize', '.eraser')\r\n                            }}>\r\n                        </div>\r\n                </div>\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n} ","import React from 'react';\r\nimport pencil from '../../Image/pencil.jpg';\r\nimport pencilWhite from '../../Image/pencil-white.png';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class Pencil extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            stateClick: false,\r\n            mode: 'pencil',\r\n            name: 'pencil',\r\n        };\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const image = new window.Image();\r\n        image.src = pencil;\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n            });\r\n        };\r\n    }\r\n\r\n    off = () => {\r\n        const image = new window.Image();\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.src = pencil;\r\n        this.state.mode = 'no-pencil';\r\n        this.state.stateClick = false;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n                stateClick: false,\r\n                mode: 'no-pencil',\r\n            });\r\n        };\r\n    }\r\n\r\n    mouseClick = () => {\r\n        const { stateClick } = this.state;\r\n        this.props.offAllButtons();\r\n        const elMove = document.querySelector('.pencil-img');\r\n        if (!stateClick) {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = pencilWhite;\r\n            this.state.mode = 'pencil';\r\n            elMove.id = 'pencil-id';\r\n            this.state.stateClick = true;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: true,\r\n                    mode: 'pencil',\r\n                });\r\n            };\r\n        } else {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = pencil;\r\n            this.state.mode = 'no-pencil';\r\n            elMove.removeAttribute('id');\r\n            this.state.stateClick = false;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: false,\r\n                    mode: 'no-pencil',\r\n                });\r\n            };\r\n        }\r\n\r\n        this.props.changeMode(this.state.mode);\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state;\r\n        let img;\r\n\r\n        if (image === null)\r\n            img = <img \r\n                    ref={node => { this.pencil = node }}\r\n                    className={'pencil'}\r\n                />;\r\n        else\r\n            img = <div className={'pencil'}\r\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.pencil') }}\r\n                onClick={this.mouseClick}>\r\n                <img src={image.src}\r\n                    width={image.width}\r\n                    height={image.height}\r\n                    className={'pencil-img'}\r\n                />\r\n                <div className='pencil-resize'\r\n                    onMouseMove={() => {\r\n                        this.Mouse.resizeElement('.pencil-resize', '.pencil')\r\n                    }}>\r\n                </div>\r\n            </div>\r\n\r\n        return (\r\n            <div>\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport move from '../../Image/move.jpg';\r\nimport moveWhite from '../../Image/move-white.jpg';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class Move extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            stateClick: false,\r\n            mode: 'move',\r\n            name: 'move',\r\n        };\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const image = new window.Image();\r\n        image.src = move;\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n            });\r\n        };\r\n    }\r\n\r\n    off = () => {\r\n        const image = new window.Image();\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.src = move;\r\n        this.state.mode = 'no-move';\r\n        this.state.stateClick = false;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n                stateClick: false,\r\n                mode: 'no-move',\r\n            });\r\n        };\r\n    }\r\n\r\n    mouseClick = () => {\r\n        const {stateClick} = this.state;\r\n        this.props.offAllButtons();\r\n        const elMove = document.querySelector('.move-img');\r\n\r\n        if (!stateClick) {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = moveWhite;\r\n            this.state.mode = 'move';\r\n            elMove.id = 'move-id';\r\n            this.state.stateClick = true;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: true,\r\n                    mode: 'move',\r\n                });\r\n            };\r\n        } else {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = move;\r\n            this.state.mode = 'no-move';\r\n            elMove.removeAttribute('id');\r\n            this.state.stateClick = false;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: false,\r\n                    mode: 'no-move',\r\n                });\r\n            };\r\n        }\r\n\r\n        this.props.changeMode(this.state.mode);\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state;\r\n        let img;\r\n\r\n        if (image === null)\r\n            img = <img\r\n                ref={node => { this.pencil = node }}\r\n            />;\r\n        else\r\n            img = <div className={'move'}\r\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.move') }}\r\n                onClick={this.mouseClick}>\r\n                <img src={image.src}\r\n                    width={image.width}\r\n                    height={image.height}\r\n                    className={'move-img'}\r\n\r\n                />\r\n                <div className='move-resize'\r\n                    onMouseMove={() => {\r\n                        this.Mouse.resizeElement('.move-resize', '.move')\r\n                    }}>\r\n                </div>\r\n            </div>\r\n\r\n        return (\r\n            <div>\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport filter from '../../Image/move.jpg';\r\nimport filterWhite from '../../Image/move-white.jpg';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class Filter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            image: null,\r\n            stateClick: false,\r\n            mode: 'filter',\r\n            name: 'filter',\r\n        };\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const image = new window.Image();\r\n        image.src = filter;\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n            });\r\n        };\r\n    }\r\n\r\n    off = () => {\r\n        const image = new window.Image();\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.src = filter;\r\n        this.state.mode = 'no-filter';\r\n        this.state.stateClick = false;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n                stateClick: false,\r\n                mode: 'no-filter',\r\n            });\r\n        };\r\n    }\r\n\r\n    mouseClick = () => {\r\n        const { stateClick } = this.state;\r\n        this.props.offAllButtons();\r\n        const elMove = document.querySelector('.filter-img');\r\n        if (!stateClick) {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = filterWhite;\r\n            this.state.mode = 'filter';\r\n            elMove.id = 'filter-id';\r\n            this.state.stateClick = true;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: true,\r\n                    mode: 'filter',\r\n                });\r\n            };\r\n        } else {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = filter;\r\n            this.state.mode = 'no-filter';\r\n            elMove.removeAttribute('id');\r\n            this.state.stateClick = false;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: false,\r\n                    mode: 'no-filter',\r\n                });\r\n            };\r\n        }\r\n\r\n        this.props.changeMode(this.state.mode);\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state;\r\n        let img;\r\n\r\n        if (image === null)\r\n            img = <img />;\r\n        else\r\n            img = <div className={'filter'}\r\n                    onMouseMove={() => { this.Mouse.dragLayerManagement('.filter') }}\r\n                    onClick={this.mouseClick}>\r\n                        <img src={image.src}\r\n                            width={image.width}\r\n                            height={image.height}\r\n                            className={'filter-img'}\r\n                        />\r\n                <div className='filter-resize'\r\n                    onMouseMove={() => { \r\n                        this.Mouse.resizeElement('.filter-resize', '.filter') \r\n                    }}>\r\n                </div>\r\n            </div>\r\n\r\n        return (\r\n            <div>\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Konva from 'konva';\r\nimport resize from '../../Image/pencil.jpg';\r\nimport resizeWhite from '../../Image/pencil-white.png';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class Resize extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            stateClick: false,\r\n            mode: 'resize',\r\n            name: 'resize',\r\n        };\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.preventMultipleFor2 = true;\r\n        this.preventMultipleFor3 = true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.lastIndex = 0;\r\n        this.currentIndex = 0;\r\n\r\n        const image = new window.Image();\r\n        image.src = resize;\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n            });\r\n        };\r\n    }\r\n\r\n    off = () => {\r\n        const image = new window.Image();\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.src = resize;\r\n        this.state.mode = 'no-resize';\r\n        this.state.stateClick = false;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n                stateClick: false,\r\n                mode: 'no-resize',\r\n            });\r\n        };\r\n    }\r\n\r\n    mouseClick = () => {\r\n        const { stateClick } = this.state;\r\n        this.props.offAllButtons();\r\n        const elMove = document.querySelector('.resize-img');\r\n        if (!stateClick) {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = resizeWhite;\r\n            this.state.mode = 'resize';\r\n            elMove.id = 'resize-id';\r\n            this.state.stateClick = true;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: true,\r\n                    mode: 'resize',\r\n                });\r\n            };\r\n        } else {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = resize;\r\n            this.state.mode = 'no-resize';\r\n            elMove.removeAttribute('id');\r\n            this.state.stateClick = false;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: false,\r\n                    mode: 'no-resize',\r\n                });\r\n            };\r\n        }\r\n        this.props.changeMode(this.state.mode);\r\n        this.addResize();\r\n    }\r\n    \r\n    addResize = () => {\r\n        const layerManagement = this.props.returnLayerManagement();\r\n        const stageLayer = this.props.returnStage().children;\r\n        const elMove = document.querySelector('.resize-img');\r\n\r\n        // let this.preventMultipleFor3 = true;\r\n\r\n        layerManagement.forEach((layerFromManagement) => {\r\n            stageLayer.forEach(layerFromStage => {\r\n                if (layerFromManagement.activeLayer === 'true') {\r\n                    if (layerFromManagement.key === layerFromStage._id) {\r\n                        const transformer = new Konva.Transformer({\r\n                            id: 'transformer',\r\n                            // anchorSize: 2,\r\n                            rotateEnabled: false, // For now rotate are disabled\r\n                        });\r\n                        layerFromStage.children.forEach(ch => {\r\n                            if (ch.id() === 'group') {\r\n                                if (this.state.mode === 'resize') {\r\n                                    // ch.draggable(true);\r\n                                    if (ch.children[0].className === 'Rect' \r\n                                        || ch.children[0].className === 'Star'\r\n                                        || ch.children[0].className === 'Arrow'\r\n                                        || ch.children[0].className === 'Circle' \r\n                                        || ch.children[0].className === 'Ellipse') {\r\n                                            transformer.rotateEnabled(true);\r\n                                        }\r\n\r\n                                    if (this.preventMultipleFor2) {\r\n                                        this.currentIndex = layerFromStage.index;\r\n                                        stageLayer.forEach(_l => {\r\n                                            this.lastIndex = _l.index;\r\n                                        });\r\n                                        layerFromStage.moveToTop();\r\n    \r\n    \r\n                                        let parent = ch.parent;\r\n                                        transformer.attachTo(ch);\r\n                                        parent.add(transformer);\r\n                                        let l = this.props.returnStage().find('Transformer');\r\n                                        l[0].anchorSize(10 + this.props.returnStage().scaleX());\r\n                                        \r\n                                        elMove.click();\r\n                                        elMove.click();\r\n                                        // transformer.getLayer().batchDraw();\r\n                                        this.props.returnStage().draw();\r\n                                        this.preventMultipleFor2 = false;\r\n\r\n                                    }\r\n                                }\r\n                                else if (this.state.mode === 'no-resize') {\r\n                                    if (this.preventMultipleFor3) {\r\n                                        let layer = ch.parent;\r\n                                        let children = ch.parent.children[0];\r\n                                        layer.removeChildren();\r\n                                        layer.add(children);\r\n                                        this.props.returnStage().draw();\r\n\r\n                                        // ch.draggable(false);\r\n                                        for (let i = 0; i < this.lastIndex - this.currentIndex; i++) {\r\n                                            layerFromStage.moveDown();\r\n                                        }\r\n                                        this.preventMultipleFor3 = false;\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state;\r\n        let img;\r\n\r\n        if (image === null)\r\n            img = <img\r\n                ref={node => { this.resize = node }}\r\n                className={'resize'}\r\n            />;\r\n        else\r\n            img = <div className={'resize'}\r\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.resize') }}\r\n                onClick={this.mouseClick}>\r\n                <img src={image.src}\r\n                    width={image.width}\r\n                    height={image.height}\r\n                    className={'resize-img'}\r\n                />\r\n                <div className='resize-resize'\r\n                    onMouseMove={() => {\r\n                        this.Mouse.resizeElement('.resize-resize', '.resize')\r\n                    }}>\r\n                </div>\r\n            </div>\r\n\r\n        return (\r\n            <div>\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Konva from 'konva';\r\nimport shape from '../../Image/pencil.jpg';\r\nimport shapeWhite from '../../Image/pencil-white.png';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class Shape extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            stateClick: false,\r\n            mode: 'shape',\r\n            name: 'shape',\r\n        };\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.shapeDrawingPlace = 0;\r\n        const image = new window.Image();\r\n        image.src = shape;\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n            });\r\n        };\r\n    }\r\n\r\n    off = () => {\r\n        const image = new window.Image();\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.src = shape;\r\n        this.state.mode = 'no-shape';\r\n        this.state.stateClick = false;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n                stateClick: false,\r\n                mode: 'no-shape',\r\n            });\r\n        };\r\n    }\r\n\r\n    createRect = (canvas, _stageLayers, drawingPlace, color) => {\r\n        this.shapeDrawingPlace = drawingPlace;\r\n        const shape = new Konva.Rect({\r\n            id: 'rect',\r\n            fill: color,\r\n            name: 'shape',\r\n        });\r\n\r\n        const group = new Konva.Group({\r\n            id: 'group',\r\n        });\r\n\r\n        group.add(shape);\r\n        _stageLayers.add(group);\r\n    }\r\n\r\n    createStar = (canvas, _stageLayers, drawingPlace, color) => {\r\n        const shape = new Konva.Star({\r\n            x: -9999,\r\n            y: -9999,\r\n            numPoints: 5,\r\n            innerRadius: canvas.width / 4,\r\n            outerRadius: canvas.width / 4,\r\n            id: 'star',\r\n            fill: color,\r\n            name: 'shape',\r\n        });\r\n        const group = new Konva.Group({\r\n            id: 'group',\r\n        });\r\n\r\n        group.add(shape);\r\n        _stageLayers.add(group);\r\n    }\r\n\r\n    createArrow = (canvas, _stageLayers, drawingPlace, color) => {\r\n        const shape = new Konva.Arrow({\r\n            pointerLength: 20,\r\n            pointerWidth: 20,\r\n            id: 'arrow',\r\n            fill: color,\r\n            stroke: color,\r\n            strokeWidth: 4,\r\n            name: 'shape',\r\n        });\r\n\r\n        const group = new Konva.Group({\r\n            id: 'group',\r\n        });\r\n\r\n        group.add(shape);\r\n        _stageLayers.add(group);\r\n    }\r\n\r\n    createCircle = (canvas, _stageLayers, drawingPlace, color) => {\r\n        const shape = new Konva.Circle({\r\n            x: -9999,\r\n            y: -9999,\r\n            radius: 70,\r\n            id: 'circle',\r\n            fill: color,\r\n            stroke: color,\r\n            strokeWidth: 4,\r\n            name: 'shape',\r\n        });\r\n\r\n        const group = new Konva.Group({\r\n            id: 'group',\r\n        });\r\n\r\n        group.add(shape);\r\n        _stageLayers.add(group);\r\n    }\r\n\r\n    createEllipse = (canvas, _stageLayers, drawingPlace, color) => {\r\n        const shape = new Konva.Ellipse({\r\n            x: -9999,\r\n            y: -9999,\r\n            radius: {\r\n                x: 100,\r\n                y: 50,\r\n            },\r\n            id: 'ellipse',\r\n            fill: color,\r\n            stroke: color,\r\n            strokeWidth: 4,\r\n            name: 'shape',\r\n        });\r\n\r\n        const group = new Konva.Group({\r\n            id: 'group',\r\n        });\r\n\r\n        group.add(shape);\r\n        _stageLayers.add(group);\r\n    }\r\n\r\n    retutnShapeDrawingPlace = () => {\r\n        return this.shapeDrawingPlace;\r\n    }\r\n\r\n    mouseClick = () => {\r\n        const { stateClick } = this.state;\r\n        this.props.offAllButtons();\r\n        const elMove = document.querySelector('.shape-img');\r\n        if (!stateClick) {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = shapeWhite;\r\n            this.state.mode = 'shape';\r\n            elMove.id = 'shape-id';\r\n            this.state.stateClick = true;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: true,\r\n                    mode: 'shape',\r\n                });\r\n            };\r\n        } else {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = shape;\r\n            this.state.mode = 'no-shape';\r\n            elMove.removeAttribute('id');\r\n            this.state.stateClick = false;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: false,\r\n                    mode: 'no-shape',\r\n                });\r\n            };\r\n        }\r\n\r\n        this.props.changeMode(this.state.mode);\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state;\r\n        let img;\r\n\r\n        if (image === null)\r\n            img = <img\r\n                ref={node => { this.shape = node }}\r\n                className={'shape'}\r\n            />;\r\n        else\r\n            img = <div className={'shape'}\r\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.shape') }}\r\n                onClick={this.mouseClick}>\r\n                <img src={image.src}\r\n                    width={image.width}\r\n                    height={image.height}\r\n                    className={'shape-img'}\r\n                />\r\n                <div className='shape-resize'\r\n                    onMouseMove={() => {\r\n                        this.Mouse.resizeElement('.shape-resize', '.shape')\r\n                    }}>\r\n                </div>\r\n            </div>\r\n\r\n        return (\r\n            <div>\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport text from '../../Image/pencil.jpg';\r\nimport Konva from 'konva';\r\nimport textWhite from '../../Image/pencil-white.png';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class Text extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            stateClick: false,\r\n            mode: 'text',\r\n            name: 'text',\r\n        };\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const image = new window.Image();\r\n        image.src = text;\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n            });\r\n        };\r\n    }\r\n\r\n    off = () => {\r\n        const image = new window.Image();\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.src = text;\r\n        this.state.mode = 'no-text';\r\n        this.state.stateClick = false;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n                stateClick: false,\r\n                mode: 'no-text',\r\n            });\r\n        };\r\n    }\r\n\r\n    createTextArea = (canvas, _stageLayers, drawingPlace, stage) => {\r\n        const textNode = new Konva.Text({\r\n            id: 'text',\r\n            fontSize: 20,\r\n        });\r\n\r\n        const group = new Konva.Group({\r\n            id: 'group',\r\n        });\r\n\r\n        group.add(textNode);\r\n        _stageLayers.add(group);\r\n        // console.log(_stageLayers);\r\n\r\n        textNode.on('dblclick', () => {\r\n            // create textarea over canvas with absolute position\r\n\r\n            // first we need to find its positon\r\n            var textPosition = textNode.getAbsolutePosition();\r\n            var stageBox = stage.getContainer().getBoundingClientRect();\r\n\r\n            var areaPosition = {\r\n                x: textPosition.x + stageBox.left,\r\n                y: textPosition.y + stageBox.top\r\n            };\r\n\r\n\r\n            // create textarea and style it\r\n            var textarea = document.createElement('textarea');\r\n            document.body.appendChild(textarea);\r\n\r\n            textarea.value = textNode.text();\r\n            textarea.style.position = 'absolute';\r\n            textarea.style.top = areaPosition.y + 'px';\r\n            textarea.style.left = areaPosition.x + 'px';\r\n            textarea.style.width = textNode.width();\r\n            textarea.focus();\r\n\r\n            textarea.addEventListener('keydown', function (e) {\r\n                // hide on enter\r\n                console.log(e.keyCode);\r\n                if (e.keyCode === 27) {\r\n                    textNode.text(textarea.value);\r\n                    stage.draw();\r\n                    document.body.removeChild(textarea);\r\n                }\r\n            });\r\n            textarea.addEventListener('mouseleave', function(e) {\r\n                if (e.buttons === 0) {\r\n                    textNode.text(textarea.value);\r\n                    document.body.removeChild(textarea);\r\n                    _stageLayers.draw();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    mouseClick = () => {\r\n        const { stateClick } = this.state;\r\n        this.props.offAllButtons();\r\n        const elMove = document.querySelector('.text-img');\r\n        if (!stateClick) {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = textWhite;\r\n            this.state.mode = 'text';\r\n            elMove.id = 'text-id';\r\n            this.state.stateClick = true;\r\n            this.props.changeText('on');\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: true,\r\n                    mode: 'text',\r\n                });\r\n            };\r\n        } else {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = text;\r\n            this.state.mode = 'no-text';\r\n            elMove.removeAttribute('id');\r\n            this.state.stateClick = false;\r\n            this.props.changeText('off');\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: false,\r\n                    mode: 'no-text',\r\n                });\r\n            };\r\n        }\r\n\r\n        this.props.changeMode(this.state.mode);\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state;\r\n        let img;\r\n\r\n        if (image === null)\r\n            img = <img\r\n                ref={node => { this.text = node }}\r\n                className={'text'}\r\n            />;\r\n        else\r\n            img = <div className={'text'}\r\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.text') }}\r\n                onClick={this.mouseClick}>\r\n                <img src={image.src}\r\n                    width={image.width}\r\n                    height={image.height}\r\n                    className={'text-img'}\r\n                />\r\n                <div className='text-resize'\r\n                    onMouseMove={() => {\r\n                        this.Mouse.resizeElement('.text-resize', '.text')\r\n                    }}>\r\n                </div>\r\n            </div>\r\n\r\n        return (\r\n            <div>\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport bucket from '../../Image/ruber.png';\r\nimport bucketWhite from '../../Image/ruber-white.png';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class Bucket extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            stateClick: false,\r\n            mode: 'bucket',\r\n            name: 'bucket',\r\n        };\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const image = new window.Image();\r\n        image.src = bucket;\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n            });\r\n        };\r\n    }\r\n\r\n    off = () => {\r\n        const image = new window.Image();\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.src = bucket;\r\n        this.state.mode = 'no-bucket';\r\n        this.state.stateClick = false;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n                stateClick: false,\r\n                mode: 'no-bucket',\r\n            });\r\n        };\r\n    }\r\n\r\n    mouseClick = () => {\r\n        const { stateClick } = this.state;\r\n        this.props.offAllButtons();\r\n        const elMove = document.querySelector('.bucket-img');\r\n        if (!stateClick) {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = bucketWhite;\r\n            this.state.mode = 'bucket';\r\n            elMove.id = 'bucket-id';\r\n            this.state.stateClick = true;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: true,\r\n                    mode: 'bucket',\r\n                });\r\n            };\r\n        } else {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = bucket;\r\n            this.state.mode = 'no-bucket';\r\n            elMove.removeAttribute('id');\r\n            this.state.stateClick = false;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: false,\r\n                    mode: 'no-bucket',\r\n                });\r\n            };\r\n        }\r\n\r\n        this.props.changeMode(this.state.mode);\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state;\r\n        let img;\r\n\r\n        if (image === null)\r\n            img = <img />;\r\n        else {\r\n            img = <div className={'bucket'}\r\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.bucket') }}\r\n                onClick={this.mouseClick}>\r\n                <img src={image.src}\r\n                    width={image.width}\r\n                    height={image.height}\r\n                    className={'bucket-img'}\r\n                />\r\n                <div className='bucket-resize'\r\n                    onMouseMove={() => {\r\n                        this.Mouse.resizeElement('.bucket-resize', '.bucket')\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n} ","import React from 'react';\r\nimport Konva from 'konva';\r\nimport bezier from '../../Image/move.jpg';\r\nimport bezierWhite from '../../Image/move-white.jpg';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class BezierCurve extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            stateClick: false,\r\n            mode: 'bezier',\r\n            name: 'bezier',\r\n        };\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const image = new window.Image();\r\n        image.src = bezier;\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n            });\r\n        };\r\n    }\r\n\r\n    off = () => {\r\n        const image = new window.Image();\r\n        image.width = 32;\r\n        image.height = 32;\r\n        image.src = bezier;\r\n        this.state.mode = 'no-bezier';\r\n        this.state.stateClick = false;\r\n        image.onload = () => {\r\n            this.setState({\r\n                image: image,\r\n                stateClick: false,\r\n                mode: 'no-bezier',\r\n            });\r\n        };\r\n    }\r\n\r\n    modifyBezier = () => {\r\n        \r\n    }\r\n\r\n    createBezier = (canvas, _stageLayers, drawingPlace, stage, bezierSize, color) => {\r\n        let ctx = canvas.getContext('2d');\r\n\r\n        ctx.lineWidth = bezierSize;\r\n        console.log(bezierSize);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.strokeStyle = color;\r\n\r\n        let img = new Konva.Image({\r\n            image: canvas,\r\n            id: 'bezierImage',\r\n            width: canvas.width,\r\n            height: canvas.height,\r\n            x: 0,\r\n            y: 0,\r\n            visible: true,\r\n        });\r\n\r\n        let group = new Konva.Group({\r\n            // width: canvas.width,\r\n            // height: canvas.height,\r\n            id: 'bezierGroup',\r\n        });\r\n\r\n        group.add(img);\r\n        _stageLayers.add(group);\r\n        stage.draw();\r\n    }\r\n\r\n    createAnchor = (x, y, stage) => {\r\n        let anchor = new Konva.Circle({\r\n            x: x,\r\n            y: y,\r\n            radius: 20,\r\n            stroke: '#666',\r\n            fill: '#ddd',\r\n            strokeWidth: 2,\r\n            draggable: true,\r\n            id: 'anchor'\r\n        });\r\n        let bezierGroup = stage.find('#bezierGroup');\r\n        console.log(bezierGroup);\r\n        if (bezierGroup.length === 0) {\r\n            // return;\r\n        }\r\n        bezierGroup[0].add(anchor);\r\n        stage.draw();\r\n\r\n        // anchor.on('dragend', () => {\r\n\r\n        // })\r\n    }\r\n\r\n    mouseClick = () => {\r\n        const { stateClick } = this.state;\r\n        this.props.offAllButtons();\r\n        const elMove = document.querySelector('.bezier-img');\r\n\r\n        if (!stateClick) {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = bezierWhite;\r\n            this.state.mode = 'bezier';\r\n            elMove.id = 'bezier-id';\r\n            this.state.stateClick = true;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: true,\r\n                    mode: 'bezier',\r\n                });\r\n            };\r\n        } else {\r\n            const image = new window.Image();\r\n            image.width = 32;\r\n            image.height = 32;\r\n            image.src = bezier;\r\n            this.state.mode = 'no-bezier';\r\n            elMove.removeAttribute('id');\r\n            this.state.stateClick = false;\r\n            image.onload = () => {\r\n                this.setState({\r\n                    image: image,\r\n                    stateClick: false,\r\n                    mode: 'no-bezier',\r\n                });\r\n            };\r\n        }\r\n\r\n        this.props.changeMode(this.state.mode);\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state;\r\n        let img;\r\n\r\n        if (image === null)\r\n            img = <img\r\n                ref={node => { this.pencil = node }}\r\n            />;\r\n        else\r\n            img = <div className={'bezier'}\r\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.bezier') }}\r\n                onClick={this.mouseClick}>\r\n                <img src={image.src}\r\n                    width={image.width}\r\n                    height={image.height}\r\n                    className={'bezier-img'}\r\n\r\n                />\r\n                <div className='bezier-resize'\r\n                    onMouseMove={() => {\r\n                        this.Mouse.resizeElement('.bezier-resize', '.bezier')\r\n                    }}>\r\n                </div>\r\n            </div>\r\n\r\n        return (\r\n            <div>\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport colorWheel from '../../Image/color-wheel.png';\r\nimport Mouse from '../../Functionality/Mouse';\r\n\r\nexport default class ColorPallete extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            context: null,\r\n            pixel: null,\r\n        }\r\n        this.Mouse = new Mouse();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.canvas = document.querySelector('.colorPallete');\r\n        const context = this.canvas.getContext('2d');\r\n        const image = new window.Image();\r\n        this.canvas.width = 150;\r\n        this.canvas.height = 150;\r\n        image.src = colorWheel;\r\n        context.fillStyle = 'black';\r\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        image.onload = () => {\r\n            context.drawImage(image, 0, 0, this.canvas.width, this.canvas.height);\r\n            this.setState({\r\n                context: context,\r\n            });\r\n        };\r\n    }\r\n    \r\n    mouseMove = (e) => {\r\n        const { context } = this.state;\r\n        let xx = e.nativeEvent.clientX;\r\n        let yy = e.nativeEvent.clientY;\r\n        let image = {\r\n            x : parseInt(window.getComputedStyle(this.canvas).left, 10),\r\n            y : parseInt(window.getComputedStyle(this.canvas).top, 10),\r\n        }\r\n        \r\n        let pos = {\r\n            x: xx - image.x,\r\n            y: yy - image.y,\r\n        };\r\n        \r\n        let imageData = context.getImageData(pos.x, pos.y, 1, 1);\r\n        let pixel = imageData.data; \r\n        this.setState({\r\n            pixel: pixel,\r\n        });\r\n        this.Mouse.dragLayerManagement('.colorPallete');\r\n    }\r\n    \r\n    mosueClick = () => {\r\n        const {pixel} = this.state;\r\n        let color = {\r\n            R: pixel[0],\r\n            G: pixel[1],\r\n            B: pixel[2],\r\n            A: pixel[3],\r\n        }\r\n\r\n        let colorString = `rgba(${color.R},${color.G},${color.B},${color.A})`;\r\n        //Set value of rgba in settings options\r\n        const r = document.getElementById('color-R');\r\n        const g = document.getElementById('color-G');\r\n        const b = document.getElementById('color-B');\r\n        if (r !== null && g !== null && b !== null) {\r\n            r.value = color.R;\r\n            g.value = color.G;\r\n            b.value = color.B;\r\n        }\r\n\r\n        this.props.changeColor(colorString);\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas className={'colorPallete'} \r\n                    onMouseDown={this.mosueClick} \r\n                    onMouseMove={(e) => { this.mouseMove(e) }}\r\n                >\r\n                </canvas>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Eraser from './ToolBarComponent/Eraser';\r\nimport Pencil from './ToolBarComponent/Pencil';\r\nimport Move from './ToolBarComponent/Move';\r\nimport Filter from './ToolBarComponent/Filter';\r\nimport Resize from './ToolBarComponent/Resize';\r\nimport Shape from './ToolBarComponent/Shape';\r\nimport Text from './ToolBarComponent/Text';\r\nimport Bucket from './ToolBarComponent/Bucket';\r\nimport BezierCurve from './ToolBarComponent/BezierCurve';\r\nimport ColorPallete from './ToolBarComponent/ColorPallete';\r\n\r\n\r\nexport default class ToolBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mode: 'default',\r\n            color: '#df4b26',\r\n            draggable: true,\r\n            buttonTab: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.lastIndex = 0;\r\n        this.currentIndex = 0;\r\n\r\n        // this.lastIndex2 = 0;\r\n        // this.currentIndex2 = 0;\r\n\r\n        this.state.buttonTab.push(this.eraser);\r\n        this.state.buttonTab.push(this.move);\r\n        this.state.buttonTab.push(this.pencil);\r\n        this.state.buttonTab.push(this.filter);\r\n        this.state.buttonTab.push(this.resize);\r\n        this.state.buttonTab.push(this.shape);\r\n        this.state.buttonTab.push(this.text);\r\n        this.state.buttonTab.push(this.bucket);\r\n        this.state.buttonTab.push(this.bezier);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.preventMultipleFor2 = true;\r\n        this.preventMultipleFor3 = true;\r\n        this.preventMultipleFor4 = true;\r\n        this.preventMultipleFor5 = true;\r\n    }\r\n\r\n    changeMode = (stateMode, bezierMode) => {\r\n        const stageLayer = this.props.returnStage().children;\r\n        const layers = this.props.returnLayerManagement();\r\n        let stateBezier = this.props.returnStateBezier();\r\n\r\n        this.state.buttonTab.forEach(button => {\r\n            if (button.state.mode === stateMode)\r\n                return;\r\n        });\r\n\r\n        layers.forEach((layerFromManagement) => {\r\n            stageLayer.forEach(layerFromStage => {\r\n                if (layerFromManagement.activeLayer === 'true') {\r\n                    if (layerFromManagement.key === layerFromStage._id) {\r\n                        layerFromStage.children.forEach(ch => {\r\n                            console.log(ch);\r\n                            if (ch.id() === 'group' || ch.id() === 'bezierGroup') {\r\n                                if (stateMode === 'move') {\r\n                                    if (this.preventMultipleFor2) {\r\n                                        ch.draggable(true);\r\n                                        this.currentIndex = layerFromStage.index;\r\n                                        stageLayer.forEach(_l => {\r\n                                            this.lastIndex = _l.index;\r\n                                        });\r\n                                        layerFromStage.moveToTop();\r\n                                        this.preventMultipleFor2 = false;\r\n                                    }\r\n                                }\r\n                                if (stateMode === 'bezier') {\r\n                                    if (this.preventMultipleFor4) {\r\n                                        if (ch.id() === 'bezierGroup') {\r\n                                            this.currentIndex = layerFromStage.index;\r\n                                            stageLayer.forEach(_l => {\r\n                                                this.lastIndex = _l.index;\r\n                                            });\r\n                                            layerFromStage.moveToTop();\r\n                                            this.preventMultipleFor4 = false;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (stateMode === 'no-move') {\r\n                                    ch.draggable(false);\r\n                                    if (this.preventMultipleFor3) {\r\n                                        for (let i = 0; i < this.lastIndex - this.currentIndex; i++) {\r\n                                            layerFromStage.moveDown();\r\n                                        }\r\n                                        this.preventMultipleFor3 = false;\r\n                                        this.lastIndex = 0;\r\n                                        this.currentIndex = 0;\r\n                                    }\r\n                                }\r\n                                if (stateMode === 'no-bezier') {\r\n                                    if (ch.id() === 'bezierGroup') {\r\n                                        if (this.preventMultipleFor5) {\r\n                                            for (let i = 0; i < this.lastIndex - this.currentIndex; i++) {\r\n                                                layerFromStage.moveDown();\r\n                                            }\r\n                                            this.preventMultipleFor5 = false;\r\n                                            this.lastIndex = 0;\r\n                                            this.currentIndex = 0;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            mode: stateMode,\r\n        });\r\n\r\n        this.props.mode(stateMode, this.state.buttonTab);\r\n    }\r\n\r\n    changeColor = (dataFromColorPallete) => {\r\n        this.setState({color: dataFromColorPallete});\r\n        this.props.color(dataFromColorPallete);\r\n    }\r\n\r\n    changeText = (dataFromText) => {\r\n        this.props.text(dataFromText);\r\n    }\r\n\r\n    returnColor = () => {\r\n        return this.state.color;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Eraser changeMode={this.changeMode} ref={node => {this.eraser = node}}\r\n                    offAllButtons={() => {this.props.offAllButtons()}}/>\r\n                <Pencil changeMode={this.changeMode} ref={node => { this.pencil = node }}\r\n                    offAllButtons={() => { this.props.offAllButtons() }}/>\r\n                <Move changeMode={this.changeMode} ref={node => { this.move = node }}\r\n                    offAllButtons={() => { this.props.offAllButtons() }}/>\r\n                <Filter changeMode={this.changeMode} ref={node => { this.filter = node }}\r\n                    offAllButtons={() => { this.props.offAllButtons() }}/>\r\n                <Resize changeMode={this.changeMode} ref={node => { this.resize = node }}\r\n                    returnStage={this.props.returnStage}\r\n                    returnLayerManagement={this.props.returnLayerManagement}\r\n                    offAllButtons={() => { this.props.offAllButtons() }}/>\r\n                <Shape changeMode={this.changeMode} ref={node => {this.shape = node}}\r\n                    offAllButtons={() => { this.props.offAllButtons() }}/>\r\n                <Text changeMode={this.changeMode} ref={node => {this.text = node}}\r\n                    offAllButtons={() => { this.props.offAllButtons() }}\r\n                    changeText={this.changeText}/>\r\n                <Bucket changeMode={this.changeMode} ref={node => {this.bucket = node}}\r\n                    offAllButtons={() => { this.props.offAllButtons() }}\r\n                    changeText={this.changeText}/>\r\n                <BezierCurve changeMode={this.changeMode} ref={node => {this.bezier = node}}\r\n                    offAllButtons={() => { this.props.offAllButtons() }}\r\n                    changeText={this.changeText}/>\r\n                <ColorPallete changeColor={this.changeColor}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Mouse from '../Functionality/Mouse';\r\n\r\nexport default class Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.modes = {\r\n            PENCIL: 'pencil',\r\n            ERASER: 'eraser',\r\n            MOVE: 'move',\r\n            FILTER: 'filter',\r\n            SHAPE: 'shape',\r\n            BEZIER: 'bezier',\r\n            BUCKET: 'bucket',\r\n        }\r\n\r\n        this.state = {\r\n            valueBlur: '0',\r\n            valueBrightness: '100',\r\n            valueContrast: '100',\r\n            valueGrayscale: '0',\r\n            valueHueRotate: '0',\r\n            valueInvert: '0',\r\n            valueOpacity: '100',\r\n            valueSaturate: '100',\r\n            valueSepia: '0',\r\n            valueSizePencil: 5,\r\n            valueSizeEraser: 5,\r\n            valueSizeBezier: 5,\r\n            whichShape: '',\r\n            bezier: '',\r\n        }\r\n\r\n        this.Mouse = new Mouse();\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.mode === this.modes.PENCIL || this.props.mode === this.modes.SHAPE || this.props.mode === this.modes.BEZIER || this.props.mode === this.modes.BUCKET) {\r\n            this.colorBox = document.querySelector('#color-box');\r\n            this.colorBox.style.backgroundColor = this.props.color;\r\n        }\r\n\r\n        const el = document.querySelector('#color-box');\r\n        const r = document.getElementById('color-R');\r\n        const g = document.getElementById('color-G');\r\n        const b = document.getElementById('color-B');\r\n\r\n        if (el !== null && r !== null && g !== null && b !== null) {\r\n            let regExp = new RegExp('\\\\D');\r\n            let splitEl = el.style.backgroundColor.split(regExp);\r\n            r.value = splitEl[4];\r\n            g.value = splitEl[6];\r\n            b.value = splitEl[8];\r\n        }\r\n    }\r\n\r\n    setSizePencil = (e) => {\r\n        this.props.changeSizePencil(e.target.value);\r\n    }\r\n\r\n    setSizeBezier = (e) => {\r\n        this.props.changeSizeBezier(e.target.value);\r\n    }\r\n\r\n    setSizeEraser = (e) => {\r\n        this.props.changeSizeEraser(e.target.value);\r\n    }\r\n\r\n    setColor = () => {\r\n        const r = document.getElementById('color-R');\r\n        const g = document.getElementById('color-G');\r\n        const b = document.getElementById('color-B');\r\n        let color = 'rgba(' + r.value + ','\r\n                            + g.value + ','\r\n                            + b.value + ','\r\n                            + '255)';\r\n\r\n        this.props.changeColor(color);\r\n    }\r\n\r\n    setBrush = (e) => {\r\n        this.props.changeBrush(e.target.value);\r\n    }\r\n\r\n    setFilter = () => {\r\n        const { valueBlur, valueBrightness, valueContrast,\r\n            valueGrayscale, valueHueRotate, valueInvert,\r\n            valueOpacity, valueSaturate, valueSepia, } = this.state;\r\n            \r\n        let filter = 'blur(' + valueBlur + \r\n                    'px) brightness(' + valueBrightness + \r\n                    '%) contrast(' + valueContrast + \r\n                    '%) grayscale(' + valueGrayscale + \r\n                    '%) hue-rotate(' + valueHueRotate + \r\n                    'deg) invert(' + valueInvert + \r\n                    '%) opacity(' + valueOpacity + \r\n                    '%) saturate(' + valueSaturate + \r\n                    '%) sepia(' + valueSepia + '%)';\r\n        const elKonva = document.querySelector('.konvajs-content');\r\n        elKonva.style.filter = filter;\r\n\r\n        this.props.changeFilter(filter);\r\n    }\r\n\r\n    setShape = (shape) => {\r\n        this.state.whichShape = shape;\r\n        this.props.changeShape(shape);\r\n        this.setState({\r\n            whichShape: shape,\r\n        });\r\n    }\r\n\r\n    setBezier = (bezier, isClicked) => {\r\n        this.state.whichBezier = bezier;\r\n        this.props.changeBezier(bezier, isClicked);\r\n        this.setState({\r\n            whichBezier: bezier,\r\n        });\r\n    }\r\n\r\n    resetFilter = () => {\r\n        this.state.valueBlur = '0';\r\n        this.state.valueBrightness = '100';\r\n        this.state.valueContrast = '100';\r\n        this.state.valueGrayscale = '0';\r\n        this.state.valueHueRotate ='0';\r\n        this.state.valueInvert ='0';\r\n        this.state.valueOpacity ='100';\r\n        this.state.valueSaturate ='100';\r\n        this.state.valueSepia ='0';\r\n\r\n        this.setFilter();\r\n\r\n        this.setState({\r\n            valueBlur: '0',\r\n            valueBrightness: '100',\r\n            valueContrast: '100',\r\n            valueGrayscale: '0',\r\n            valueHueRotate: '0',\r\n            valueInvert: '0',\r\n            valueOpacity: '100',\r\n            valueSaturate: '100',\r\n            valueSepia: '0',\r\n        })\r\n    }\r\n\r\n    changeOptionsMode = () => {\r\n        const el = document.querySelector('.settings');\r\n        const { valueBlur, valueBrightness, valueContrast,\r\n            valueGrayscale, valueHueRotate, valueInvert, \r\n            valueOpacity, valueSaturate, valueSepia,\r\n            valueSizePencil, valueSizeEraser, valueSizeBezier} = this.state;\r\n\r\n        switch (this.props.mode) {\r\n            case this.modes.PENCIL:\r\n                el.style.display = 'block';\r\n                return (\r\n                    <ul>\r\n                        <li className={'pencil-size-options'}>\r\n                            <label htmlFor='size'>pencil size</label>\r\n                            <input id='size' type='text' value={valueSizePencil}\r\n                                onMouseLeave={(e) => {e.target.blur()}}\r\n                                onClick={(e) => { e.target.select() }}\r\n                                onChange={(e) => { \r\n                                    this.state.valueSizePencil = e.target.value;\r\n                                    this.setSizePencil(e)\r\n                                    if (!e.target.value || e.target.value === '0') {\r\n                                        this.state.valueSizePencil = 5;\r\n                                        alert('Pencil size can not be a 0 or null');\r\n                                    }\r\n                                 }}\r\n                            >\r\n                            </input>\r\n                        </li>\r\n                        <li>\r\n                            <select className={'brush-list'}\r\n                                onChange={(e) => { this.setBrush(e) }}\r\n                                >\r\n                                <option value=\"default\">Default</option>\r\n                                <option value=\"shadow\">Shadow</option>\r\n                                <option value=\"thick-brush\">Thick brush</option>\r\n                                <option value=\"spray\">Spray</option>\r\n                            </select>\r\n                        </li>\r\n                        <li className={'rgb-options'}>\r\n                            <label htmlFor='color-R'>R</label>\r\n                            <input id='color-R' type='text'\r\n                                onMouseLeave={(e) => { e.target.blur() }}\r\n                                onClick={(e) => {e.target.select()}}\r\n                                onChange={(e) => { \r\n                                    this.setColor() \r\n                                }}\r\n                            >\r\n                            </input>\r\n                            <label htmlFor='color-G'>G</label>\r\n                            <input id='color-G' type='text'\r\n                                onMouseLeave={(e) => { e.target.blur() }}\r\n                                onClick={(e) => { e.target.select() }}\r\n                                onChange={(e) => { \r\n                                    this.setColor()\r\n                                }}\r\n                            >\r\n                            </input>\r\n                            <label htmlFor='color-B'>B</label>\r\n                            <input id='color-B' type='text'\r\n                                onMouseLeave={(e) => { e.target.blur() }}\r\n                                onClick={(e) => { e.target.select() }}\r\n                                onChange={(e) => { \r\n                                    this.setColor()\r\n                                }}\r\n                            >\r\n                            </input>\r\n                        </li>\r\n                        <div className={'color-box-wrapper'}>\r\n                            <div id='color-box'></div>\r\n                        </div>\r\n                    </ul>\r\n                )\r\n                break;\r\n            case this.modes.ERASER:\r\n                el.style.display = 'block';\r\n                return (\r\n                    <ul>\r\n                        <li>\r\n                            <label htmlFor='size'>eraser size</label>\r\n                            <input id='size' type='text' value={valueSizeEraser}\r\n                                onMouseLeave={(e) => { e.target.blur() }}\r\n                                onClick={(e) => { e.target.select() }}\r\n                                onChange={(e) => { \r\n                                    this.state.valueSizeEraser = e.target.value;\r\n                                    this.setSizeEraser(e);\r\n                                    if (!e.target.value || e.target.value === '0') {\r\n                                        this.state.valueSizeEraser = 5;\r\n                                        alert('Eraser size can not be a 0 or null');\r\n                                    }\r\n                                }}>\r\n                            </input>\r\n                        </li>\r\n                    </ul>\r\n                )\r\n                break;\r\n            case this.modes.FILTER:\r\n                el.style.display = 'block';\r\n                return (\r\n                    <ul>\r\n                        <li>\r\n                            <label htmlFor='blur'>blur {valueBlur}px</label>\r\n                            <input id='blur' type='range'\r\n                                min='0' max='20' value={valueBlur}\r\n                                onChange={(e) => { \r\n                                    this.state.valueBlur = e.target.value;\r\n                                    this.setFilter(e, e.target.id, 'px');\r\n                                    this.setState({valueBlur: e.target.value});\r\n                                }}>\r\n                            </input>\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor='brightness'>brightness {valueBrightness}%</label>\r\n                            <input id='brightness' type='range'\r\n                                min='0' max='500' value={valueBrightness}\r\n                                onChange={(e) => {\r\n                                    this.state.valueBrightness = e.target.value;\r\n                                    this.setFilter(e, e.target.id, '%');\r\n                                    this.setState({ valueBrightness: e.target.value });\r\n                                }}>\r\n                            </input>\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor='contrast'>contrast {valueContrast}%</label>\r\n                            <input id='contrast' type='range'\r\n                                onChange={(e) => {\r\n                                    this.state.valueContrast = e.target.value;\r\n\r\n                                    this.setFilter(e, e.target.id, '%');\r\n                                    this.setState({ valueContrast: e.target.value });\r\n                                }}>\r\n                            </input>\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor='grayscale'>grayscale {valueGrayscale}%</label>\r\n                            <input id='grayscale' type='range'\r\n                                min='0' max='100' value={valueGrayscale}\r\n                                onChange={(e) => {\r\n                                    this.state.valueGrayscale = e.target.value;\r\n\r\n                                    this.setFilter(e, e.target.id, '%');\r\n                                    this.setState({ valueGrayscale: e.target.value });\r\n                                }}>\r\n                            </input>\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor='hue-rotate'>hue rotate {valueHueRotate}deg</label>\r\n                            <input id='hue-rotate' type='range'\r\n                                min='0' max='360' value={valueHueRotate}\r\n                                onChange={(e) => {\r\n                                    this.state.valueHueRotate = e.target.value;\r\n\r\n                                    this.setFilter(e, e.target.id, '%');\r\n                                    this.setState({ valueHueRotate: e.target.value });\r\n                                }}>\r\n                            </input>\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor='invert'>invert {valueInvert}%</label>\r\n                            <input id='invert' type='range'\r\n                                min='0' max='100' value={valueInvert}\r\n                                onChange={(e) => {\r\n                                    this.state.valueInvert = e.target.value;\r\n\r\n                                    this.setFilter(e, e.target.id, '%');\r\n                                    this.setState({ valueInvert: e.target.value });\r\n                                }}>\r\n                            </input>\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor='opacity'>opacity {valueOpacity}%</label>\r\n                            <input id='opacity' type='range'\r\n                                min='0' max='100' value={valueOpacity}\r\n                                onChange={(e) => {\r\n                                    this.state.valueOpacity = e.target.value;\r\n\r\n                                    this.setFilter(e, e.target.id, '%');\r\n                                    this.setState({ valueOpacity: e.target.value });\r\n                                }}>\r\n                            </input>\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor='saturate'>saturate {valueSaturate}%</label>\r\n                            <input id='saturate' type='range'\r\n                                min='0' max='500' value={valueSaturate}\r\n                                onChange={(e) => {\r\n                                    this.state.valueSaturate = e.target.value;\r\n\r\n                                    this.setFilter(e, e.target.id, '%');\r\n                                    this.setState({ valueSaturate: e.target.value });\r\n                                }}>\r\n                            </input>\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor='sepia'>sepia {valueSepia}%</label>\r\n                            <input id='sepia' type='range'\r\n                                min='0' max='100' value={valueSepia}\r\n                                onChange={(e) => {\r\n                                    this.state.valueSepia = e.target.value;\r\n\r\n                                    this.setFilter(e, e.target.id, '%');\r\n                                    this.setState({ valueSepia: e.target.value });\r\n                                }}>\r\n                            </input>\r\n                        </li>\r\n                        <li>\r\n                            <button id='reset'\r\n                                onMouseDown={() => { this.resetFilter() }}>\r\n                                reset\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                )\r\n                break;\r\n\r\n            case this.modes.SHAPE:\r\n                el.style.display = 'block';\r\n                return (\r\n                    <ul>\r\n                        <li>\r\n                            <button\r\n                                onMouseDown={() => {\r\n                                    this.setShape('rect');\r\n                                }}>\r\n                                    rect\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button\r\n                                onMouseDown={() => {\r\n                                    this.setShape('star');\r\n                                }}>\r\n                                    star\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button\r\n                                onMouseDown={() => {\r\n                                    this.setShape('arrow');\r\n                                }}>\r\n                                    arrow\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button\r\n                                onMouseDown={() => {\r\n                                    this.setShape('circle');\r\n                                }}>\r\n                                    circle\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button\r\n                                onMouseDown={() => {\r\n                                    this.setShape('ellipse');\r\n                                }}>\r\n                                    ellipse\r\n                            </button>\r\n                        </li>\r\n                        <div className={'color-box-wrapper'}>\r\n                            <div id='color-box'></div>\r\n                        </div>\r\n                    </ul>\r\n                )\r\n                break;\r\n\r\n            case this.modes.BEZIER:\r\n                el.style.display = 'block';\r\n                return (\r\n                    <ul>\r\n                        <li>\r\n                            <button\r\n                                onMouseDown={() => {\r\n                                    // this.setShape('rect');\r\n                                    this.setBezier('create-bezier', true);\r\n                                }}>\r\n                                    Create Bezier\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button\r\n                                onMouseDown={() => {\r\n                                    this.setBezier('modify-bezier');\r\n                                }}>\r\n                                    Modify Bezier\r\n                            </button>\r\n                        </li>\r\n                        <li className={'pencil-size-options'}>\r\n                            <label htmlFor='size'>pencil size</label>\r\n                            <input id='size' type='text' value={valueSizeBezier}\r\n                                onMouseLeave={(e) => {e.target.blur()}}\r\n                                onClick={(e) => { e.target.select() }}\r\n                                onChange={(e) => { \r\n                                    this.state.valueSizeBezier = e.target.value;\r\n                                    this.setSizeBezier(e)\r\n                                    if (!e.target.value || e.target.value === '0') {\r\n                                        this.state.valueSizeBezier = 5;\r\n                                        alert('Pencil size can not be a 0 or null');\r\n                                    }\r\n                                 }}\r\n                            >\r\n                            </input>\r\n                        </li>\r\n                        <li className={'rgb-options'}>\r\n                            <label htmlFor='color-R'>R</label>\r\n                            <input id='color-R' type='text'\r\n                                onMouseLeave={(e) => { e.target.blur() }}\r\n                                onClick={(e) => {e.target.select()}}\r\n                                onChange={(e) => { \r\n                                    this.setColor() \r\n                                }}\r\n                            >\r\n                            </input>\r\n                            <label htmlFor='color-G'>G</label>\r\n                            <input id='color-G' type='text'\r\n                                onMouseLeave={(e) => { e.target.blur() }}\r\n                                onClick={(e) => { e.target.select() }}\r\n                                onChange={(e) => { \r\n                                    this.setColor()\r\n                                }}\r\n                            >\r\n                            </input>\r\n                            <label htmlFor='color-B'>B</label>\r\n                            <input id='color-B' type='text'\r\n                                onMouseLeave={(e) => { e.target.blur() }}\r\n                                onClick={(e) => { e.target.select() }}\r\n                                onChange={(e) => { \r\n                                    this.setColor()\r\n                                }}\r\n                            >\r\n                            </input>\r\n                        </li>\r\n                        <div className={'color-box-wrapper'}>\r\n                            <div id='color-box'></div>\r\n                        </div>\r\n                    </ul>\r\n                )\r\n                break;\r\n            case this.modes.BUCKET:\r\n                el.style.display = 'block';\r\n                return (\r\n                    <ul>\r\n                        <li className={'rgb-options'}>\r\n                            <label htmlFor='color-R'>R</label>\r\n                            <input id='color-R' type='text'\r\n                                onMouseLeave={(e) => { e.target.blur() }}\r\n                                onClick={(e) => {e.target.select()}}\r\n                                onChange={(e) => { \r\n                                    this.setColor() \r\n                                }}\r\n                            >\r\n                            </input>\r\n                            <label htmlFor='color-G'>G</label>\r\n                            <input id='color-G' type='text'\r\n                                onMouseLeave={(e) => { e.target.blur() }}\r\n                                onClick={(e) => { e.target.select() }}\r\n                                onChange={(e) => { \r\n                                    this.setColor()\r\n                                }}\r\n                            >\r\n                            </input>\r\n                            <label htmlFor='color-B'>B</label>\r\n                            <input id='color-B' type='text'\r\n                                onMouseLeave={(e) => { e.target.blur() }}\r\n                                onClick={(e) => { e.target.select() }}\r\n                                onChange={(e) => { \r\n                                    this.setColor()\r\n                                }}\r\n                            >\r\n                            </input>\r\n                        </li>\r\n                        <div className={'color-box-wrapper'}>\r\n                            <div id='color-box'></div>\r\n                        </div>\r\n                    </ul>\r\n                )\r\n                break;\r\n            default:\r\n                if (el !== null)\r\n                    el.style.display = 'none';\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='settings'\r\n                onMouseMove={() => { this.Mouse.dragLayerManagement('.settings')}}\r\n            >\r\n                {this.changeOptionsMode()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Header extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    exitCanvasOptions = () => {\r\n        this.props.popCanvasOptions();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n              <ul className='nav-bar'>\r\n                <li className='nav-bar-iteam logo'>\r\n                    <a>LOGO</a>\r\n                </li>\r\n                <li className='nav-bar-iteam'>\r\n                    <a onClick={this.props.popCanvasOptions}>\r\n                        NEW\r\n                    </a>\r\n                    <ul className='canvas-options'>\r\n                        <li>\r\n                            <span className='canvas-options-exit'\r\n                                onMouseDown={this.props.popCanvasOptions}>\r\n                                X\r\n                            </span>\r\n                        </li>\r\n                        <li>\r\n                            <label htmlFor='canvas-width'>\r\n                                WIDTH (in pxl)\r\n                            </label>\r\n\r\n                            <input id='canvas-width'\r\n                                className='canvas-options-input' >\r\n                            </input>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <label htmlFor='canvas-height'>\r\n                                HEIGHT (in pxl)\r\n                            </label>\r\n\r\n                            <input id='canvas-height'\r\n                                className='canvas-options-input'>\r\n                            </input>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <button className='canvas-otpions-btn'\r\n                                onClick={this.props.add}>\r\n                                CREATE CANVAS\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n\r\n                <li className='nav-bar-iteam'>\r\n                    <a>\r\n                        <input type='file' name='add-image' id='add-image' onChange={this.props.addImage}/>\r\n                        <label htmlFor='add-image' >Add image</label>\r\n                    </a>\r\n                </li>\r\n\r\n                <li className='nav-bar-iteam'>\r\n                    <a onClick={this.props.saveImg}>\r\n                        SAVE\r\n                    </a>\r\n                </li>\r\n              </ul>\r\n        )\r\n    }\r\n}","import './App.css';\r\nimport React from 'react';\r\nimport { Stage, Layer, Rect } from 'react-konva';\r\nimport Konva from 'konva';\r\nimport ToolBar from './Component/ToolBar';\r\nimport Shape from './Component/ToolBarComponent/Shape';\r\nimport Text from './Component/ToolBarComponent/Text';\r\nimport BezierCurve from './Component/ToolBarComponent/BezierCurve';\r\nimport Settings from './Component/Settings';\r\nimport Header from './Component/Header';\r\nimport Mouse from './Functionality/Mouse';\r\n\r\nexport default class AppTest extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'default',\r\n      color: '#000',\r\n      sizePencil : 5,\r\n      sizeEraser : 5,\r\n      sizeBezier: 5,\r\n      shape: 'none',\r\n      bezier: 'none',\r\n      text: 'off',\r\n      brush: 'default',\r\n      createBezierBtnClicked: false,\r\n      filter : '',\r\n      image: null,\r\n      widthFrame: window.innerWidth / 2,\r\n      heightFrame: window.innerHeight / 2,\r\n      layerManagement: [],\r\n      newFile: false,\r\n      buttonTab: [],\r\n    };\r\n\r\n    this.defaultLayer = 0;\r\n    this.border = 0;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    document.oncontextmenu = new Function(\"return false;\");\r\n    this.getStage = this.stage.getStage();\r\n    this.scaleBy = 1.1;\r\n    this.preventCenter = false;\r\n    this.saveAnchors = 0;\r\n    this.tmpPointerPosition = {\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n    this.anchorLocation = {\r\n      start: 0,\r\n      center: 0,\r\n      end: 0,\r\n    };\r\n    this.saveFirstBezierPosition = undefined;\r\n    this.saveCanvas = 0;\r\n    this.saveBezier = 0;\r\n    this.endPaintShape = false;\r\n\r\n    this.getStage.on('mousedown', (e) => {\r\n      if (e.evt.button === 2) {\r\n        this.getStage.draggable(true);\r\n      }\r\n    });\r\n\r\n    this.getStage.on('mouseup', (e) => {\r\n      this.getStage.draggable(false);\r\n    });\r\n    \r\n    window.addEventListener('wheel', (e) => {\r\n      this.Mouse.scroll(e, this.scaleBy);\r\n    });\r\n    \r\n    this.getStage.on('mouseenter', () => {\r\n      const el = document.querySelector('.mouseCircle');\r\n      if (this.state.mode === 'pencil' || this.state.mode === 'eraser') {\r\n        el.style.display = 'block';\r\n      }\r\n    });\r\n\r\n    this.getStage.on('mouseleave', () => {\r\n      const el = document.querySelector('.mouseCircle');\r\n      el.style.display = 'none';\r\n    });\r\n\r\n    this.displayLayer();\r\n    this.Shape = new Shape();\r\n    this.Text = new Text();\r\n    this.BezierCurve = new BezierCurve();\r\n    this.Settings = new Settings();\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.Mouse = new Mouse(this.props, this.getStage, this.state, \r\n                          this.state.mode, this.state.color, \r\n                          this.state.sizePencil, this.state.brush,\r\n                          this.state.sizeEraser, this.state.shape);\r\n    console.log(this.getStage);\r\n    console.log(this.state.mode);\r\n    console.log('Test for gh-pages ver.2');\r\n    if (this.state.shape === 'rect' \r\n        || this.state.shape === 'star' \r\n        || this.state.shape === 'arrow'\r\n        || this.state.shape === 'circle'\r\n        || this.state.shape === 'ellipse'\r\n        || this.state.text === 'on'\r\n        || this.state.bezier === 'create-bezier') {\r\n      this.addLayer(null);\r\n      this.state.shape = 'none';\r\n      this.state.bezier = 'none';\r\n      this.state.text = 'off';\r\n    }\r\n    if (this.state.bezier === 'modify-bezier') {\r\n      const { layerManagement } = this.state;\r\n      const stageLayer = this.getStage.children;\r\n\r\n      layerManagement.forEach(_layersManagement => {\r\n        stageLayer.forEach((_stageLayers, i) => {\r\n          if (_layersManagement.activeLayer === 'true') {\r\n            if (_stageLayers._id === _layersManagement.key) {\r\n              this.saveAnchors = _stageLayers.find('Circle');\r\n              this.saveAnchors.forEach(anchor => {\r\n                anchor.visible(true);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    this.selectLayerManagementElColor();\r\n    this.getStage.on('mousedown', (e) => {\r\n      if (this.state.mode === 'bucket') {\r\n        const { layerManagement } = this.state;\r\n        const stageLayer = this.getStage.children;\r\n        \r\n        layerManagement.forEach(_layersManagement => {\r\n          stageLayer.forEach((_stageLayers, i) => {\r\n            if (_layersManagement.activeLayer === 'true') {\r\n              if (_stageLayers._id === _layersManagement.key) {\r\n                if (_stageLayers.children[0].id() === 'drawingPlace') {\r\n                  // if(e.target === _stageLayers.children[0]) {\r\n                    let canvas = _stageLayers.children[0].getImage();\r\n                    let ctx = canvas.getContext('2d');\r\n                    ctx.fillStyle = this.state.color;\r\n                    ctx.fillRect(_stageLayers.children[0].x(), _stageLayers.children[0].y(), \r\n                                  _stageLayers.children[0].width(), _stageLayers.children[0].height());\r\n                  // }\r\n                }\r\n                console.log(_stageLayers.children[0]);\r\n                if (_stageLayers.children[0].id() === 'group') { // TODO: When you add Image you cant use bucket on Image because e.target !== _stageLayers.children[0].children[0] you must set to children[1]\r\n                  if (_stageLayers.children[0].children[0].id() === 'imgPlace') {\r\n                    // if (e.target === _stageLayers.children[0].children[1]) {\r\n                      console.log(_stageLayers.children[0].children[1].getImage());\r\n                      let canvas = _stageLayers.children[0].children[1].getImage();\r\n                      let ctx = canvas.getContext('2d');\r\n                      ctx.fillStyle = this.state.color;\r\n                      ctx.fillRect(_stageLayers.children[0].children[1].x(), _stageLayers.children[0].children[1].y(),\r\n                                    _stageLayers.width(), _stageLayers.height());\r\n                    // }\r\n                  }\r\n                  if (_stageLayers.children[0].children[0].name() === 'shape') {\r\n                    if (e.target === _stageLayers.children[0].children[0]) {\r\n                      _stageLayers.children[0].children[0].fill(this.state.color);\r\n                      _stageLayers.children[0].children[0].stroke(this.state.color);\r\n                    }\r\n                  }\r\n                  if (_stageLayers.children[0].children[0].id() === 'text') {\r\n                    if (e.target === _stageLayers.children[0].children[0]) {\r\n                      _stageLayers.children[0].children[0].fill(this.state.color);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          });\r\n        });\r\n        // console.log(e.target);\r\n        // if (e.target.id() === 'drawingPlace') {\r\n        //   let canvas = e.target.getImage();\r\n        //   let ctx = canvas.getContext('2d');\r\n        //   ctx.fillStyle = this.state.color;\r\n        //   ctx.fillRect(e.target.x(), e.target.y(), e.target.width(), e.target.height());\r\n        // }\r\n        // if (e.target.name() === 'shape') {\r\n        //   e.target.fill(this.state.color);\r\n        //   e.target.stroke(this.state.color);\r\n        // }\r\n        this.getStage.draw();\r\n      }\r\n      if (this.state.mode === 'text') {   \r\n        const { layerManagement } = this.state;\r\n        const stageLayer = this.getStage.children;\r\n\r\n        layerManagement.forEach(_layersManagement => {\r\n          stageLayer.forEach((_stageLayers, i) => {\r\n            if (_layersManagement.activeLayer === 'true') {\r\n              if (_stageLayers._id === _layersManagement.key) {\r\n                let groupX = _stageLayers.children[0].x() * this.getStage.scaleX();\r\n                let groupY = _stageLayers.children[0].y() * this.getStage.scaleY();\r\n\r\n                let localPos = {\r\n                  x: (((this.getStage.getPointerPosition().x\r\n                    - this.getStage.x()\r\n                    - groupX))\r\n                    / this.getStage.scaleX()),\r\n\r\n                  y: (((this.getStage.getPointerPosition().y\r\n                    - this.getStage.y()\r\n                    - groupY))\r\n                    / this.getStage.scaleY())\r\n                }\r\n                //This for create Text\r\n                _stageLayers.children[0].children[0].x(localPos.x);\r\n                _stageLayers.children[0].children[0].y(localPos.y);\r\n                _stageLayers.children[0].children[0].text('Some Text');\r\n                // this.getStage.draw();\r\n              }\r\n            }\r\n          });\r\n        });\r\n        this.offAllButtons();\r\n      }\r\n      else if (this.state.mode === 'shape' || this.state.mode === 'bezier') {\r\n        this.endPaintShape = true;\r\n        this.tmpPointerPosition = {\r\n          x: this.getStage.getPointerPosition().x,\r\n          y: this.getStage.getPointerPosition().y,\r\n        }\r\n        // this.tmpPointerPosition2 = {\r\n        //   x: this.getStage.getPointerPosition().x,\r\n        //   y: this.getStage.getPointerPosition().y,\r\n        // }\r\n      }\r\n      // this.getStage.draw();     \r\n    });\r\n    this.getStage.on('mouseup', () => {\r\n      if (this.state.mode === 'shape' || this.state.mode === 'bezier') {\r\n        this.endPaintShape = false;\r\n        let anchors;\r\n        if (this.state.mode === 'bezier' && this.state.createBezierBtnClicked === true) {\r\n          if (this.saveCanvas === 0) {\r\n            // return;\r\n          }\r\n          console.log(this.saveCanvas);\r\n          let ctx = this.saveCanvas.getContext('2d');\r\n          if (this.state.bezier !== 'modify-bezier') {\r\n            let anchorss = this.getStage.find(node => {\r\n              return node.className === 'Circle' && node.id() === 'anchor'; \r\n            });\r\n            anchorss.forEach(node => {\r\n              node.visible(false);\r\n              this.getStage.draw();\r\n            });\r\n            \r\n            ctx.clearRect(0, 0, this.saveCanvas.width, this.saveCanvas.height);\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.anchorLocation.start.x, this.anchorLocation.start.y);\r\n            ctx.lineTo(this.anchorLocation.end.x, this.anchorLocation.end.y);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n            \r\n            // this.getStage.draw();\r\n            if (this.anchorLocation.center.x < 0)\r\n            this.anchorLocation.center.x = this.anchorLocation.center.x * (-1);\r\n            \r\n            if (this.anchorLocation.center.y < 0)\r\n            this.anchorLocation.center.y = this.anchorLocation.center.y * (-1);\r\n            \r\n            this.BezierCurve.createAnchor(this.anchorLocation.start.x, this.anchorLocation.start.y, this.getStage);\r\n            this.BezierCurve.createAnchor(this.anchorLocation.center.x, this.anchorLocation.center.y, this.getStage);\r\n            this.BezierCurve.createAnchor(this.anchorLocation.center.x - 50, this.anchorLocation.center.y - 50, this.getStage);\r\n            this.BezierCurve.createAnchor(this.anchorLocation.end.x, this.anchorLocation.end.y, this.getStage);\r\n            anchors = this.getStage.find(node => {\r\n              return node.className === 'Circle' && node.visible();\r\n            });\r\n          } else {\r\n            anchors = this.saveAnchors;\r\n            // this.state.bezier = 'none';\r\n            return;\r\n          }\r\n\r\n          // let anchors = this.getStage.find('Circle');\r\n          anchors.forEach(anchor => {\r\n            anchor.on('dragmove', () => {\r\n              ctx.clearRect(0, 0, this.saveCanvas.width, this.saveCanvas.height);\r\n\r\n              ctx.beginPath();\r\n              ctx.moveTo(anchors[0].attrs.x, anchors[0].attrs.y);\r\n              ctx.bezierCurveTo(anchors[1].attrs.x, anchors[1].attrs.y,\r\n                                anchors[2].attrs.x - 50, anchors[2].attrs.y - 50,\r\n                                anchors[3].attrs.x, anchors[3].attrs.y);\r\n              ctx.stroke();\r\n              anchor.parent.parent.draw();\r\n              // this.getStage.draw();\r\n            });\r\n          });\r\n          // let a = this.getStage.find(node => {\r\n          //   return node.className === 'Circle' && node.visible(true);\r\n          // });\r\n          // this.saveBezier.setClip({\r\n          //   x:  this.anchorLocation.start.x,\r\n          //   y:  this.anchorLocation.start.y,\r\n          //   width: Math.abs(this.anchorLocation.start.x - this.anchorLocation.end.x),\r\n          //   height: Math.abs(this.anchorLocation.start.y - this.anchorLocation.end.y),\r\n          // });\r\n          // let tabX = [];\r\n          // let tabY = [];\r\n          // this.saveBezier.children.forEach(anchors => {\r\n          //   if (anchors.id() === 'anchor') {\r\n          //     tabX.push(anchors.x());\r\n          //     tabY.push(anchors.y());\r\n          //   }\r\n          // });\r\n          // console.table(tabX);\r\n          // console.table(tabY);\r\n          // let MaxX = Math.max.apply(Math, tabX);\r\n          // let MaxY = Math.max.apply(Math, tabY);\r\n          // console.log(MaxX);\r\n          // console.log(MaxY);\r\n\r\n          // let MinX = Math.min.apply(Math, tabX);\r\n          // let MinY = Math.min.apply(Math, tabY);\r\n          // console.log(MinX);\r\n          // console.log(MinY);\r\n\r\n          this.saveBezier.clipFunc(function(ctx, e) {\r\n            let tabX = [];\r\n            let tabY = [];\r\n            e.children.forEach(anchors => {\r\n              if (anchors.id() === 'anchor') {\r\n                tabX.push(anchors.x());\r\n                tabY.push(anchors.y());\r\n              }\r\n            });\r\n            let MaxX = Math.max.apply(Math, tabX);\r\n            let MaxY = Math.max.apply(Math, tabY);\r\n\r\n            let MinY = Math.min.apply(Math, tabY);\r\n            let MinX = Math.min.apply(Math, tabX);\r\n            // ctx.clearRect(0, 0, 800, 800);\r\n            // console.log(e);\r\n            // ctx.beginPath();\r\n            // ctx.moveTo(e.children[1].attrs.x, e.children[1].attrs.y);\r\n            // ctx.lineTo(e.children[4].attrs.x, e.children[4].attrs.y);\r\n            // ctx.closePath();\r\n            // ctx.stroke();\r\n\r\n            // // ctx.clearRect(0, 0, 800, 800);\r\n            // ctx.beginPath();\r\n            // ctx.moveTo(e.children[1].attrs.x, e.children[1].attrs.y);\r\n            // ctx.bezierCurveTo(e.children[2].attrs.x, e.children[2].attrs.y,\r\n            //                   e.children[3].attrs.x - 50, e.children[3].attrs.y - 50,\r\n            //                   e.children[4].attrs.x, e.children[4].attrs.y);\r\n            // ctx.stroke();\r\n\r\n            // ctx.clearRect(0, 0, 800, 800);\r\n            // ctx.beginPath();\r\n            // ctx.arc(e.children[1].attrs.x, e.children[1].attrs.y, e.children[1].attrs.radius, 0, Math.PI * 2, false);\r\n            // ctx.arc(e.children[2].attrs.x, e.children[2].attrs.y, e.children[2].attrs.radius, 0, Math.PI * 2, false);\r\n            // ctx.arc(e.children[3].attrs.x, e.children[3].attrs.y, e.children[3].attrs.radius, 0, Math.PI * 2, false);\r\n            // ctx.arc(e.children[4].attrs.x, e.children[4].attrs.y, e.children[4].attrs.radius, 0, Math.PI * 2, false);\r\n            // ctx.stroke();\r\n            // ctx.closePath();\r\n            // // ctx.fill('nonzero');\r\n            \r\n            ctx.clearRect(0, 0, 800, 800);\r\n            ctx.rect(MinX - 20, MinY - 20, (Math.abs(MaxX - MinX) + 40), (Math.abs(MinY - MaxY) + 40));\r\n          });\r\n          this.getStage.draw();\r\n        }\r\n        console.log(this.state.bezier);\r\n        if (this.state.bezier !== 'modify-bezier') {\r\n          this.offAllButtons();\r\n        }\r\n        this.saveFirstBezierPosition = undefined;\r\n        this.state.createBezierBtnClicked = false;\r\n      }\r\n    });\r\n\r\n    this.getStage.on('mousemove', (e) => {\r\n      if (this.state.mode === 'shape' || this.state.mode === 'bezier') {\r\n        if (this.state.bezier !== 'modify-bezier') {\r\n          const { layerManagement } = this.state;\r\n          const stageLayer = this.getStage.children;\r\n          if (!this.endPaintShape)\r\n          return;\r\n          \r\n          layerManagement.forEach(_layersManagement => {\r\n            stageLayer.forEach(_stageLayers => {\r\n              if (_layersManagement.activeLayer === 'true') {\r\n                if (_stageLayers._id === _layersManagement.key) {\r\n                    let groupX = _stageLayers.children[0].x() * this.getStage.scaleX();\r\n                    let groupY = _stageLayers.children[0].y() * this.getStage.scaleY();\r\n\r\n                    let localPos = {\r\n                      x: (((this.getStage.getPointerPosition().x\r\n                        - this.getStage.x()\r\n                        - groupX))\r\n                        / this.getStage.scaleX()),\r\n\r\n                      y: (((this.getStage.getPointerPosition().y\r\n                        - this.getStage.y()\r\n                        - groupY))\r\n                        / this.getStage.scaleY())\r\n                    }\r\n\r\n                    let localPos2 = {\r\n                      x: (((this.tmpPointerPosition.x\r\n                        - this.getStage.x()\r\n                        - groupX))\r\n                        / this.getStage.scaleX()),\r\n\r\n                      y: (((this.tmpPointerPosition.y\r\n                        - this.getStage.y()\r\n                        - groupY))\r\n                        / this.getStage.scaleY())\r\n                    }\r\n                    //This is for crate shape from mouse move\r\n                    if (this.state.mode === 'bezier' && this.state.createBezierBtnClicked === true) {\r\n                      if (_stageLayers.children[0].children === undefined) {\r\n                        // return;\r\n                      }\r\n                      let img = _stageLayers.children[0].children[0].getImage();\r\n                      this.saveCanvas = img;\r\n                      this.saveBezier = _stageLayers.children[0];\r\n                      let ctx = img.getContext('2d');\r\n                      ctx.beginPath();\r\n                      localPos = {\r\n                        x: (((this.tmpPointerPosition.x\r\n                          - this.getStage.x()\r\n                          - groupX))\r\n                          / this.getStage.scaleX()),\r\n\r\n                        y: (((this.tmpPointerPosition.y\r\n                          - this.getStage.y()\r\n                          - groupY))\r\n                          / this.getStage.scaleY())\r\n                      }\r\n                      if (this.saveFirstBezierPosition === undefined)\r\n                      this.saveFirstBezierPosition = localPos;\r\n                      \r\n                      ctx.moveTo(localPos.x, localPos.y);\r\n                      // ctx.moveTo(this.saveFirstBezierPosition.x, this.saveFirstBezierPosition.y);\r\n                      // ctx.bezierCurveTo(localPos.x, localPos.y + 30, localPos.x + 50, localPos.y + 50, localPos.x + 100, localPos.y + 100);\r\n\r\n\r\n                      let pos = this.getStage.getPointerPosition();\r\n\r\n                      localPos = {\r\n                        x: (((pos.x\r\n                          - this.getStage.x()\r\n                          - groupX))\r\n                          / this.getStage.scaleX()),\r\n\r\n                        y: (((pos.y\r\n                          - this.getStage.y()\r\n                          - groupY))\r\n                          / this.getStage.scaleY())\r\n                      }\r\n                      let centerX = (localPos.x - this.saveFirstBezierPosition.x) / 2;\r\n                      let centerY = (localPos.y - this.saveFirstBezierPosition.y) / 2;\r\n\r\n                      this.anchorLocation = {\r\n                        start: this.saveFirstBezierPosition,\r\n                        center: {\r\n                          x: localPos.x - centerX,\r\n                          y: localPos.y - centerY,\r\n                        },\r\n                        end: localPos,\r\n                      }\r\n\r\n                      ctx.lineTo(localPos.x, localPos.y);\r\n                      ctx.closePath();\r\n                      ctx.stroke();\r\n                      this.tmpPointerPosition = pos;\r\n                      // this.getStage.draw();\r\n                      _stageLayers.draw();\r\n                    }\r\n                    if (this.state.mode === 'shape') {\r\n                      if (_stageLayers.children[0].nodeType === 'Group') {\r\n                        _stageLayers.children[0].children[0].x(localPos2.x);\r\n                        _stageLayers.children[0].children[0].y(localPos2.y);\r\n                        _stageLayers.children[0].children[0].width(localPos.x - localPos2.x);\r\n                        _stageLayers.children[0].children[0].height(localPos.y - localPos2.y);\r\n                        _stageLayers.children[0].children[0].fill(this.state.color);\r\n                        _stageLayers.children[0].children[0].stroke(this.state.color);\r\n                        if (_stageLayers.children[0].children[0].className === 'Arrow')\r\n                          _stageLayers.children[0].children[0].points([0, 0,\r\n                            localPos.x - localPos2.x,\r\n                            localPos.y - localPos2.y]);\r\n                        if (_stageLayers.children[0].children[0].className === 'Circle')\r\n                          if (_stageLayers.children[0].children[0].attrs.radius < 0)\r\n                            _stageLayers.children[0].children[0].attrs.radius = 0;\r\n\r\n                        if (_stageLayers.children[0].children[0].className === 'Ellipse') {\r\n                          if (_stageLayers.children[0].children[0].attrs.radiusX < 0)\r\n                            _stageLayers.children[0].children[0].attrs.radiusX = 0;\r\n                          if (_stageLayers.children[0].children[0].attrs.radiusY < 0)\r\n                            _stageLayers.children[0].children[0].attrs.radiusX = 0;\r\n                        }\r\n                        // this.getStage.draw();\r\n                        _stageLayers.draw();\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n            });\r\n          }\r\n        }\r\n    });\r\n  }\r\n\r\n  selectLayerManagementElColor = () => {\r\n    const elLayerManagement = document.querySelectorAll(\r\n                          '.layer-management ul li');\r\n\r\n    const elInvisibleBtn = document.querySelectorAll('.invisible-btn');\r\n\r\n    elLayerManagement.forEach(el => {\r\n      if (el.attributes['name'].value === 'true')\r\n        el.style.backgroundColor = '#888';\r\n      else\r\n        el.style.backgroundColor = '#666';\r\n    });\r\n\r\n    elInvisibleBtn.forEach(el => {\r\n      if (el.attributes['name'].value === 'true')\r\n        el.style.backgroundColor = '#333';\r\n      else\r\n        el.style.backgroundColor = '#fff';\r\n    });\r\n\r\n  }\r\n\r\n  changeMode = (dataFromToolBar, buttonFromToolBar) => {\r\n    this.setState({ mode: dataFromToolBar, buttonTab: buttonFromToolBar });\r\n  }\r\n\r\n  changeColor = (dataFromToolBar) => {\r\n    this.setState({ color: dataFromToolBar });\r\n  }\r\n\r\n  changeText = (dataFromToolBar) => {\r\n    this.setState({ text: dataFromToolBar });\r\n  }\r\n\r\n  changeSizePencil = (dataFromSettings) => {\r\n    this.setState({ sizePencil: dataFromSettings });\r\n  }\r\n\r\n  changeSizeEraser = (dataFromSettings) => {\r\n    this.setState({ sizeEraser: dataFromSettings });\r\n  }\r\n\r\n  changeSizeBezier = (dataFromSettings) => {\r\n    this.setState({ sizeBezier: dataFromSettings });\r\n  }\r\n\r\n  changeBrush = (dataFromSettings) => {\r\n    this.setState({ brush: dataFromSettings });\r\n  }\r\n\r\n  changeFilter = (dataFromFilter) => {\r\n    this.setState({ filter: dataFromFilter });\r\n  }\r\n\r\n  changeShape = (dataFromSettings) => {\r\n    this.setState({ shape: dataFromSettings });\r\n  }\r\n\r\n  changeBezier = (dataFromSettings, isClicked) => {\r\n    this.setState({ bezier: dataFromSettings, createBezierBtnClicked: isClicked });\r\n  }\r\n\r\n  popCanvasOptions = () => {\r\n    const canvasOptions = document.querySelector('.canvas-options');\r\n    const back = document.querySelector('.back');\r\n    const navBar = document.querySelector('.nav-bar');\r\n\r\n    if (canvasOptions.style.display === 'flex') {\r\n      canvasOptions.style.display = 'none';\r\n      back.style.display = 'none';\r\n      navBar.style.zIndex = '1';\r\n    }\r\n    else {\r\n      canvasOptions.style.display = 'flex';\r\n      back.style.display = 'block';\r\n      navBar.style.zIndex = 'initial';\r\n    }\r\n  }\r\n\r\n  newFile = () => {\r\n    // HERE WILL BE CODE FROM INPUT TAG TO CREATE WIDTH AND HEIGHT CANVAS\r\n    const canvasHeightOptions = document.querySelector('#canvas-height');\r\n    const canvasWidthOptions = document.querySelector('#canvas-width');\r\n    this.offAllButtons();\r\n    let newFileTMP = false;\r\n\r\n    // This 3 are here because when I create new file these values must be reset\r\n    this.preventCenter = false;\r\n    this.getStage.x(0);\r\n    this.getStage.y(0);\r\n\r\n    if (canvasHeightOptions.value >= 32 && canvasWidthOptions.value >= 32\r\n      && !isNaN(canvasHeightOptions.value) && !isNaN(canvasWidthOptions.value)) {\r\n      const { layerManagement } = this.state;\r\n      const stageLayer = this.getStage.children;\r\n      newFileTMP = true;\r\n\r\n      stageLayer.forEach((_layer) => {\r\n        this.getStage.removeChildren();\r\n      });\r\n\r\n      this.defaultLayer = new Konva.Layer({\r\n        id : 'defaultLayer'\r\n      });\r\n\r\n      this.border = new Konva.Rect({\r\n        id: 'border',\r\n        x: 0,\r\n        y: 0,\r\n        stroke: 'black',\r\n        strokeWidth: 1,\r\n      });\r\n      this.defaultLayer.add(this.border);\r\n      this.getStage.add(this.defaultLayer);\r\n\r\n      const layers_TMP = layerManagement;\r\n\r\n      layers_TMP.forEach(_index => {\r\n        layers_TMP.splice(_index, layers_TMP.length);\r\n      });\r\n\r\n      this.setState({\r\n        layerManagement: layers_TMP,\r\n        widthFrame: canvasWidthOptions.value,\r\n        heightFrame: canvasHeightOptions.value,\r\n        newFile: true,\r\n      });\r\n\r\n      this.addLayer(null, canvasWidthOptions.value, canvasHeightOptions.value, newFileTMP);\r\n      this.popCanvasOptions();\r\n      this.getStage.draw();\r\n    } else {\r\n      newFileTMP = false;\r\n      this.offAllButtons();\r\n      alert('WIDTH AND HEIGHT MUST BE A NUMBER AND BIGER THEN 32PX');\r\n    }\r\n  }\r\n\r\n  addDrawingCanvas = (width, height, isImg) => {\r\n    const { layerManagement} = this.state;\r\n    const stageLayer = this.getStage.children;\r\n    let tmpX = 0;\r\n    let tmpY = 0;\r\n    let tmpScaleX = 0;\r\n    let tmpScaleY = 0;\r\n    // It does not allow you to center drawing \r\n    // place when you add a new layer\r\n    // let preventCenter = false;\r\n    if (this.getStage.x() !== 0) {\r\n      this.preventCenter = true;\r\n      tmpX = this.getStage.x();\r\n      tmpY = this.getStage.y();\r\n      tmpScaleX = this.getStage.scaleX();\r\n      tmpScaleY = this.getStage.scaleY();\r\n    }\r\n\r\n    layerManagement.forEach(_layersManagement => {\r\n      stageLayer.forEach((_stageLayers, i) => {\r\n        if (_stageLayers._id === _layersManagement.key) {\r\n          // This prevent multiple shape in one layer\r\n          // one layer have one drawing place, img place etc.\r\n          if (i === stageLayer.length - 1) {\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            // Center drawing place with height and width lower then stage width and hight\r\n            this.getStage.x((this.getStage.width() - canvas.width) / 2);\r\n            this.getStage.y((this.getStage.height() - canvas.height) / 2);\r\n            let saveScale = 1;\r\n            // Center drawing place with any sizePencil\r\n            // here i resize and scale stage u can resize layer but replace stage with l\r\n            if (canvas.width >= this.getStage.width() ||\r\n            canvas.height >= this.getStage.height()) {\r\n              let breaker = 0;\r\n              let i = 1;\r\n              const padding = 100;\r\n\r\n              while (this.getStage.x() <= padding ||\r\n              this.getStage.y() <= padding) {\r\n                this.getStage.scale({ x: i, y: i });\r\n                this.getStage.x((this.getStage.width() - (canvas.width * i)) / 2);\r\n                this.getStage.y((this.getStage.height() - (canvas.height * i)) / 2);\r\n                i = i - 0.01;\r\n                breaker++;\r\n                saveScale = i;\r\n                if (breaker === 100) {\r\n                  return;\r\n                }\r\n              }\r\n            }\r\n            this.border.width(canvas.width);\r\n            this.border.height(canvas.height);\r\n            this.border.strokeWidth(1 / saveScale);\r\n            console.log(saveScale);\r\n\r\n            // Add img to drawing place\r\n            // drawingPlace = img\r\n            let drawingPlace;\r\n            if (this.state.mode !== 'shape' || this.state.shape === 'none') {\r\n              if (isImg !== null) {\r\n                const imgPlace = new Konva.Image({\r\n                  image: isImg,\r\n                  x: 0,\r\n                  y: 0,\r\n                  id: 'imgPlace',\r\n                  width: isImg.width,\r\n                  height: isImg.height,\r\n                });\r\n  \r\n                drawingPlace = new Konva.Image({\r\n                  image: canvas,\r\n                  x: 0,\r\n                  y: 0,\r\n                  id: 'drawingPlace',\r\n                  width: isImg.width,\r\n                  height: isImg.height,\r\n                });\r\n  \r\n                const group = new Konva.Group({\r\n                  id: 'group',\r\n                  width: isImg.width,\r\n                  height: isImg.height,\r\n                });\r\n  \r\n                group.add(imgPlace);\r\n                group.add(drawingPlace);\r\n                _stageLayers.add(group);\r\n                \r\n              } else {\r\n                if (this.state.text === 'on') {\r\n                  this.Text.createTextArea(canvas, _stageLayers, drawingPlace, this.getStage);\r\n                  return;\r\n                }\r\n                if (this.state.bezier === 'create-bezier') {\r\n                  // this.Text.createTextArea(canvas, _stageLayers, drawingPlace, this.getStage);\r\n\r\n                  this.BezierCurve.createBezier(canvas, _stageLayers, drawingPlace, this.getStage, this.state.sizeBezier, this.state.color);\r\n                  return;\r\n                }\r\n                \r\n                drawingPlace = new Konva.Image({\r\n                  image: canvas,\r\n                  x: 0,\r\n                  y: 0,\r\n                  id: 'drawingPlace'\r\n                });\r\n  \r\n                _stageLayers.add(drawingPlace);\r\n              }\r\n\r\n              drawingPlace.on('mousedown', (event) => {\r\n                this.Mouse.mouseDown(event);\r\n              });\r\n\r\n              drawingPlace.on('mouseup', () => {\r\n                this.Mouse.mouseUp();\r\n              });\r\n\r\n              drawingPlace.on('mousemove', () => {\r\n                this.Mouse.mouseMove(drawingPlace);\r\n              });\r\n            } else {\r\n              if (this.state.shape === 'rect') \r\n                this.Shape.createRect(canvas, _stageLayers, drawingPlace, this.state.color);\r\n              else if (this.state.shape === 'star')\r\n                this.Shape.createStar(canvas, _stageLayers, drawingPlace, this.state.color);\r\n              else if (this.state.shape === 'arrow')\r\n                this.Shape.createArrow(canvas, _stageLayers, drawingPlace, this.state.color);\r\n              else if (this.state.shape === 'circle')\r\n                this.Shape.createCircle(canvas, _stageLayers, drawingPlace, this.state.color);\r\n              else if (this.state.shape === 'ellipse')\r\n                this.Shape.createEllipse(canvas, _stageLayers, drawingPlace, this.state.color);\r\n            }        \r\n          }\r\n        }\r\n      })\r\n    });\r\n    if (this.preventCenter === true) {\r\n      this.getStage.x(tmpX);\r\n      this.getStage.y(tmpY);\r\n      this.getStage.scaleX(tmpScaleX);\r\n      this.getStage.scaleY(tmpScaleY);\r\n    }\r\n    this.getStage.draw();\r\n  }\r\n\r\n  offAllButtons = () => {\r\n    if (this.state.mode !== 'bezier') {\r\n      let anchors = this.getStage.find(node => {\r\n        return node.className === 'Circle' && node.id() === 'anchor';\r\n      });\r\n      // if (this.saveAnchors !== undefined) {\r\n        //   this.saveAnchors.forEach(anchors => {\r\n          //     anchors.visible(false);\r\n          //   });\r\n          // }\r\n      anchors.forEach(node => {\r\n        node.visible(false);\r\n      });\r\n    }\r\n    this.state.bezier = 'none';\r\n    const el = document.querySelectorAll('img');\r\n    el.forEach(img => {\r\n      if(img.id) {\r\n        img.click();\r\n      }\r\n    });\r\n  }\r\n\r\n  addImage = () => {\r\n    const el = document.getElementById('add-image');\r\n\r\n    if (el.files && el.files[0]) {\r\n      var FR = new FileReader();\r\n      FR.onload = () => {\r\n        var img = new window.Image();\r\n        img.src = FR.result;\r\n        img.onload = () => {\r\n          this.addLayer(img);\r\n        };\r\n      };\r\n\r\n      FR.readAsDataURL(el.files[0]);\r\n      el.value = '';\r\n    };\r\n    this.offAllButtons();\r\n  }\r\n\r\n  downloadImg(uri, name) {\r\n    let link = document.createElement('a');\r\n    link.download = name;\r\n    link.href = uri;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  saveImg = () => {\r\n    this.offAllButtons();\r\n    const { widthFrame, heightFrame, filterTab } = this.state;\r\n    const stageLayer = this.getStage.children;\r\n    \r\n    let canvas = document.createElement('canvas');\r\n    canvas.width = widthFrame;\r\n    canvas.height = heightFrame;\r\n    let ctx = canvas.getContext('2d');\r\n    ctx.filter = this.state.filter; // add filters to canvas;\r\n    let childrenCanvas = 0;\r\n    stageLayer.forEach(_layers => {\r\n      if (_layers.visible() === false || _layers.id() === 'defaultLayer') {\r\n        return;\r\n      }\r\n\r\n      _layers.children.forEach(_shape => {\r\n        if (_shape.id() === 'group' || _shape.id() === 'bezierGroup') {\r\n          _shape.children.forEach(_groupChildren => {\r\n            if (_groupChildren.id() === 'imgPlace') {\r\n              ctx.drawImage(_groupChildren.getImage(), _shape.x(), _shape.y());\r\n            } else if (_groupChildren.id() === 'drawingPlace'){\r\n              childrenCanvas = _groupChildren.getImage();\r\n              ctx.drawImage(childrenCanvas, _shape.x(), _shape.y(), _shape.width(), _shape.height());\r\n            } else if (_groupChildren.name() === 'shape'){\r\n              let x = Math.abs((_groupChildren.x() * _shape.scaleX()) + _shape.x());\r\n              let y = Math.abs((_groupChildren.y() * _shape.scaleY()) + _shape.y());\r\n              let width = _groupChildren.width() * _shape.scaleX();\r\n              let height = _groupChildren.height() * _shape.scaleY();\r\n\r\n              if (_groupChildren.id() === 'circle') {\r\n                x = x - (_groupChildren.radius() * _shape.scaleX());\r\n                y = y - (_groupChildren.radius() * _shape.scaleY());\r\n              } \r\n              if (_groupChildren.id() === 'ellipse') {\r\n                x = x - (_groupChildren.radiusX() * _shape.scaleX());\r\n                y = y - (_groupChildren.radiusY() * _shape.scaleY());\r\n              }\r\n              if (_groupChildren.id() === 'arrow') {\r\n                _groupChildren.points().forEach((point, index) => {\r\n                  if (index === 2) {\r\n                    if (point < 0) {\r\n                      width = width * (-1);\r\n                    }\r\n                  }\r\n                  if (index === 3) {\r\n                    if (point < 0) {\r\n                      height = height * (-1);\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n              childrenCanvas = _groupChildren.toCanvas();\r\n              ctx.drawImage(childrenCanvas, x, y, width, height);\r\n            } else if (_groupChildren.id() === 'text') {\r\n              let x = Math.abs((_groupChildren.x() * _shape.scaleX()) + _shape.x());\r\n              let y = Math.abs((_groupChildren.y() * _shape.scaleY()) + _shape.y());\r\n              let width = _groupChildren.width() * _shape.scaleX();\r\n              let height = _groupChildren.height() * _shape.scaleY();\r\n\r\n              childrenCanvas = _groupChildren.toCanvas();\r\n              ctx.drawImage(childrenCanvas, x, y, width, height);\r\n            } else if (_groupChildren.id() === 'bezierImage') {\r\n              // let x = Math.abs(_groupChildren.x() + _shape.x());\r\n              // let y = Math.abs(_groupChildren.y() + _shape.y());\r\n              childrenCanvas = _groupChildren.getImage();\r\n              ctx.drawImage(childrenCanvas, _shape.x(), _shape.y(), _groupChildren.width(), _groupChildren.height());\r\n            }\r\n          });\r\n        } else {\r\n          childrenCanvas = _shape.getImage();\r\n          ctx.drawImage(childrenCanvas, 0, 0);\r\n        }\r\n      });\r\n    });\r\n\r\n    const saveGroupURL = canvas.toDataURL('image/png');\r\n    this.downloadImg(saveGroupURL, 'img');\r\n    this.setState({\r\n      filterTab: filterTab,\r\n    });\r\n    this.offAllButtons();\r\n  }\r\n\r\n  addLayer = (isImg, width, height, newFileTMP) => {\r\n    const { layerManagement, widthFrame, heightFrame, newFile } = this.state;\r\n    const stageLayer = this.stage.getStage().children;\r\n\r\n    if (newFileTMP === true || newFile === true) {\r\n      // Here I change all layer on false\r\n      stageLayer.forEach(_layers => {\r\n        _layers.name('yes');\r\n      });\r\n\r\n      layerManagement.forEach(_layers => {\r\n        _layers.activeLayer = 'false';\r\n      });\r\n\r\n      //This works when I add layer from layerManagement in application\r\n      if (height === undefined) {\r\n        width = widthFrame;\r\n        height = heightFrame;\r\n      }\r\n\r\n      let layer = new Konva.Layer({\r\n        id: 'newLayer',\r\n        name: 'no',\r\n        //Clip is for img to able move\r\n        clip: {\r\n          x: 0,\r\n          y: 0,\r\n          width: width,\r\n          height: height,\r\n        }\r\n      });\r\n\r\n      this.defaultLayer.width(width);\r\n      this.defaultLayer.height(height);\r\n\r\n      this.getStage.add(layer);\r\n      let layerTMP = layerManagement;\r\n\r\n      layerTMP.push({\r\n        name: layer.nodeType,\r\n        key: layer._id,\r\n        activeLayer: 'true',\r\n        isVisible: 'true',\r\n      });\r\n\r\n      this.addDrawingCanvas(width, height, isImg);\r\n      this.setState({\r\n        layerManagement: layerTMP,\r\n      });\r\n      // this.offAllButtons();\r\n    } else {\r\n      this.offAllButtons();\r\n      alert('YOU MUST CREATE NEW FILE FIRST');\r\n    }\r\n  }\r\n\r\n  clickLayer = (e) => {\r\n    const { layerManagement, buttonTab } = this.state;\r\n    const stageLayer = this.getStage.children;\r\n    let layerTMP = layerManagement;\r\n\r\n    stageLayer.forEach(_stageLayers => {\r\n      _stageLayers.name('yes');\r\n    });\r\n\r\n    layerManagement.forEach(_layers => {\r\n      _layers.activeLayer = 'false';\r\n    });\r\n\r\n    layerTMP.forEach(_layers => {\r\n      if (e.target.id === _layers.key.toString()) {\r\n        if (_layers.activeLayer === 'false') {\r\n          _layers.activeLayer = 'true';\r\n        }\r\n        else \r\n          _layers.activeLayer = 'false';\r\n      }\r\n    });\r\n    // WHEN I DELETE LAYER, CLICKED LAYER IS CORRECT\r\n    stageLayer.forEach(_layers => {\r\n      if (e.target.id === _layers._id.toString()) {\r\n        if (_layers.name() === 'no') {\r\n          _layers.name('yes');\r\n          _layers.moveToTop();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      layerManagement: layerTMP,\r\n    });\r\n  }\r\n\r\n  setInvisible = (e) => {\r\n    const { layerManagement } = this.state;\r\n    const stageLayer = this.getStage.children;\r\n\r\n    layerManagement.forEach(_layersManagement => {\r\n      stageLayer.forEach((_layers, _index) => {\r\n        if (e.target.id === _layers._id.toString() && e.target.id === _layersManagement.key.toString()) {\r\n          if (_index >= 1) {\r\n            if (_layers.visible() === false)\r\n              _layers.visible(true);\r\n            else\r\n              _layers.visible(false);\r\n          } else {\r\n            alert('You can not turn off last layer');\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n\r\n      layerManagement.forEach((_layers, _index) => {\r\n        if (e.target.id === _layers.key.toString()) {\r\n          if (_index >= 1) {\r\n            if (_layers.isVisible === 'true')\r\n              _layers.isVisible = 'false';\r\n            else\r\n              _layers.isVisible = 'true';\r\n          }\r\n        }\r\n      });\r\n\r\n    this.getStage.draw();\r\n  }\r\n\r\n  removeLayer = () => {\r\n    const { layerManagement } = this.state;\r\n    const stageLayer = this.getStage.children;\r\n    let layerTMP = layerManagement;\r\n    \r\n    layerTMP.forEach((_layersManagement, _index) => {\r\n      if (layerManagement.length === 1) {\r\n        alert('You can not delete last layer');\r\n        return;\r\n      }\r\n      if (_layersManagement.activeLayer === 'true') {\r\n        stageLayer.forEach(_stageLayers => {\r\n          if (_stageLayers._id === _layersManagement.key) {\r\n            _stageLayers.getLayer().remove();\r\n          }\r\n        });\r\n\r\n        layerTMP.splice(_index, 1);\r\n      }\r\n    });\r\n\r\n    // Set true on last element \r\n    layerTMP.forEach((_layersManagement, _index) => {\r\n      if (layerManagement.length - 1 === _index) {\r\n        _layersManagement.activeLayer = 'true';\r\n      }\r\n    });\r\n    \r\n    this.setState({\r\n      layerManagement: layerTMP,\r\n    });\r\n  }\r\n\r\n  displayLayer = () => {\r\n    const { layerManagement } = this.state;\r\n    let layerTMP = layerManagement;\r\n    const stageLayer = this.getStage.children;\r\n\r\n    stageLayer.forEach(_layers => {\r\n      if (_layers.id() === 'defaultLayer') {\r\n        return;\r\n      }\r\n\r\n      layerTMP.push({\r\n        name: _layers.nodeType,\r\n        key: _layers._id,\r\n        activeLayer: 'false',\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      layerManagement: layerTMP,\r\n    });\r\n  }\r\n\r\n  moveLayerUpOrBottom = (buttonUpClick) => {\r\n    const stageLayer = this.getStage.children;\r\n    const { layerManagement } = this.state;\r\n    let tmpLayerManagement = layerManagement;\r\n    let preventMoveToTheBottom = false;\r\n    Array.prototype.move = function (from, to) {\r\n      this.splice(to, 0, this.splice(from, 1)[0]);\r\n    }\r\n\r\n    layerManagement.forEach((_layersManagement, _index) => {\r\n      stageLayer.forEach(_stageLayers => {\r\n        if (_stageLayers._id === _layersManagement.key) {\r\n          if (_layersManagement.activeLayer === 'true') {\r\n            if (buttonUpClick === true && _index >= 1) {\r\n              tmpLayerManagement.move(_index, _index - 1);\r\n              _stageLayers.moveDown();\r\n            } else {\r\n              if (preventMoveToTheBottom === false) {\r\n                if (_index === 1) {\r\n                  _stageLayers.visible(true);\r\n                  _layersManagement.isVisible = 'true';\r\n                }\r\n                tmpLayerManagement.move(_index, _index + 1);\r\n                _stageLayers.moveUp();\r\n                preventMoveToTheBottom = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n    \r\n    // First layer must be always visible \r\n    layerManagement.forEach((_layersManagement, _index) => {\r\n      stageLayer.forEach(_stageLayers => {\r\n        if (_stageLayers.index === 0) {\r\n          if (_stageLayers._id === _layersManagement.key) {\r\n            _stageLayers.visible(true);\r\n            _layersManagement.isVisible = 'true';\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      layerManagement: tmpLayerManagement,\r\n    });\r\n  }\r\n  \r\n  returnStage = () => {\r\n    return this.getStage;\r\n  }\r\n\r\n  returnLayerManagement = () => {\r\n    return this.state.layerManagement;\r\n  }\r\n\r\n  returnStateBezier = () => {\r\n    return this.state.bezier;\r\n  }\r\n\r\n  render() {\r\n    this.buttonUpClick = false;\r\n    return (\r\n      <div className='react-app'>\r\n        <div className='mouseCircle'></div>\r\n        <div className='back'></div>\r\n          <Header clearDrawingPlace={this.clearDrawingPlace}\r\n            addImage={this.addImage}\r\n            clearAll={this.clearAll}\r\n            saveImg={this.saveImg}\r\n            add={this.newFile}\r\n            popCanvasOptions={this.popCanvasOptions}\r\n          />\r\n\r\n          <main>\r\n            <div className='layer-management' \r\n              onMouseMove={(event) => { this.Mouse.dragLayerManagement('.layer-management', event) }}>\r\n              <ul>\r\n                {\r\n                  this.state.layerManagement.map((_layers, index) => {\r\n                    return (\r\n                      <div>\r\n                        <li id={_layers.key}\r\n                          key={_layers.key}\r\n                          name={_layers.activeLayer}\r\n                          onMouseDown={(e) => { this.offAllButtons(); this.clickLayer(e); }}\r\n                        >\r\n                          <div className={'invisible-btn'}\r\n                            id={_layers.key} \r\n                            name={_layers.isVisible}\r\n                            onMouseDown={(e) => { this.offAllButtons(); this.setInvisible(e); }}>\r\n                              o\r\n                          </div>\r\n                          {index} {_layers.name} {_layers.key}\r\n                        </li>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </ul>\r\n              <div className={'options'}>\r\n                <div className='move-options'>\r\n                  <button className='layer-management-options-btn up-btn'\r\n                    onMouseDown={() => { \r\n                      this.buttonUpClick = true;\r\n                      this.moveLayerUpOrBottom(this.buttonUpClick);\r\n                      this.offAllButtons();\r\n                     }}>/\\</button>\r\n                  <button className='layer-management-options-btn down-btn'\r\n                    onMouseDown={() => {\r\n                      this.buttonUpClick = false;\r\n                      this.moveLayerUpOrBottom(this.buttonUpClick);\r\n                      this.offAllButtons();\r\n                     }}>\\/</button>\r\n                </div>\r\n                <button className='layer-management-options-btn add-btn'\r\n                onClick={() => { this.offAllButtons(); this.addLayer(null); }}>add</button>\r\n                <button className='layer-management-options-btn remove-btn'\r\n                onClick={() => { this.offAllButtons(); this.removeLayer() }}>remove</button>\r\n              </div>\r\n            </div>\r\n            <ToolBar mode={this.changeMode}\r\n              color={this.changeColor}\r\n              ref={node => { this.tob = node }}\r\n              returnStage={this.returnStage}\r\n              returnStateBezier={this.returnStateBezier}\r\n              returnLayerManagement={this.returnLayerManagement}\r\n              offAllButtons={this.offAllButtons}\r\n              text={this.changeText}\r\n            />\r\n            <Settings changeSizePencil={this.changeSizePencil}\r\n              changeSizeEraser={this.changeSizeEraser}\r\n              changeSizeBezier={this.changeSizeBezier}\r\n              mode={this.state.mode}\r\n              color={this.state.color}\r\n              changeColor={this.changeColor}\r\n              changeFilter={this.changeFilter}\r\n              changeBrush={this.changeBrush}\r\n              changeShape={this.changeShape}\r\n              changeBezier={this.changeBezier}\r\n              returnStage={this.returnStage}\r\n            />\r\n            <Stage className={'drawing-place stage'}\r\n              width={window.innerWidth}\r\n              height={window.innerHeight - 100 - 13}\r\n              onMouseMove={(e) => { this.Mouse.mouseCircle(e) }}\r\n              ref={node => { this.stage = node }}\r\n              fill={'red'}\r\n            >\r\n            </Stage>\r\n          </main>\r\n\r\n          <footer>\r\n            <div className='footer-wrapper wrapper'>\r\n              Soon there will be a footer here !\r\n            </div>\r\n          </footer>\r\n      </div>\r\n    );\r\n  }\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}